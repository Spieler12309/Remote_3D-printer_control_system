#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for device 'hps_0_bridges', class 'hps_bridge_avalon'
 * Path to the device is from the master group 'f2sdram_only_master'.
 * The macros are prefixed with 'F2SDRAM_ONLY_MASTER_HPS_0_BRIDGES_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define F2SDRAM_ONLY_MASTER_HPS_0_BRIDGES_COMPONENT_TYPE hps_bridge_avalon
#define F2SDRAM_ONLY_MASTER_HPS_0_BRIDGES_COMPONENT_NAME hps_0_bridges
#define F2SDRAM_ONLY_MASTER_HPS_0_BRIDGES_BASE 0x0
#define F2SDRAM_ONLY_MASTER_HPS_0_BRIDGES_SPAN 0xffffffff
#define F2SDRAM_ONLY_MASTER_HPS_0_BRIDGES_END 0xfffffffe

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define FPGA_ONLY_MASTER_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define FPGA_ONLY_MASTER_SYSID_QSYS_BASE 0x1000
#define FPGA_ONLY_MASTER_SYSID_QSYS_SPAN 8
#define FPGA_ONLY_MASTER_SYSID_QSYS_END 0x1007
#define FPGA_ONLY_MASTER_SYSID_QSYS_ID 4294906626
#define FPGA_ONLY_MASTER_SYSID_QSYS_TIMESTAMP 1590594581

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define FPGA_ONLY_MASTER_JTAG_UART_COMPONENT_NAME jtag_uart
#define FPGA_ONLY_MASTER_JTAG_UART_BASE 0x2000
#define FPGA_ONLY_MASTER_JTAG_UART_SPAN 8
#define FPGA_ONLY_MASTER_JTAG_UART_END 0x2007
#define FPGA_ONLY_MASTER_JTAG_UART_READ_DEPTH 64
#define FPGA_ONLY_MASTER_JTAG_UART_READ_THRESHOLD 8
#define FPGA_ONLY_MASTER_JTAG_UART_WRITE_DEPTH 64
#define FPGA_ONLY_MASTER_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'flags_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_FLAGS_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_FLAGS_IN_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_FLAGS_IN_COMPONENT_NAME flags_in
#define FPGA_ONLY_MASTER_FLAGS_IN_BASE 0x4000
#define FPGA_ONLY_MASTER_FLAGS_IN_SPAN 16
#define FPGA_ONLY_MASTER_FLAGS_IN_END 0x400f
#define FPGA_ONLY_MASTER_FLAGS_IN_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_FLAGS_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_FLAGS_IN_CAPTURE 0
#define FPGA_ONLY_MASTER_FLAGS_IN_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_FLAGS_IN_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_FLAGS_IN_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_FLAGS_IN_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_FLAGS_IN_FREQ 50000000
#define FPGA_ONLY_MASTER_FLAGS_IN_HAS_IN 1
#define FPGA_ONLY_MASTER_FLAGS_IN_HAS_OUT 0
#define FPGA_ONLY_MASTER_FLAGS_IN_HAS_TRI 0
#define FPGA_ONLY_MASTER_FLAGS_IN_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_FLAGS_IN_RESET_VALUE 0

/*
 * Macros for device 'flags_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_FLAGS_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_FLAGS_OUT_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_FLAGS_OUT_COMPONENT_NAME flags_out
#define FPGA_ONLY_MASTER_FLAGS_OUT_BASE 0x4020
#define FPGA_ONLY_MASTER_FLAGS_OUT_SPAN 16
#define FPGA_ONLY_MASTER_FLAGS_OUT_END 0x402f
#define FPGA_ONLY_MASTER_FLAGS_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_FLAGS_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_FLAGS_OUT_CAPTURE 0
#define FPGA_ONLY_MASTER_FLAGS_OUT_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_FLAGS_OUT_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_FLAGS_OUT_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_FLAGS_OUT_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_FLAGS_OUT_FREQ 50000000
#define FPGA_ONLY_MASTER_FLAGS_OUT_HAS_IN 0
#define FPGA_ONLY_MASTER_FLAGS_OUT_HAS_OUT 1
#define FPGA_ONLY_MASTER_FLAGS_OUT_HAS_TRI 0
#define FPGA_ONLY_MASTER_FLAGS_OUT_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_FLAGS_OUT_RESET_VALUE 0

/*
 * Macros for device 'command_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_TYPE_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_TYPE_COMPONENT_NAME command_type
#define FPGA_ONLY_MASTER_COMMAND_TYPE_BASE 0x4040
#define FPGA_ONLY_MASTER_COMMAND_TYPE_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_TYPE_END 0x404f
#define FPGA_ONLY_MASTER_COMMAND_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_TYPE_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_TYPE_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_TYPE_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_TYPE_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_TYPE_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_TYPE_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_TYPE_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_TYPE_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_TYPE_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_TYPE_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_TYPE_RESET_VALUE 0

/*
 * Macros for device 'command_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_X_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_X_COMPONENT_NAME command_x
#define FPGA_ONLY_MASTER_COMMAND_X_BASE 0x5000
#define FPGA_ONLY_MASTER_COMMAND_X_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_X_END 0x500f
#define FPGA_ONLY_MASTER_COMMAND_X_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_X_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_X_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_X_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_X_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_X_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_X_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_X_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_X_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_X_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_X_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_X_RESET_VALUE 0

/*
 * Macros for device 'command_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_Y_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_Y_COMPONENT_NAME command_y
#define FPGA_ONLY_MASTER_COMMAND_Y_BASE 0x5020
#define FPGA_ONLY_MASTER_COMMAND_Y_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_Y_END 0x502f
#define FPGA_ONLY_MASTER_COMMAND_Y_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_Y_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_Y_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_Y_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_Y_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_Y_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_Y_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_Y_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_Y_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_Y_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_Y_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_Y_RESET_VALUE 0

/*
 * Macros for device 'command_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_Z_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_Z_COMPONENT_NAME command_z
#define FPGA_ONLY_MASTER_COMMAND_Z_BASE 0x5040
#define FPGA_ONLY_MASTER_COMMAND_Z_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_Z_END 0x504f
#define FPGA_ONLY_MASTER_COMMAND_Z_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_Z_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_Z_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_Z_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_Z_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_Z_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_Z_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_Z_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_Z_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_Z_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_Z_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_Z_RESET_VALUE 0

/*
 * Macros for device 'command_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_E0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_E0_COMPONENT_NAME command_e0
#define FPGA_ONLY_MASTER_COMMAND_E0_BASE 0x5060
#define FPGA_ONLY_MASTER_COMMAND_E0_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_E0_END 0x506f
#define FPGA_ONLY_MASTER_COMMAND_E0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_E0_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_E0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_E0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_E0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_E0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_E0_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_E0_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_E0_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_E0_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_E0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_E0_RESET_VALUE 0

/*
 * Macros for device 'command_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_E1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_E1_COMPONENT_NAME command_e1
#define FPGA_ONLY_MASTER_COMMAND_E1_BASE 0x5080
#define FPGA_ONLY_MASTER_COMMAND_E1_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_E1_END 0x508f
#define FPGA_ONLY_MASTER_COMMAND_E1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_E1_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_E1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_E1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_E1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_E1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_E1_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_E1_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_E1_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_E1_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_E1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_E1_RESET_VALUE 0

/*
 * Macros for device 'command_f_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_F_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_F_X_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_F_X_COMPONENT_NAME command_f_x
#define FPGA_ONLY_MASTER_COMMAND_F_X_BASE 0x50a0
#define FPGA_ONLY_MASTER_COMMAND_F_X_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_F_X_END 0x50af
#define FPGA_ONLY_MASTER_COMMAND_F_X_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_X_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_F_X_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_F_X_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_F_X_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_F_X_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_X_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_F_X_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_F_X_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_F_X_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_F_X_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_X_RESET_VALUE 0

/*
 * Macros for device 'command_t', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_T_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_T_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_T_COMPONENT_NAME command_t
#define FPGA_ONLY_MASTER_COMMAND_T_BASE 0x50c0
#define FPGA_ONLY_MASTER_COMMAND_T_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_T_END 0x50cf
#define FPGA_ONLY_MASTER_COMMAND_T_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_T_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_T_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_T_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_COMMAND_T_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_T_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_T_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_T_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_T_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_T_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_T_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_T_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_T_RESET_VALUE 0

/*
 * Macros for device 'command_dt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_DT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_DT_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_DT_COMPONENT_NAME command_dt
#define FPGA_ONLY_MASTER_COMMAND_DT_BASE 0x50e0
#define FPGA_ONLY_MASTER_COMMAND_DT_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_DT_END 0x50ef
#define FPGA_ONLY_MASTER_COMMAND_DT_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_DT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_DT_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_DT_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_COMMAND_DT_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_DT_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_DT_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_DT_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_DT_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_DT_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_DT_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_DT_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_DT_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_COMPONENT_NAME settings_max_speed_x
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_BASE 0x5100
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_END 0x510f
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_X_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_COMPONENT_NAME settings_max_speed_y
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_BASE 0x5120
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_END 0x512f
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_COMPONENT_NAME settings_max_speed_z
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_BASE 0x5140
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_END 0x514f
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_COMPONENT_NAME settings_max_speed_e0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_BASE 0x5160
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_END 0x516f
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_COMPONENT_NAME settings_max_speed_e1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_BASE 0x5180
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_END 0x518f
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_SPEED_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_COMPONENT_NAME settings_acceleration_x
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_BASE 0x51a0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_END 0x51af
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_X_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_COMPONENT_NAME settings_acceleration_y
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_BASE 0x51c0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_END 0x51cf
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_COMPONENT_NAME settings_acceleration_z
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_BASE 0x51e0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_END 0x51ef
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_COMPONENT_NAME settings_acceleration_e0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_BASE 0x5200
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_END 0x520f
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_COMPONENT_NAME settings_acceleration_e1
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_BASE 0x5220
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_END 0x522f
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_ACCELERATION_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_JERK_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_COMPONENT_NAME settings_jerk_x
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_BASE 0x5240
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_END 0x524f
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_X_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_JERK_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_COMPONENT_NAME settings_jerk_y
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_BASE 0x5260
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_END 0x526f
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_JERK_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_COMPONENT_NAME settings_jerk_z
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_BASE 0x5280
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_END 0x528f
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_JERK_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_COMPONENT_NAME settings_jerk_e0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_BASE 0x52a0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_END 0x52af
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_JERK_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_COMPONENT_NAME settings_jerk_e1
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_BASE 0x52c0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_END 0x52cf
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_JERK_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_COMPONENT_NAME settings_max_temp_e0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_BASE 0x52e0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_END 0x52ef
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_COMPONENT_NAME settings_max_temp_e1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_BASE 0x5300
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_END 0x530f
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_bed', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_COMPONENT_NAME settings_max_temp_bed
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_BASE 0x5320
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_SPAN 16
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_END 0x532f
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_CAPTURE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_FREQ 50000000
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_HAS_IN 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_HAS_OUT 1
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_HAS_TRI 0
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SETTINGS_MAX_TEMP_BED_RESET_VALUE 0

/*
 * Macros for device 'command_f_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_F_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_F_Y_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_F_Y_COMPONENT_NAME command_f_y
#define FPGA_ONLY_MASTER_COMMAND_F_Y_BASE 0x5340
#define FPGA_ONLY_MASTER_COMMAND_F_Y_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_F_Y_END 0x534f
#define FPGA_ONLY_MASTER_COMMAND_F_Y_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_Y_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_F_Y_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_F_Y_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_F_Y_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_F_Y_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_Y_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_F_Y_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_F_Y_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_F_Y_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_F_Y_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_Y_RESET_VALUE 0

/*
 * Macros for device 'command_f_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_F_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_F_Z_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_F_Z_COMPONENT_NAME command_f_z
#define FPGA_ONLY_MASTER_COMMAND_F_Z_BASE 0x5360
#define FPGA_ONLY_MASTER_COMMAND_F_Z_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_F_Z_END 0x536f
#define FPGA_ONLY_MASTER_COMMAND_F_Z_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_Z_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_F_Z_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_F_Z_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_F_Z_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_F_Z_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_Z_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_F_Z_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_F_Z_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_F_Z_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_F_Z_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_Z_RESET_VALUE 0

/*
 * Macros for device 'command_f_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_F_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_F_E0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_F_E0_COMPONENT_NAME command_f_e0
#define FPGA_ONLY_MASTER_COMMAND_F_E0_BASE 0x5380
#define FPGA_ONLY_MASTER_COMMAND_F_E0_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_F_E0_END 0x538f
#define FPGA_ONLY_MASTER_COMMAND_F_E0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_E0_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_F_E0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_F_E0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_F_E0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_F_E0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_E0_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_F_E0_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_F_E0_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_F_E0_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_F_E0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_E0_RESET_VALUE 0

/*
 * Macros for device 'command_f_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_COMMAND_F_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_COMMAND_F_E1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_COMMAND_F_E1_COMPONENT_NAME command_f_e1
#define FPGA_ONLY_MASTER_COMMAND_F_E1_BASE 0x53a0
#define FPGA_ONLY_MASTER_COMMAND_F_E1_SPAN 16
#define FPGA_ONLY_MASTER_COMMAND_F_E1_END 0x53af
#define FPGA_ONLY_MASTER_COMMAND_F_E1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_COMMAND_F_E1_CAPTURE 0
#define FPGA_ONLY_MASTER_COMMAND_F_E1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_COMMAND_F_E1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_COMMAND_F_E1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_COMMAND_F_E1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_E1_FREQ 50000000
#define FPGA_ONLY_MASTER_COMMAND_F_E1_HAS_IN 0
#define FPGA_ONLY_MASTER_COMMAND_F_E1_HAS_OUT 1
#define FPGA_ONLY_MASTER_COMMAND_F_E1_HAS_TRI 0
#define FPGA_ONLY_MASTER_COMMAND_F_E1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_COMMAND_F_E1_RESET_VALUE 0

/*
 * Macros for device 'temp_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TEMP_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TEMP_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TEMP_0_COMPONENT_NAME temp_0
#define FPGA_ONLY_MASTER_TEMP_0_BASE 0x6000
#define FPGA_ONLY_MASTER_TEMP_0_SPAN 16
#define FPGA_ONLY_MASTER_TEMP_0_END 0x600f
#define FPGA_ONLY_MASTER_TEMP_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TEMP_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TEMP_0_CAPTURE 0
#define FPGA_ONLY_MASTER_TEMP_0_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_TEMP_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TEMP_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TEMP_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TEMP_0_FREQ 50000000
#define FPGA_ONLY_MASTER_TEMP_0_HAS_IN 1
#define FPGA_ONLY_MASTER_TEMP_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_TEMP_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_TEMP_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TEMP_0_RESET_VALUE 0

/*
 * Macros for device 'temp_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TEMP_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TEMP_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TEMP_1_COMPONENT_NAME temp_1
#define FPGA_ONLY_MASTER_TEMP_1_BASE 0x6020
#define FPGA_ONLY_MASTER_TEMP_1_SPAN 16
#define FPGA_ONLY_MASTER_TEMP_1_END 0x602f
#define FPGA_ONLY_MASTER_TEMP_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TEMP_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TEMP_1_CAPTURE 0
#define FPGA_ONLY_MASTER_TEMP_1_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_TEMP_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TEMP_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TEMP_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TEMP_1_FREQ 50000000
#define FPGA_ONLY_MASTER_TEMP_1_HAS_IN 1
#define FPGA_ONLY_MASTER_TEMP_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_TEMP_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_TEMP_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TEMP_1_RESET_VALUE 0

/*
 * Macros for device 'temp_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TEMP_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TEMP_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TEMP_2_COMPONENT_NAME temp_2
#define FPGA_ONLY_MASTER_TEMP_2_BASE 0x6040
#define FPGA_ONLY_MASTER_TEMP_2_SPAN 16
#define FPGA_ONLY_MASTER_TEMP_2_END 0x604f
#define FPGA_ONLY_MASTER_TEMP_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TEMP_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TEMP_2_CAPTURE 0
#define FPGA_ONLY_MASTER_TEMP_2_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_TEMP_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TEMP_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TEMP_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TEMP_2_FREQ 50000000
#define FPGA_ONLY_MASTER_TEMP_2_HAS_IN 1
#define FPGA_ONLY_MASTER_TEMP_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_TEMP_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_TEMP_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TEMP_2_RESET_VALUE 0

/*
 * Macros for device 'position_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_POSITION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_POSITION_X_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_POSITION_X_COMPONENT_NAME position_x
#define FPGA_ONLY_MASTER_POSITION_X_BASE 0x6060
#define FPGA_ONLY_MASTER_POSITION_X_SPAN 16
#define FPGA_ONLY_MASTER_POSITION_X_END 0x606f
#define FPGA_ONLY_MASTER_POSITION_X_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_X_CAPTURE 0
#define FPGA_ONLY_MASTER_POSITION_X_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_POSITION_X_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_POSITION_X_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_POSITION_X_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_X_FREQ 50000000
#define FPGA_ONLY_MASTER_POSITION_X_HAS_IN 1
#define FPGA_ONLY_MASTER_POSITION_X_HAS_OUT 0
#define FPGA_ONLY_MASTER_POSITION_X_HAS_TRI 0
#define FPGA_ONLY_MASTER_POSITION_X_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_X_RESET_VALUE 0

/*
 * Macros for device 'position_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_POSITION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_POSITION_Y_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_POSITION_Y_COMPONENT_NAME position_y
#define FPGA_ONLY_MASTER_POSITION_Y_BASE 0x6080
#define FPGA_ONLY_MASTER_POSITION_Y_SPAN 16
#define FPGA_ONLY_MASTER_POSITION_Y_END 0x608f
#define FPGA_ONLY_MASTER_POSITION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_Y_CAPTURE 0
#define FPGA_ONLY_MASTER_POSITION_Y_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_POSITION_Y_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_POSITION_Y_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_POSITION_Y_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_Y_FREQ 50000000
#define FPGA_ONLY_MASTER_POSITION_Y_HAS_IN 1
#define FPGA_ONLY_MASTER_POSITION_Y_HAS_OUT 0
#define FPGA_ONLY_MASTER_POSITION_Y_HAS_TRI 0
#define FPGA_ONLY_MASTER_POSITION_Y_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_Y_RESET_VALUE 0

/*
 * Macros for device 'position_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_POSITION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_POSITION_Z_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_POSITION_Z_COMPONENT_NAME position_z
#define FPGA_ONLY_MASTER_POSITION_Z_BASE 0x60a0
#define FPGA_ONLY_MASTER_POSITION_Z_SPAN 16
#define FPGA_ONLY_MASTER_POSITION_Z_END 0x60af
#define FPGA_ONLY_MASTER_POSITION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_Z_CAPTURE 0
#define FPGA_ONLY_MASTER_POSITION_Z_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_POSITION_Z_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_POSITION_Z_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_POSITION_Z_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_Z_FREQ 50000000
#define FPGA_ONLY_MASTER_POSITION_Z_HAS_IN 1
#define FPGA_ONLY_MASTER_POSITION_Z_HAS_OUT 0
#define FPGA_ONLY_MASTER_POSITION_Z_HAS_TRI 0
#define FPGA_ONLY_MASTER_POSITION_Z_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_Z_RESET_VALUE 0

/*
 * Macros for device 'position_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_POSITION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_POSITION_E0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_POSITION_E0_COMPONENT_NAME position_e0
#define FPGA_ONLY_MASTER_POSITION_E0_BASE 0x60c0
#define FPGA_ONLY_MASTER_POSITION_E0_SPAN 16
#define FPGA_ONLY_MASTER_POSITION_E0_END 0x60cf
#define FPGA_ONLY_MASTER_POSITION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_E0_CAPTURE 0
#define FPGA_ONLY_MASTER_POSITION_E0_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_POSITION_E0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_POSITION_E0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_POSITION_E0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_E0_FREQ 50000000
#define FPGA_ONLY_MASTER_POSITION_E0_HAS_IN 1
#define FPGA_ONLY_MASTER_POSITION_E0_HAS_OUT 0
#define FPGA_ONLY_MASTER_POSITION_E0_HAS_TRI 0
#define FPGA_ONLY_MASTER_POSITION_E0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_E0_RESET_VALUE 0

/*
 * Macros for device 'position_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_POSITION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_POSITION_E1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_POSITION_E1_COMPONENT_NAME position_e1
#define FPGA_ONLY_MASTER_POSITION_E1_BASE 0x60e0
#define FPGA_ONLY_MASTER_POSITION_E1_SPAN 16
#define FPGA_ONLY_MASTER_POSITION_E1_END 0x60ef
#define FPGA_ONLY_MASTER_POSITION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_E1_CAPTURE 0
#define FPGA_ONLY_MASTER_POSITION_E1_DATA_WIDTH 12
#define FPGA_ONLY_MASTER_POSITION_E1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_POSITION_E1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_POSITION_E1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_E1_FREQ 50000000
#define FPGA_ONLY_MASTER_POSITION_E1_HAS_IN 1
#define FPGA_ONLY_MASTER_POSITION_E1_HAS_OUT 0
#define FPGA_ONLY_MASTER_POSITION_E1_HAS_TRI 0
#define FPGA_ONLY_MASTER_POSITION_E1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_E1_RESET_VALUE 0

/*
 * Macros for device 'position_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_POSITION_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_POSITION_TYPE_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_POSITION_TYPE_COMPONENT_NAME position_type
#define FPGA_ONLY_MASTER_POSITION_TYPE_BASE 0x6100
#define FPGA_ONLY_MASTER_POSITION_TYPE_SPAN 16
#define FPGA_ONLY_MASTER_POSITION_TYPE_END 0x610f
#define FPGA_ONLY_MASTER_POSITION_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_TYPE_CAPTURE 0
#define FPGA_ONLY_MASTER_POSITION_TYPE_DATA_WIDTH 1
#define FPGA_ONLY_MASTER_POSITION_TYPE_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_POSITION_TYPE_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_POSITION_TYPE_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_TYPE_FREQ 50000000
#define FPGA_ONLY_MASTER_POSITION_TYPE_HAS_IN 1
#define FPGA_ONLY_MASTER_POSITION_TYPE_HAS_OUT 0
#define FPGA_ONLY_MASTER_POSITION_TYPE_HAS_TRI 0
#define FPGA_ONLY_MASTER_POSITION_TYPE_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_TYPE_RESET_VALUE 0

/*
 * Macros for device 'position_extruder_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_COMPONENT_NAME position_extruder_type
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_BASE 0x6120
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_SPAN 16
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_END 0x612f
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_CAPTURE 0
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_DATA_WIDTH 1
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_FREQ 50000000
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_HAS_IN 1
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_HAS_OUT 0
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_HAS_TRI 0
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_POSITION_EXTRUDER_TYPE_RESET_VALUE 0

/*
 * Macros for device 'params_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_X_0_COMPONENT_NAME params_x_0
#define FPGA_ONLY_MASTER_PARAMS_X_0_BASE 0x7000
#define FPGA_ONLY_MASTER_PARAMS_X_0_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_X_0_END 0x700f
#define FPGA_ONLY_MASTER_PARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_0_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_X_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_X_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_X_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_0_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_X_0_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_X_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_X_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_X_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'params_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_X_1_COMPONENT_NAME params_x_1
#define FPGA_ONLY_MASTER_PARAMS_X_1_BASE 0x7020
#define FPGA_ONLY_MASTER_PARAMS_X_1_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_X_1_END 0x702f
#define FPGA_ONLY_MASTER_PARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_1_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_X_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_X_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_X_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_1_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_X_1_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_X_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_X_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_X_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'params_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_X_2_COMPONENT_NAME params_x_2
#define FPGA_ONLY_MASTER_PARAMS_X_2_BASE 0x7040
#define FPGA_ONLY_MASTER_PARAMS_X_2_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_X_2_END 0x704f
#define FPGA_ONLY_MASTER_PARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_2_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_X_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_X_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_X_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_2_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_X_2_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_X_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_X_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_X_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'params_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_X_3_COMPONENT_NAME params_x_3
#define FPGA_ONLY_MASTER_PARAMS_X_3_BASE 0x7060
#define FPGA_ONLY_MASTER_PARAMS_X_3_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_X_3_END 0x706f
#define FPGA_ONLY_MASTER_PARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_3_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_X_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_X_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_X_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_3_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_X_3_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_X_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_X_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_X_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'params_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_X_4_COMPONENT_NAME params_x_4
#define FPGA_ONLY_MASTER_PARAMS_X_4_BASE 0x7080
#define FPGA_ONLY_MASTER_PARAMS_X_4_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_X_4_END 0x708f
#define FPGA_ONLY_MASTER_PARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_X_4_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_X_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_X_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_X_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_4_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_X_4_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_X_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_X_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_X_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'params_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Y_0_COMPONENT_NAME params_y_0
#define FPGA_ONLY_MASTER_PARAMS_Y_0_BASE 0x70a0
#define FPGA_ONLY_MASTER_PARAMS_Y_0_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Y_0_END 0x70af
#define FPGA_ONLY_MASTER_PARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_0_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_0_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Y_0_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Y_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Y_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Y_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'params_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Y_1_COMPONENT_NAME params_y_1
#define FPGA_ONLY_MASTER_PARAMS_Y_1_BASE 0x70c0
#define FPGA_ONLY_MASTER_PARAMS_Y_1_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Y_1_END 0x70cf
#define FPGA_ONLY_MASTER_PARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_1_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_1_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Y_1_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Y_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Y_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Y_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'params_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Y_2_COMPONENT_NAME params_y_2
#define FPGA_ONLY_MASTER_PARAMS_Y_2_BASE 0x70e0
#define FPGA_ONLY_MASTER_PARAMS_Y_2_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Y_2_END 0x70ef
#define FPGA_ONLY_MASTER_PARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_2_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_2_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Y_2_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Y_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Y_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Y_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'params_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Y_3_COMPONENT_NAME params_y_3
#define FPGA_ONLY_MASTER_PARAMS_Y_3_BASE 0x7100
#define FPGA_ONLY_MASTER_PARAMS_Y_3_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Y_3_END 0x710f
#define FPGA_ONLY_MASTER_PARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_3_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_3_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Y_3_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Y_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Y_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Y_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'params_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Y_4_COMPONENT_NAME params_y_4
#define FPGA_ONLY_MASTER_PARAMS_Y_4_BASE 0x7120
#define FPGA_ONLY_MASTER_PARAMS_Y_4_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Y_4_END 0x712f
#define FPGA_ONLY_MASTER_PARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Y_4_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Y_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_4_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Y_4_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Y_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Y_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Y_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'params_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Z_0_COMPONENT_NAME params_z_0
#define FPGA_ONLY_MASTER_PARAMS_Z_0_BASE 0x7140
#define FPGA_ONLY_MASTER_PARAMS_Z_0_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Z_0_END 0x714f
#define FPGA_ONLY_MASTER_PARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_0_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_0_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Z_0_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Z_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Z_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Z_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'params_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Z_1_COMPONENT_NAME params_z_1
#define FPGA_ONLY_MASTER_PARAMS_Z_1_BASE 0x7160
#define FPGA_ONLY_MASTER_PARAMS_Z_1_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Z_1_END 0x716f
#define FPGA_ONLY_MASTER_PARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_1_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_1_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Z_1_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Z_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Z_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Z_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'params_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Z_2_COMPONENT_NAME params_z_2
#define FPGA_ONLY_MASTER_PARAMS_Z_2_BASE 0x7180
#define FPGA_ONLY_MASTER_PARAMS_Z_2_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Z_2_END 0x718f
#define FPGA_ONLY_MASTER_PARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_2_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_2_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Z_2_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Z_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Z_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Z_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'params_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Z_3_COMPONENT_NAME params_z_3
#define FPGA_ONLY_MASTER_PARAMS_Z_3_BASE 0x71a0
#define FPGA_ONLY_MASTER_PARAMS_Z_3_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Z_3_END 0x71af
#define FPGA_ONLY_MASTER_PARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_3_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_3_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Z_3_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Z_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Z_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Z_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'params_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_Z_4_COMPONENT_NAME params_z_4
#define FPGA_ONLY_MASTER_PARAMS_Z_4_BASE 0x71c0
#define FPGA_ONLY_MASTER_PARAMS_Z_4_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_Z_4_END 0x71cf
#define FPGA_ONLY_MASTER_PARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_Z_4_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_Z_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_4_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_Z_4_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_Z_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_Z_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_Z_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'params_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E0_0_COMPONENT_NAME params_e0_0
#define FPGA_ONLY_MASTER_PARAMS_E0_0_BASE 0x71e0
#define FPGA_ONLY_MASTER_PARAMS_E0_0_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E0_0_END 0x71ef
#define FPGA_ONLY_MASTER_PARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_0_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_0_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E0_0_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E0_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E0_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E0_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'params_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E0_1_COMPONENT_NAME params_e0_1
#define FPGA_ONLY_MASTER_PARAMS_E0_1_BASE 0x7200
#define FPGA_ONLY_MASTER_PARAMS_E0_1_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E0_1_END 0x720f
#define FPGA_ONLY_MASTER_PARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_1_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_1_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E0_1_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E0_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E0_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E0_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'params_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E0_2_COMPONENT_NAME params_e0_2
#define FPGA_ONLY_MASTER_PARAMS_E0_2_BASE 0x7220
#define FPGA_ONLY_MASTER_PARAMS_E0_2_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E0_2_END 0x722f
#define FPGA_ONLY_MASTER_PARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_2_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_2_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E0_2_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E0_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E0_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E0_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'params_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E0_3_COMPONENT_NAME params_e0_3
#define FPGA_ONLY_MASTER_PARAMS_E0_3_BASE 0x7240
#define FPGA_ONLY_MASTER_PARAMS_E0_3_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E0_3_END 0x724f
#define FPGA_ONLY_MASTER_PARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_3_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_3_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E0_3_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E0_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E0_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E0_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'params_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E0_4_COMPONENT_NAME params_e0_4
#define FPGA_ONLY_MASTER_PARAMS_E0_4_BASE 0x7260
#define FPGA_ONLY_MASTER_PARAMS_E0_4_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E0_4_END 0x726f
#define FPGA_ONLY_MASTER_PARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E0_4_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E0_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_4_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E0_4_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E0_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E0_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E0_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'params_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E1_0_COMPONENT_NAME params_e1_0
#define FPGA_ONLY_MASTER_PARAMS_E1_0_BASE 0x7280
#define FPGA_ONLY_MASTER_PARAMS_E1_0_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E1_0_END 0x728f
#define FPGA_ONLY_MASTER_PARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_0_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_0_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E1_0_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E1_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E1_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E1_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'params_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E1_1_COMPONENT_NAME params_e1_1
#define FPGA_ONLY_MASTER_PARAMS_E1_1_BASE 0x72a0
#define FPGA_ONLY_MASTER_PARAMS_E1_1_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E1_1_END 0x72af
#define FPGA_ONLY_MASTER_PARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_1_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_1_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E1_1_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E1_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E1_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E1_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'params_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E1_2_COMPONENT_NAME params_e1_2
#define FPGA_ONLY_MASTER_PARAMS_E1_2_BASE 0x72c0
#define FPGA_ONLY_MASTER_PARAMS_E1_2_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E1_2_END 0x72cf
#define FPGA_ONLY_MASTER_PARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_2_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_2_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E1_2_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E1_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E1_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E1_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'params_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E1_3_COMPONENT_NAME params_e1_3
#define FPGA_ONLY_MASTER_PARAMS_E1_3_BASE 0x72e0
#define FPGA_ONLY_MASTER_PARAMS_E1_3_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E1_3_END 0x72ef
#define FPGA_ONLY_MASTER_PARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_3_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_3_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E1_3_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E1_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E1_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E1_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'params_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PARAMS_E1_4_COMPONENT_NAME params_e1_4
#define FPGA_ONLY_MASTER_PARAMS_E1_4_BASE 0x7300
#define FPGA_ONLY_MASTER_PARAMS_E1_4_SPAN 16
#define FPGA_ONLY_MASTER_PARAMS_E1_4_END 0x730f
#define FPGA_ONLY_MASTER_PARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PARAMS_E1_4_CAPTURE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_PARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PARAMS_E1_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_4_FREQ 50000000
#define FPGA_ONLY_MASTER_PARAMS_E1_4_HAS_IN 1
#define FPGA_ONLY_MASTER_PARAMS_E1_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_PARAMS_E1_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_PARAMS_E1_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'timing_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_X_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_X_0_COMPONENT_NAME timing_x_0
#define FPGA_ONLY_MASTER_TIMING_X_0_BASE 0x7320
#define FPGA_ONLY_MASTER_TIMING_X_0_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_X_0_END 0x732f
#define FPGA_ONLY_MASTER_TIMING_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_X_0_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_X_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_X_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_X_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_X_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_X_0_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_X_0_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_X_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_X_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_X_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_X_0_RESET_VALUE 0

/*
 * Macros for device 'timing_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_X_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_X_1_COMPONENT_NAME timing_x_1
#define FPGA_ONLY_MASTER_TIMING_X_1_BASE 0x7340
#define FPGA_ONLY_MASTER_TIMING_X_1_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_X_1_END 0x734f
#define FPGA_ONLY_MASTER_TIMING_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_X_1_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_X_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_X_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_X_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_X_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_X_1_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_X_1_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_X_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_X_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_X_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_X_1_RESET_VALUE 0

/*
 * Macros for device 'timing_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_X_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_X_2_COMPONENT_NAME timing_x_2
#define FPGA_ONLY_MASTER_TIMING_X_2_BASE 0x7360
#define FPGA_ONLY_MASTER_TIMING_X_2_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_X_2_END 0x736f
#define FPGA_ONLY_MASTER_TIMING_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_X_2_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_X_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_X_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_X_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_X_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_X_2_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_X_2_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_X_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_X_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_X_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_X_2_RESET_VALUE 0

/*
 * Macros for device 'timing_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_X_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_X_3_COMPONENT_NAME timing_x_3
#define FPGA_ONLY_MASTER_TIMING_X_3_BASE 0x7380
#define FPGA_ONLY_MASTER_TIMING_X_3_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_X_3_END 0x738f
#define FPGA_ONLY_MASTER_TIMING_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_X_3_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_X_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_X_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_X_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_X_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_X_3_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_X_3_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_X_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_X_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_X_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_X_3_RESET_VALUE 0

/*
 * Macros for device 'timing_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_Y_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_Y_0_COMPONENT_NAME timing_y_0
#define FPGA_ONLY_MASTER_TIMING_Y_0_BASE 0x73a0
#define FPGA_ONLY_MASTER_TIMING_Y_0_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_Y_0_END 0x73af
#define FPGA_ONLY_MASTER_TIMING_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Y_0_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_Y_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_Y_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_Y_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_Y_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Y_0_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_Y_0_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_Y_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_Y_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_Y_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Y_0_RESET_VALUE 0

/*
 * Macros for device 'timing_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_Y_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_Y_1_COMPONENT_NAME timing_y_1
#define FPGA_ONLY_MASTER_TIMING_Y_1_BASE 0x73c0
#define FPGA_ONLY_MASTER_TIMING_Y_1_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_Y_1_END 0x73cf
#define FPGA_ONLY_MASTER_TIMING_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Y_1_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_Y_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_Y_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_Y_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_Y_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Y_1_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_Y_1_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_Y_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_Y_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_Y_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Y_1_RESET_VALUE 0

/*
 * Macros for device 'timing_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_Y_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_Y_2_COMPONENT_NAME timing_y_2
#define FPGA_ONLY_MASTER_TIMING_Y_2_BASE 0x73e0
#define FPGA_ONLY_MASTER_TIMING_Y_2_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_Y_2_END 0x73ef
#define FPGA_ONLY_MASTER_TIMING_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Y_2_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_Y_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_Y_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_Y_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_Y_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Y_2_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_Y_2_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_Y_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_Y_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_Y_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Y_2_RESET_VALUE 0

/*
 * Macros for device 'timing_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_Y_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_Y_3_COMPONENT_NAME timing_y_3
#define FPGA_ONLY_MASTER_TIMING_Y_3_BASE 0x7400
#define FPGA_ONLY_MASTER_TIMING_Y_3_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_Y_3_END 0x740f
#define FPGA_ONLY_MASTER_TIMING_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Y_3_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_Y_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_Y_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_Y_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_Y_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Y_3_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_Y_3_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_Y_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_Y_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_Y_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Y_3_RESET_VALUE 0

/*
 * Macros for device 'timing_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_Z_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_Z_0_COMPONENT_NAME timing_z_0
#define FPGA_ONLY_MASTER_TIMING_Z_0_BASE 0x7420
#define FPGA_ONLY_MASTER_TIMING_Z_0_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_Z_0_END 0x742f
#define FPGA_ONLY_MASTER_TIMING_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Z_0_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_Z_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_Z_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_Z_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_Z_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Z_0_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_Z_0_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_Z_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_Z_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_Z_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Z_0_RESET_VALUE 0

/*
 * Macros for device 'timing_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_Z_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_Z_1_COMPONENT_NAME timing_z_1
#define FPGA_ONLY_MASTER_TIMING_Z_1_BASE 0x7440
#define FPGA_ONLY_MASTER_TIMING_Z_1_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_Z_1_END 0x744f
#define FPGA_ONLY_MASTER_TIMING_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Z_1_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_Z_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_Z_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_Z_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_Z_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Z_1_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_Z_1_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_Z_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_Z_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_Z_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Z_1_RESET_VALUE 0

/*
 * Macros for device 'timing_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_Z_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_Z_2_COMPONENT_NAME timing_z_2
#define FPGA_ONLY_MASTER_TIMING_Z_2_BASE 0x7460
#define FPGA_ONLY_MASTER_TIMING_Z_2_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_Z_2_END 0x746f
#define FPGA_ONLY_MASTER_TIMING_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Z_2_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_Z_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_Z_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_Z_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_Z_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Z_2_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_Z_2_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_Z_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_Z_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_Z_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Z_2_RESET_VALUE 0

/*
 * Macros for device 'timing_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_Z_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_Z_3_COMPONENT_NAME timing_z_3
#define FPGA_ONLY_MASTER_TIMING_Z_3_BASE 0x7480
#define FPGA_ONLY_MASTER_TIMING_Z_3_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_Z_3_END 0x748f
#define FPGA_ONLY_MASTER_TIMING_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_Z_3_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_Z_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_Z_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_Z_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_Z_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Z_3_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_Z_3_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_Z_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_Z_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_Z_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_Z_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_E0_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_E0_0_COMPONENT_NAME timing_e0_0
#define FPGA_ONLY_MASTER_TIMING_E0_0_BASE 0x74a0
#define FPGA_ONLY_MASTER_TIMING_E0_0_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_E0_0_END 0x74af
#define FPGA_ONLY_MASTER_TIMING_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E0_0_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_E0_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_E0_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_E0_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_E0_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E0_0_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_E0_0_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_E0_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_E0_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_E0_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E0_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_E0_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_E0_1_COMPONENT_NAME timing_e0_1
#define FPGA_ONLY_MASTER_TIMING_E0_1_BASE 0x74c0
#define FPGA_ONLY_MASTER_TIMING_E0_1_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_E0_1_END 0x74cf
#define FPGA_ONLY_MASTER_TIMING_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E0_1_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_E0_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_E0_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_E0_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_E0_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E0_1_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_E0_1_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_E0_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_E0_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_E0_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E0_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_E0_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_E0_2_COMPONENT_NAME timing_e0_2
#define FPGA_ONLY_MASTER_TIMING_E0_2_BASE 0x74e0
#define FPGA_ONLY_MASTER_TIMING_E0_2_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_E0_2_END 0x74ef
#define FPGA_ONLY_MASTER_TIMING_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E0_2_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_E0_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_E0_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_E0_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_E0_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E0_2_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_E0_2_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_E0_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_E0_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_E0_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E0_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_E0_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_E0_3_COMPONENT_NAME timing_e0_3
#define FPGA_ONLY_MASTER_TIMING_E0_3_BASE 0x7500
#define FPGA_ONLY_MASTER_TIMING_E0_3_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_E0_3_END 0x750f
#define FPGA_ONLY_MASTER_TIMING_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E0_3_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_E0_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_E0_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_E0_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_E0_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E0_3_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_E0_3_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_E0_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_E0_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_E0_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E0_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_E1_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_E1_0_COMPONENT_NAME timing_e1_0
#define FPGA_ONLY_MASTER_TIMING_E1_0_BASE 0x7520
#define FPGA_ONLY_MASTER_TIMING_E1_0_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_E1_0_END 0x752f
#define FPGA_ONLY_MASTER_TIMING_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E1_0_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_E1_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_E1_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_E1_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_E1_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E1_0_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_E1_0_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_E1_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_E1_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_E1_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E1_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_E1_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_E1_1_COMPONENT_NAME timing_e1_1
#define FPGA_ONLY_MASTER_TIMING_E1_1_BASE 0x7540
#define FPGA_ONLY_MASTER_TIMING_E1_1_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_E1_1_END 0x754f
#define FPGA_ONLY_MASTER_TIMING_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E1_1_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_E1_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_E1_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_E1_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_E1_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E1_1_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_E1_1_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_E1_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_E1_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_E1_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E1_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_E1_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_E1_2_COMPONENT_NAME timing_e1_2
#define FPGA_ONLY_MASTER_TIMING_E1_2_BASE 0x7560
#define FPGA_ONLY_MASTER_TIMING_E1_2_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_E1_2_END 0x756f
#define FPGA_ONLY_MASTER_TIMING_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E1_2_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_E1_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_E1_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_E1_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_E1_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E1_2_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_E1_2_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_E1_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_E1_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_E1_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E1_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TIMING_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TIMING_E1_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TIMING_E1_3_COMPONENT_NAME timing_e1_3
#define FPGA_ONLY_MASTER_TIMING_E1_3_BASE 0x7580
#define FPGA_ONLY_MASTER_TIMING_E1_3_SPAN 16
#define FPGA_ONLY_MASTER_TIMING_E1_3_END 0x758f
#define FPGA_ONLY_MASTER_TIMING_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TIMING_E1_3_CAPTURE 0
#define FPGA_ONLY_MASTER_TIMING_E1_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TIMING_E1_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TIMING_E1_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TIMING_E1_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E1_3_FREQ 50000000
#define FPGA_ONLY_MASTER_TIMING_E1_3_HAS_IN 1
#define FPGA_ONLY_MASTER_TIMING_E1_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_TIMING_E1_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_TIMING_E1_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TIMING_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_COMPONENT_NAME new_rparams_x_0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_BASE 0x75a0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_END 0x75af
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_COMPONENT_NAME new_rparams_x_1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_BASE 0x75c0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_END 0x75cf
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_COMPONENT_NAME new_rparams_x_2
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_BASE 0x75e0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_END 0x75ef
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_COMPONENT_NAME new_rparams_x_3
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_BASE 0x7600
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_END 0x760f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_COMPONENT_NAME new_rparams_x_4
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_BASE 0x7620
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_END 0x762f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_COMPONENT_NAME new_rparams_y_0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_BASE 0x7640
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_END 0x764f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_COMPONENT_NAME new_rparams_y_1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_BASE 0x7660
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_END 0x766f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_COMPONENT_NAME new_rparams_y_2
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_BASE 0x7680
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_END 0x768f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_COMPONENT_NAME new_rparams_y_3
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_BASE 0x76a0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_END 0x76af
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_COMPONENT_NAME new_rparams_y_4
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_BASE 0x76c0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_END 0x76cf
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_COMPONENT_NAME new_rparams_z_0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_BASE 0x76e0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_END 0x76ef
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_COMPONENT_NAME new_rparams_z_1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_BASE 0x7700
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_END 0x770f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_COMPONENT_NAME new_rparams_z_2
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_BASE 0x7720
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_END 0x772f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_COMPONENT_NAME new_rparams_z_3
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_BASE 0x7740
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_END 0x774f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_COMPONENT_NAME new_rparams_z_4
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_BASE 0x7760
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_END 0x776f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_COMPONENT_NAME new_rparams_e0_0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_BASE 0x7780
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_END 0x778f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_COMPONENT_NAME new_rparams_e0_1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_BASE 0x77a0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_END 0x77af
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_COMPONENT_NAME new_rparams_e0_2
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_BASE 0x77c0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_END 0x77cf
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_COMPONENT_NAME new_rparams_e0_3
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_BASE 0x77e0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_END 0x77ef
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_COMPONENT_NAME new_rparams_e0_4
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_BASE 0x7800
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_END 0x780f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_COMPONENT_NAME new_rparams_e1_0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_BASE 0x7820
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_END 0x782f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_COMPONENT_NAME new_rparams_e1_1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_BASE 0x7840
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_END 0x784f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_COMPONENT_NAME new_rparams_e1_2
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_BASE 0x7860
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_END 0x786f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_COMPONENT_NAME new_rparams_e1_3
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_BASE 0x7880
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_END 0x788f
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_COMPONENT_NAME new_rparams_e1_4
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_BASE 0x78a0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_SPAN 16
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_END 0x78af
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_CAPTURE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_FREQ 50000000
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_HAS_IN 1
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_NEW_RPARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'step_x_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_STEP_X_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_STEP_X_NOW_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_STEP_X_NOW_COMPONENT_NAME step_x_now
#define FPGA_ONLY_MASTER_STEP_X_NOW_BASE 0x7900
#define FPGA_ONLY_MASTER_STEP_X_NOW_SPAN 16
#define FPGA_ONLY_MASTER_STEP_X_NOW_END 0x790f
#define FPGA_ONLY_MASTER_STEP_X_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_X_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_X_NOW_CAPTURE 0
#define FPGA_ONLY_MASTER_STEP_X_NOW_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_STEP_X_NOW_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_STEP_X_NOW_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_STEP_X_NOW_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_X_NOW_FREQ 50000000
#define FPGA_ONLY_MASTER_STEP_X_NOW_HAS_IN 1
#define FPGA_ONLY_MASTER_STEP_X_NOW_HAS_OUT 0
#define FPGA_ONLY_MASTER_STEP_X_NOW_HAS_TRI 0
#define FPGA_ONLY_MASTER_STEP_X_NOW_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_X_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_y_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_STEP_Y_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_STEP_Y_NOW_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_STEP_Y_NOW_COMPONENT_NAME step_y_now
#define FPGA_ONLY_MASTER_STEP_Y_NOW_BASE 0x7920
#define FPGA_ONLY_MASTER_STEP_Y_NOW_SPAN 16
#define FPGA_ONLY_MASTER_STEP_Y_NOW_END 0x792f
#define FPGA_ONLY_MASTER_STEP_Y_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_Y_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_Y_NOW_CAPTURE 0
#define FPGA_ONLY_MASTER_STEP_Y_NOW_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_STEP_Y_NOW_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_STEP_Y_NOW_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_STEP_Y_NOW_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_Y_NOW_FREQ 50000000
#define FPGA_ONLY_MASTER_STEP_Y_NOW_HAS_IN 1
#define FPGA_ONLY_MASTER_STEP_Y_NOW_HAS_OUT 0
#define FPGA_ONLY_MASTER_STEP_Y_NOW_HAS_TRI 0
#define FPGA_ONLY_MASTER_STEP_Y_NOW_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_Y_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_z_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_STEP_Z_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_STEP_Z_NOW_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_STEP_Z_NOW_COMPONENT_NAME step_z_now
#define FPGA_ONLY_MASTER_STEP_Z_NOW_BASE 0x7940
#define FPGA_ONLY_MASTER_STEP_Z_NOW_SPAN 16
#define FPGA_ONLY_MASTER_STEP_Z_NOW_END 0x794f
#define FPGA_ONLY_MASTER_STEP_Z_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_Z_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_Z_NOW_CAPTURE 0
#define FPGA_ONLY_MASTER_STEP_Z_NOW_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_STEP_Z_NOW_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_STEP_Z_NOW_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_STEP_Z_NOW_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_Z_NOW_FREQ 50000000
#define FPGA_ONLY_MASTER_STEP_Z_NOW_HAS_IN 1
#define FPGA_ONLY_MASTER_STEP_Z_NOW_HAS_OUT 0
#define FPGA_ONLY_MASTER_STEP_Z_NOW_HAS_TRI 0
#define FPGA_ONLY_MASTER_STEP_Z_NOW_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_Z_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e0_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_STEP_E0_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_STEP_E0_NOW_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_STEP_E0_NOW_COMPONENT_NAME step_e0_now
#define FPGA_ONLY_MASTER_STEP_E0_NOW_BASE 0x7960
#define FPGA_ONLY_MASTER_STEP_E0_NOW_SPAN 16
#define FPGA_ONLY_MASTER_STEP_E0_NOW_END 0x796f
#define FPGA_ONLY_MASTER_STEP_E0_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_E0_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_E0_NOW_CAPTURE 0
#define FPGA_ONLY_MASTER_STEP_E0_NOW_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_STEP_E0_NOW_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_STEP_E0_NOW_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_STEP_E0_NOW_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_E0_NOW_FREQ 50000000
#define FPGA_ONLY_MASTER_STEP_E0_NOW_HAS_IN 1
#define FPGA_ONLY_MASTER_STEP_E0_NOW_HAS_OUT 0
#define FPGA_ONLY_MASTER_STEP_E0_NOW_HAS_TRI 0
#define FPGA_ONLY_MASTER_STEP_E0_NOW_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_E0_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e1_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_STEP_E1_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_STEP_E1_NOW_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_STEP_E1_NOW_COMPONENT_NAME step_e1_now
#define FPGA_ONLY_MASTER_STEP_E1_NOW_BASE 0x7980
#define FPGA_ONLY_MASTER_STEP_E1_NOW_SPAN 16
#define FPGA_ONLY_MASTER_STEP_E1_NOW_END 0x798f
#define FPGA_ONLY_MASTER_STEP_E1_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_E1_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_STEP_E1_NOW_CAPTURE 0
#define FPGA_ONLY_MASTER_STEP_E1_NOW_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_STEP_E1_NOW_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_STEP_E1_NOW_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_STEP_E1_NOW_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_E1_NOW_FREQ 50000000
#define FPGA_ONLY_MASTER_STEP_E1_NOW_HAS_IN 1
#define FPGA_ONLY_MASTER_STEP_E1_NOW_HAS_OUT 0
#define FPGA_ONLY_MASTER_STEP_E1_NOW_HAS_TRI 0
#define FPGA_ONLY_MASTER_STEP_E1_NOW_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_STEP_E1_NOW_RESET_VALUE 0

/*
 * Macros for device 'max_params_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_MAX_PARAMS_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_COMPONENT_NAME max_params_0
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_BASE 0x79a0
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_SPAN 16
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_END 0x79af
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_CAPTURE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_FREQ 50000000
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_HAS_IN 1
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_0_RESET_VALUE 0

/*
 * Macros for device 'max_params_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_MAX_PARAMS_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_COMPONENT_NAME max_params_1
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_BASE 0x79c0
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_SPAN 16
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_END 0x79cf
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_CAPTURE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_FREQ 50000000
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_HAS_IN 1
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_1_RESET_VALUE 0

/*
 * Macros for device 'max_params_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_MAX_PARAMS_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_COMPONENT_NAME max_params_2
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_BASE 0x79e0
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_SPAN 16
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_END 0x79ef
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_CAPTURE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_FREQ 50000000
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_HAS_IN 1
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_2_RESET_VALUE 0

/*
 * Macros for device 'max_params_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_MAX_PARAMS_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_COMPONENT_NAME max_params_3
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_BASE 0x7a00
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_SPAN 16
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_END 0x7a0f
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_CAPTURE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_FREQ 50000000
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_HAS_IN 1
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_3_RESET_VALUE 0

/*
 * Macros for device 'max_params_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_MAX_PARAMS_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_COMPONENT_NAME max_params_4
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_BASE 0x7a20
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_SPAN 16
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_END 0x7a2f
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_CAPTURE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_FREQ 50000000
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_HAS_IN 1
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_HAS_OUT 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_HAS_TRI 0
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_PARAMS_4_RESET_VALUE 0

/*
 * Macros for device 'max_timing_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_MAX_TIMING_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_MAX_TIMING_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_MAX_TIMING_0_COMPONENT_NAME max_timing_0
#define FPGA_ONLY_MASTER_MAX_TIMING_0_BASE 0x7a40
#define FPGA_ONLY_MASTER_MAX_TIMING_0_SPAN 16
#define FPGA_ONLY_MASTER_MAX_TIMING_0_END 0x7a4f
#define FPGA_ONLY_MASTER_MAX_TIMING_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_TIMING_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_TIMING_0_CAPTURE 0
#define FPGA_ONLY_MASTER_MAX_TIMING_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_MAX_TIMING_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_MAX_TIMING_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_MAX_TIMING_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_TIMING_0_FREQ 50000000
#define FPGA_ONLY_MASTER_MAX_TIMING_0_HAS_IN 1
#define FPGA_ONLY_MASTER_MAX_TIMING_0_HAS_OUT 0
#define FPGA_ONLY_MASTER_MAX_TIMING_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_MAX_TIMING_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_TIMING_0_RESET_VALUE 0

/*
 * Macros for device 'max_timing_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_MAX_TIMING_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_MAX_TIMING_1_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_MAX_TIMING_1_COMPONENT_NAME max_timing_1
#define FPGA_ONLY_MASTER_MAX_TIMING_1_BASE 0x7a60
#define FPGA_ONLY_MASTER_MAX_TIMING_1_SPAN 16
#define FPGA_ONLY_MASTER_MAX_TIMING_1_END 0x7a6f
#define FPGA_ONLY_MASTER_MAX_TIMING_1_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_TIMING_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_TIMING_1_CAPTURE 0
#define FPGA_ONLY_MASTER_MAX_TIMING_1_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_MAX_TIMING_1_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_MAX_TIMING_1_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_MAX_TIMING_1_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_TIMING_1_FREQ 50000000
#define FPGA_ONLY_MASTER_MAX_TIMING_1_HAS_IN 1
#define FPGA_ONLY_MASTER_MAX_TIMING_1_HAS_OUT 0
#define FPGA_ONLY_MASTER_MAX_TIMING_1_HAS_TRI 0
#define FPGA_ONLY_MASTER_MAX_TIMING_1_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_TIMING_1_RESET_VALUE 0

/*
 * Macros for device 'max_timing_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_MAX_TIMING_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_MAX_TIMING_2_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_MAX_TIMING_2_COMPONENT_NAME max_timing_2
#define FPGA_ONLY_MASTER_MAX_TIMING_2_BASE 0x7a80
#define FPGA_ONLY_MASTER_MAX_TIMING_2_SPAN 16
#define FPGA_ONLY_MASTER_MAX_TIMING_2_END 0x7a8f
#define FPGA_ONLY_MASTER_MAX_TIMING_2_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_TIMING_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_TIMING_2_CAPTURE 0
#define FPGA_ONLY_MASTER_MAX_TIMING_2_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_MAX_TIMING_2_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_MAX_TIMING_2_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_MAX_TIMING_2_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_TIMING_2_FREQ 50000000
#define FPGA_ONLY_MASTER_MAX_TIMING_2_HAS_IN 1
#define FPGA_ONLY_MASTER_MAX_TIMING_2_HAS_OUT 0
#define FPGA_ONLY_MASTER_MAX_TIMING_2_HAS_TRI 0
#define FPGA_ONLY_MASTER_MAX_TIMING_2_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_TIMING_2_RESET_VALUE 0

/*
 * Macros for device 'max_timing_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_MAX_TIMING_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_MAX_TIMING_3_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_MAX_TIMING_3_COMPONENT_NAME max_timing_3
#define FPGA_ONLY_MASTER_MAX_TIMING_3_BASE 0x7aa0
#define FPGA_ONLY_MASTER_MAX_TIMING_3_SPAN 16
#define FPGA_ONLY_MASTER_MAX_TIMING_3_END 0x7aaf
#define FPGA_ONLY_MASTER_MAX_TIMING_3_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_TIMING_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_MAX_TIMING_3_CAPTURE 0
#define FPGA_ONLY_MASTER_MAX_TIMING_3_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_MAX_TIMING_3_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_MAX_TIMING_3_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_MAX_TIMING_3_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_TIMING_3_FREQ 50000000
#define FPGA_ONLY_MASTER_MAX_TIMING_3_HAS_IN 1
#define FPGA_ONLY_MASTER_MAX_TIMING_3_HAS_OUT 0
#define FPGA_ONLY_MASTER_MAX_TIMING_3_HAS_TRI 0
#define FPGA_ONLY_MASTER_MAX_TIMING_3_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_MAX_TIMING_3_RESET_VALUE 0

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_ILC_COMPONENT_TYPE interrupt_latency_counter
#define FPGA_ONLY_MASTER_ILC_COMPONENT_NAME ILC
#define FPGA_ONLY_MASTER_ILC_BASE 0x30000
#define FPGA_ONLY_MASTER_ILC_SPAN 256
#define FPGA_ONLY_MASTER_ILC_END 0x300ff

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_SYSID_QSYS_BASE 0x1000
#define HPS_0_SYSID_QSYS_SPAN 8
#define HPS_0_SYSID_QSYS_END 0x1007
#define HPS_0_SYSID_QSYS_ID 4294906626
#define HPS_0_SYSID_QSYS_TIMESTAMP 1590594581

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_JTAG_UART_BASE 0x2000
#define HPS_0_JTAG_UART_SPAN 8
#define HPS_0_JTAG_UART_END 0x2007
#define HPS_0_JTAG_UART_IRQ 2
#define HPS_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'flags_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_FLAGS_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_FLAGS_IN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_FLAGS_IN_COMPONENT_NAME flags_in
#define HPS_0_FLAGS_IN_BASE 0x4000
#define HPS_0_FLAGS_IN_SPAN 16
#define HPS_0_FLAGS_IN_END 0x400f
#define HPS_0_FLAGS_IN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_FLAGS_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_FLAGS_IN_CAPTURE 0
#define HPS_0_FLAGS_IN_DATA_WIDTH 32
#define HPS_0_FLAGS_IN_DO_TEST_BENCH_WIRING 0
#define HPS_0_FLAGS_IN_DRIVEN_SIM_VALUE 0
#define HPS_0_FLAGS_IN_EDGE_TYPE NONE
#define HPS_0_FLAGS_IN_FREQ 50000000
#define HPS_0_FLAGS_IN_HAS_IN 1
#define HPS_0_FLAGS_IN_HAS_OUT 0
#define HPS_0_FLAGS_IN_HAS_TRI 0
#define HPS_0_FLAGS_IN_IRQ_TYPE NONE
#define HPS_0_FLAGS_IN_RESET_VALUE 0

/*
 * Macros for device 'flags_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_FLAGS_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_FLAGS_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_FLAGS_OUT_COMPONENT_NAME flags_out
#define HPS_0_FLAGS_OUT_BASE 0x4020
#define HPS_0_FLAGS_OUT_SPAN 16
#define HPS_0_FLAGS_OUT_END 0x402f
#define HPS_0_FLAGS_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_FLAGS_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_FLAGS_OUT_CAPTURE 0
#define HPS_0_FLAGS_OUT_DATA_WIDTH 32
#define HPS_0_FLAGS_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_FLAGS_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_FLAGS_OUT_EDGE_TYPE NONE
#define HPS_0_FLAGS_OUT_FREQ 50000000
#define HPS_0_FLAGS_OUT_HAS_IN 0
#define HPS_0_FLAGS_OUT_HAS_OUT 1
#define HPS_0_FLAGS_OUT_HAS_TRI 0
#define HPS_0_FLAGS_OUT_IRQ_TYPE NONE
#define HPS_0_FLAGS_OUT_RESET_VALUE 0

/*
 * Macros for device 'command_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_TYPE_COMPONENT_NAME command_type
#define HPS_0_COMMAND_TYPE_BASE 0x4040
#define HPS_0_COMMAND_TYPE_SPAN 16
#define HPS_0_COMMAND_TYPE_END 0x404f
#define HPS_0_COMMAND_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_TYPE_CAPTURE 0
#define HPS_0_COMMAND_TYPE_DATA_WIDTH 32
#define HPS_0_COMMAND_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_TYPE_EDGE_TYPE NONE
#define HPS_0_COMMAND_TYPE_FREQ 50000000
#define HPS_0_COMMAND_TYPE_HAS_IN 0
#define HPS_0_COMMAND_TYPE_HAS_OUT 1
#define HPS_0_COMMAND_TYPE_HAS_TRI 0
#define HPS_0_COMMAND_TYPE_IRQ_TYPE NONE
#define HPS_0_COMMAND_TYPE_RESET_VALUE 0

/*
 * Macros for device 'command_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_X_COMPONENT_NAME command_x
#define HPS_0_COMMAND_X_BASE 0x5000
#define HPS_0_COMMAND_X_SPAN 16
#define HPS_0_COMMAND_X_END 0x500f
#define HPS_0_COMMAND_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_X_CAPTURE 0
#define HPS_0_COMMAND_X_DATA_WIDTH 32
#define HPS_0_COMMAND_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_X_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_X_EDGE_TYPE NONE
#define HPS_0_COMMAND_X_FREQ 50000000
#define HPS_0_COMMAND_X_HAS_IN 0
#define HPS_0_COMMAND_X_HAS_OUT 1
#define HPS_0_COMMAND_X_HAS_TRI 0
#define HPS_0_COMMAND_X_IRQ_TYPE NONE
#define HPS_0_COMMAND_X_RESET_VALUE 0

/*
 * Macros for device 'command_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_Y_COMPONENT_NAME command_y
#define HPS_0_COMMAND_Y_BASE 0x5020
#define HPS_0_COMMAND_Y_SPAN 16
#define HPS_0_COMMAND_Y_END 0x502f
#define HPS_0_COMMAND_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_Y_CAPTURE 0
#define HPS_0_COMMAND_Y_DATA_WIDTH 32
#define HPS_0_COMMAND_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_Y_EDGE_TYPE NONE
#define HPS_0_COMMAND_Y_FREQ 50000000
#define HPS_0_COMMAND_Y_HAS_IN 0
#define HPS_0_COMMAND_Y_HAS_OUT 1
#define HPS_0_COMMAND_Y_HAS_TRI 0
#define HPS_0_COMMAND_Y_IRQ_TYPE NONE
#define HPS_0_COMMAND_Y_RESET_VALUE 0

/*
 * Macros for device 'command_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_Z_COMPONENT_NAME command_z
#define HPS_0_COMMAND_Z_BASE 0x5040
#define HPS_0_COMMAND_Z_SPAN 16
#define HPS_0_COMMAND_Z_END 0x504f
#define HPS_0_COMMAND_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_Z_CAPTURE 0
#define HPS_0_COMMAND_Z_DATA_WIDTH 32
#define HPS_0_COMMAND_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_Z_EDGE_TYPE NONE
#define HPS_0_COMMAND_Z_FREQ 50000000
#define HPS_0_COMMAND_Z_HAS_IN 0
#define HPS_0_COMMAND_Z_HAS_OUT 1
#define HPS_0_COMMAND_Z_HAS_TRI 0
#define HPS_0_COMMAND_Z_IRQ_TYPE NONE
#define HPS_0_COMMAND_Z_RESET_VALUE 0

/*
 * Macros for device 'command_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_E0_COMPONENT_NAME command_e0
#define HPS_0_COMMAND_E0_BASE 0x5060
#define HPS_0_COMMAND_E0_SPAN 16
#define HPS_0_COMMAND_E0_END 0x506f
#define HPS_0_COMMAND_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_E0_CAPTURE 0
#define HPS_0_COMMAND_E0_DATA_WIDTH 32
#define HPS_0_COMMAND_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_E0_EDGE_TYPE NONE
#define HPS_0_COMMAND_E0_FREQ 50000000
#define HPS_0_COMMAND_E0_HAS_IN 0
#define HPS_0_COMMAND_E0_HAS_OUT 1
#define HPS_0_COMMAND_E0_HAS_TRI 0
#define HPS_0_COMMAND_E0_IRQ_TYPE NONE
#define HPS_0_COMMAND_E0_RESET_VALUE 0

/*
 * Macros for device 'command_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_E1_COMPONENT_NAME command_e1
#define HPS_0_COMMAND_E1_BASE 0x5080
#define HPS_0_COMMAND_E1_SPAN 16
#define HPS_0_COMMAND_E1_END 0x508f
#define HPS_0_COMMAND_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_E1_CAPTURE 0
#define HPS_0_COMMAND_E1_DATA_WIDTH 32
#define HPS_0_COMMAND_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_E1_EDGE_TYPE NONE
#define HPS_0_COMMAND_E1_FREQ 50000000
#define HPS_0_COMMAND_E1_HAS_IN 0
#define HPS_0_COMMAND_E1_HAS_OUT 1
#define HPS_0_COMMAND_E1_HAS_TRI 0
#define HPS_0_COMMAND_E1_IRQ_TYPE NONE
#define HPS_0_COMMAND_E1_RESET_VALUE 0

/*
 * Macros for device 'command_f_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_F_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_F_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_F_X_COMPONENT_NAME command_f_x
#define HPS_0_COMMAND_F_X_BASE 0x50a0
#define HPS_0_COMMAND_F_X_SPAN 16
#define HPS_0_COMMAND_F_X_END 0x50af
#define HPS_0_COMMAND_F_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_F_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_F_X_CAPTURE 0
#define HPS_0_COMMAND_F_X_DATA_WIDTH 32
#define HPS_0_COMMAND_F_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_F_X_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_F_X_EDGE_TYPE NONE
#define HPS_0_COMMAND_F_X_FREQ 50000000
#define HPS_0_COMMAND_F_X_HAS_IN 0
#define HPS_0_COMMAND_F_X_HAS_OUT 1
#define HPS_0_COMMAND_F_X_HAS_TRI 0
#define HPS_0_COMMAND_F_X_IRQ_TYPE NONE
#define HPS_0_COMMAND_F_X_RESET_VALUE 0

/*
 * Macros for device 'command_t', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_T_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_T_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_T_COMPONENT_NAME command_t
#define HPS_0_COMMAND_T_BASE 0x50c0
#define HPS_0_COMMAND_T_SPAN 16
#define HPS_0_COMMAND_T_END 0x50cf
#define HPS_0_COMMAND_T_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_T_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_T_CAPTURE 0
#define HPS_0_COMMAND_T_DATA_WIDTH 12
#define HPS_0_COMMAND_T_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_T_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_T_EDGE_TYPE NONE
#define HPS_0_COMMAND_T_FREQ 50000000
#define HPS_0_COMMAND_T_HAS_IN 0
#define HPS_0_COMMAND_T_HAS_OUT 1
#define HPS_0_COMMAND_T_HAS_TRI 0
#define HPS_0_COMMAND_T_IRQ_TYPE NONE
#define HPS_0_COMMAND_T_RESET_VALUE 0

/*
 * Macros for device 'command_dt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_DT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_DT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_DT_COMPONENT_NAME command_dt
#define HPS_0_COMMAND_DT_BASE 0x50e0
#define HPS_0_COMMAND_DT_SPAN 16
#define HPS_0_COMMAND_DT_END 0x50ef
#define HPS_0_COMMAND_DT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_DT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_DT_CAPTURE 0
#define HPS_0_COMMAND_DT_DATA_WIDTH 12
#define HPS_0_COMMAND_DT_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_DT_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_DT_EDGE_TYPE NONE
#define HPS_0_COMMAND_DT_FREQ 50000000
#define HPS_0_COMMAND_DT_HAS_IN 0
#define HPS_0_COMMAND_DT_HAS_OUT 1
#define HPS_0_COMMAND_DT_HAS_TRI 0
#define HPS_0_COMMAND_DT_IRQ_TYPE NONE
#define HPS_0_COMMAND_DT_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_MAX_SPEED_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_MAX_SPEED_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_MAX_SPEED_X_COMPONENT_NAME settings_max_speed_x
#define HPS_0_SETTINGS_MAX_SPEED_X_BASE 0x5100
#define HPS_0_SETTINGS_MAX_SPEED_X_SPAN 16
#define HPS_0_SETTINGS_MAX_SPEED_X_END 0x510f
#define HPS_0_SETTINGS_MAX_SPEED_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_X_CAPTURE 0
#define HPS_0_SETTINGS_MAX_SPEED_X_DATA_WIDTH 32
#define HPS_0_SETTINGS_MAX_SPEED_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_MAX_SPEED_X_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_MAX_SPEED_X_EDGE_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_X_FREQ 50000000
#define HPS_0_SETTINGS_MAX_SPEED_X_HAS_IN 0
#define HPS_0_SETTINGS_MAX_SPEED_X_HAS_OUT 1
#define HPS_0_SETTINGS_MAX_SPEED_X_HAS_TRI 0
#define HPS_0_SETTINGS_MAX_SPEED_X_IRQ_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_X_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_MAX_SPEED_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_MAX_SPEED_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_MAX_SPEED_Y_COMPONENT_NAME settings_max_speed_y
#define HPS_0_SETTINGS_MAX_SPEED_Y_BASE 0x5120
#define HPS_0_SETTINGS_MAX_SPEED_Y_SPAN 16
#define HPS_0_SETTINGS_MAX_SPEED_Y_END 0x512f
#define HPS_0_SETTINGS_MAX_SPEED_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_Y_CAPTURE 0
#define HPS_0_SETTINGS_MAX_SPEED_Y_DATA_WIDTH 32
#define HPS_0_SETTINGS_MAX_SPEED_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_MAX_SPEED_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_MAX_SPEED_Y_EDGE_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_Y_FREQ 50000000
#define HPS_0_SETTINGS_MAX_SPEED_Y_HAS_IN 0
#define HPS_0_SETTINGS_MAX_SPEED_Y_HAS_OUT 1
#define HPS_0_SETTINGS_MAX_SPEED_Y_HAS_TRI 0
#define HPS_0_SETTINGS_MAX_SPEED_Y_IRQ_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_MAX_SPEED_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_MAX_SPEED_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_MAX_SPEED_Z_COMPONENT_NAME settings_max_speed_z
#define HPS_0_SETTINGS_MAX_SPEED_Z_BASE 0x5140
#define HPS_0_SETTINGS_MAX_SPEED_Z_SPAN 16
#define HPS_0_SETTINGS_MAX_SPEED_Z_END 0x514f
#define HPS_0_SETTINGS_MAX_SPEED_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_Z_CAPTURE 0
#define HPS_0_SETTINGS_MAX_SPEED_Z_DATA_WIDTH 32
#define HPS_0_SETTINGS_MAX_SPEED_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_MAX_SPEED_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_MAX_SPEED_Z_EDGE_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_Z_FREQ 50000000
#define HPS_0_SETTINGS_MAX_SPEED_Z_HAS_IN 0
#define HPS_0_SETTINGS_MAX_SPEED_Z_HAS_OUT 1
#define HPS_0_SETTINGS_MAX_SPEED_Z_HAS_TRI 0
#define HPS_0_SETTINGS_MAX_SPEED_Z_IRQ_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_MAX_SPEED_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_MAX_SPEED_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_MAX_SPEED_E0_COMPONENT_NAME settings_max_speed_e0
#define HPS_0_SETTINGS_MAX_SPEED_E0_BASE 0x5160
#define HPS_0_SETTINGS_MAX_SPEED_E0_SPAN 16
#define HPS_0_SETTINGS_MAX_SPEED_E0_END 0x516f
#define HPS_0_SETTINGS_MAX_SPEED_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_E0_CAPTURE 0
#define HPS_0_SETTINGS_MAX_SPEED_E0_DATA_WIDTH 32
#define HPS_0_SETTINGS_MAX_SPEED_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_MAX_SPEED_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_MAX_SPEED_E0_EDGE_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_E0_FREQ 50000000
#define HPS_0_SETTINGS_MAX_SPEED_E0_HAS_IN 0
#define HPS_0_SETTINGS_MAX_SPEED_E0_HAS_OUT 1
#define HPS_0_SETTINGS_MAX_SPEED_E0_HAS_TRI 0
#define HPS_0_SETTINGS_MAX_SPEED_E0_IRQ_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_MAX_SPEED_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_MAX_SPEED_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_MAX_SPEED_E1_COMPONENT_NAME settings_max_speed_e1
#define HPS_0_SETTINGS_MAX_SPEED_E1_BASE 0x5180
#define HPS_0_SETTINGS_MAX_SPEED_E1_SPAN 16
#define HPS_0_SETTINGS_MAX_SPEED_E1_END 0x518f
#define HPS_0_SETTINGS_MAX_SPEED_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_MAX_SPEED_E1_CAPTURE 0
#define HPS_0_SETTINGS_MAX_SPEED_E1_DATA_WIDTH 32
#define HPS_0_SETTINGS_MAX_SPEED_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_MAX_SPEED_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_MAX_SPEED_E1_EDGE_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_E1_FREQ 50000000
#define HPS_0_SETTINGS_MAX_SPEED_E1_HAS_IN 0
#define HPS_0_SETTINGS_MAX_SPEED_E1_HAS_OUT 1
#define HPS_0_SETTINGS_MAX_SPEED_E1_HAS_TRI 0
#define HPS_0_SETTINGS_MAX_SPEED_E1_IRQ_TYPE NONE
#define HPS_0_SETTINGS_MAX_SPEED_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_ACCELERATION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_ACCELERATION_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_ACCELERATION_X_COMPONENT_NAME settings_acceleration_x
#define HPS_0_SETTINGS_ACCELERATION_X_BASE 0x51a0
#define HPS_0_SETTINGS_ACCELERATION_X_SPAN 16
#define HPS_0_SETTINGS_ACCELERATION_X_END 0x51af
#define HPS_0_SETTINGS_ACCELERATION_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_X_CAPTURE 0
#define HPS_0_SETTINGS_ACCELERATION_X_DATA_WIDTH 32
#define HPS_0_SETTINGS_ACCELERATION_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_ACCELERATION_X_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_ACCELERATION_X_EDGE_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_X_FREQ 50000000
#define HPS_0_SETTINGS_ACCELERATION_X_HAS_IN 0
#define HPS_0_SETTINGS_ACCELERATION_X_HAS_OUT 1
#define HPS_0_SETTINGS_ACCELERATION_X_HAS_TRI 0
#define HPS_0_SETTINGS_ACCELERATION_X_IRQ_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_X_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_ACCELERATION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_ACCELERATION_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_ACCELERATION_Y_COMPONENT_NAME settings_acceleration_y
#define HPS_0_SETTINGS_ACCELERATION_Y_BASE 0x51c0
#define HPS_0_SETTINGS_ACCELERATION_Y_SPAN 16
#define HPS_0_SETTINGS_ACCELERATION_Y_END 0x51cf
#define HPS_0_SETTINGS_ACCELERATION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_Y_CAPTURE 0
#define HPS_0_SETTINGS_ACCELERATION_Y_DATA_WIDTH 32
#define HPS_0_SETTINGS_ACCELERATION_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_ACCELERATION_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_ACCELERATION_Y_EDGE_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_Y_FREQ 50000000
#define HPS_0_SETTINGS_ACCELERATION_Y_HAS_IN 0
#define HPS_0_SETTINGS_ACCELERATION_Y_HAS_OUT 1
#define HPS_0_SETTINGS_ACCELERATION_Y_HAS_TRI 0
#define HPS_0_SETTINGS_ACCELERATION_Y_IRQ_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_ACCELERATION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_ACCELERATION_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_ACCELERATION_Z_COMPONENT_NAME settings_acceleration_z
#define HPS_0_SETTINGS_ACCELERATION_Z_BASE 0x51e0
#define HPS_0_SETTINGS_ACCELERATION_Z_SPAN 16
#define HPS_0_SETTINGS_ACCELERATION_Z_END 0x51ef
#define HPS_0_SETTINGS_ACCELERATION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_Z_CAPTURE 0
#define HPS_0_SETTINGS_ACCELERATION_Z_DATA_WIDTH 32
#define HPS_0_SETTINGS_ACCELERATION_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_ACCELERATION_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_ACCELERATION_Z_EDGE_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_Z_FREQ 50000000
#define HPS_0_SETTINGS_ACCELERATION_Z_HAS_IN 0
#define HPS_0_SETTINGS_ACCELERATION_Z_HAS_OUT 1
#define HPS_0_SETTINGS_ACCELERATION_Z_HAS_TRI 0
#define HPS_0_SETTINGS_ACCELERATION_Z_IRQ_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_ACCELERATION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_ACCELERATION_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_ACCELERATION_E0_COMPONENT_NAME settings_acceleration_e0
#define HPS_0_SETTINGS_ACCELERATION_E0_BASE 0x5200
#define HPS_0_SETTINGS_ACCELERATION_E0_SPAN 16
#define HPS_0_SETTINGS_ACCELERATION_E0_END 0x520f
#define HPS_0_SETTINGS_ACCELERATION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_E0_CAPTURE 0
#define HPS_0_SETTINGS_ACCELERATION_E0_DATA_WIDTH 32
#define HPS_0_SETTINGS_ACCELERATION_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_ACCELERATION_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_ACCELERATION_E0_EDGE_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_E0_FREQ 50000000
#define HPS_0_SETTINGS_ACCELERATION_E0_HAS_IN 0
#define HPS_0_SETTINGS_ACCELERATION_E0_HAS_OUT 1
#define HPS_0_SETTINGS_ACCELERATION_E0_HAS_TRI 0
#define HPS_0_SETTINGS_ACCELERATION_E0_IRQ_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_ACCELERATION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_ACCELERATION_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_ACCELERATION_E1_COMPONENT_NAME settings_acceleration_e1
#define HPS_0_SETTINGS_ACCELERATION_E1_BASE 0x5220
#define HPS_0_SETTINGS_ACCELERATION_E1_SPAN 16
#define HPS_0_SETTINGS_ACCELERATION_E1_END 0x522f
#define HPS_0_SETTINGS_ACCELERATION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_ACCELERATION_E1_CAPTURE 0
#define HPS_0_SETTINGS_ACCELERATION_E1_DATA_WIDTH 32
#define HPS_0_SETTINGS_ACCELERATION_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_ACCELERATION_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_ACCELERATION_E1_EDGE_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_E1_FREQ 50000000
#define HPS_0_SETTINGS_ACCELERATION_E1_HAS_IN 0
#define HPS_0_SETTINGS_ACCELERATION_E1_HAS_OUT 1
#define HPS_0_SETTINGS_ACCELERATION_E1_HAS_TRI 0
#define HPS_0_SETTINGS_ACCELERATION_E1_IRQ_TYPE NONE
#define HPS_0_SETTINGS_ACCELERATION_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_JERK_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_JERK_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_JERK_X_COMPONENT_NAME settings_jerk_x
#define HPS_0_SETTINGS_JERK_X_BASE 0x5240
#define HPS_0_SETTINGS_JERK_X_SPAN 16
#define HPS_0_SETTINGS_JERK_X_END 0x524f
#define HPS_0_SETTINGS_JERK_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_JERK_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_JERK_X_CAPTURE 0
#define HPS_0_SETTINGS_JERK_X_DATA_WIDTH 32
#define HPS_0_SETTINGS_JERK_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_JERK_X_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_JERK_X_EDGE_TYPE NONE
#define HPS_0_SETTINGS_JERK_X_FREQ 50000000
#define HPS_0_SETTINGS_JERK_X_HAS_IN 0
#define HPS_0_SETTINGS_JERK_X_HAS_OUT 1
#define HPS_0_SETTINGS_JERK_X_HAS_TRI 0
#define HPS_0_SETTINGS_JERK_X_IRQ_TYPE NONE
#define HPS_0_SETTINGS_JERK_X_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_JERK_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_JERK_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_JERK_Y_COMPONENT_NAME settings_jerk_y
#define HPS_0_SETTINGS_JERK_Y_BASE 0x5260
#define HPS_0_SETTINGS_JERK_Y_SPAN 16
#define HPS_0_SETTINGS_JERK_Y_END 0x526f
#define HPS_0_SETTINGS_JERK_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_JERK_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_JERK_Y_CAPTURE 0
#define HPS_0_SETTINGS_JERK_Y_DATA_WIDTH 32
#define HPS_0_SETTINGS_JERK_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_JERK_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_JERK_Y_EDGE_TYPE NONE
#define HPS_0_SETTINGS_JERK_Y_FREQ 50000000
#define HPS_0_SETTINGS_JERK_Y_HAS_IN 0
#define HPS_0_SETTINGS_JERK_Y_HAS_OUT 1
#define HPS_0_SETTINGS_JERK_Y_HAS_TRI 0
#define HPS_0_SETTINGS_JERK_Y_IRQ_TYPE NONE
#define HPS_0_SETTINGS_JERK_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_JERK_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_JERK_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_JERK_Z_COMPONENT_NAME settings_jerk_z
#define HPS_0_SETTINGS_JERK_Z_BASE 0x5280
#define HPS_0_SETTINGS_JERK_Z_SPAN 16
#define HPS_0_SETTINGS_JERK_Z_END 0x528f
#define HPS_0_SETTINGS_JERK_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_JERK_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_JERK_Z_CAPTURE 0
#define HPS_0_SETTINGS_JERK_Z_DATA_WIDTH 32
#define HPS_0_SETTINGS_JERK_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_JERK_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_JERK_Z_EDGE_TYPE NONE
#define HPS_0_SETTINGS_JERK_Z_FREQ 50000000
#define HPS_0_SETTINGS_JERK_Z_HAS_IN 0
#define HPS_0_SETTINGS_JERK_Z_HAS_OUT 1
#define HPS_0_SETTINGS_JERK_Z_HAS_TRI 0
#define HPS_0_SETTINGS_JERK_Z_IRQ_TYPE NONE
#define HPS_0_SETTINGS_JERK_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_JERK_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_JERK_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_JERK_E0_COMPONENT_NAME settings_jerk_e0
#define HPS_0_SETTINGS_JERK_E0_BASE 0x52a0
#define HPS_0_SETTINGS_JERK_E0_SPAN 16
#define HPS_0_SETTINGS_JERK_E0_END 0x52af
#define HPS_0_SETTINGS_JERK_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_JERK_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_JERK_E0_CAPTURE 0
#define HPS_0_SETTINGS_JERK_E0_DATA_WIDTH 32
#define HPS_0_SETTINGS_JERK_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_JERK_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_JERK_E0_EDGE_TYPE NONE
#define HPS_0_SETTINGS_JERK_E0_FREQ 50000000
#define HPS_0_SETTINGS_JERK_E0_HAS_IN 0
#define HPS_0_SETTINGS_JERK_E0_HAS_OUT 1
#define HPS_0_SETTINGS_JERK_E0_HAS_TRI 0
#define HPS_0_SETTINGS_JERK_E0_IRQ_TYPE NONE
#define HPS_0_SETTINGS_JERK_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_JERK_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_JERK_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_JERK_E1_COMPONENT_NAME settings_jerk_e1
#define HPS_0_SETTINGS_JERK_E1_BASE 0x52c0
#define HPS_0_SETTINGS_JERK_E1_SPAN 16
#define HPS_0_SETTINGS_JERK_E1_END 0x52cf
#define HPS_0_SETTINGS_JERK_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_JERK_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_JERK_E1_CAPTURE 0
#define HPS_0_SETTINGS_JERK_E1_DATA_WIDTH 32
#define HPS_0_SETTINGS_JERK_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_JERK_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_JERK_E1_EDGE_TYPE NONE
#define HPS_0_SETTINGS_JERK_E1_FREQ 50000000
#define HPS_0_SETTINGS_JERK_E1_HAS_IN 0
#define HPS_0_SETTINGS_JERK_E1_HAS_OUT 1
#define HPS_0_SETTINGS_JERK_E1_HAS_TRI 0
#define HPS_0_SETTINGS_JERK_E1_IRQ_TYPE NONE
#define HPS_0_SETTINGS_JERK_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_MAX_TEMP_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_MAX_TEMP_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_MAX_TEMP_E0_COMPONENT_NAME settings_max_temp_e0
#define HPS_0_SETTINGS_MAX_TEMP_E0_BASE 0x52e0
#define HPS_0_SETTINGS_MAX_TEMP_E0_SPAN 16
#define HPS_0_SETTINGS_MAX_TEMP_E0_END 0x52ef
#define HPS_0_SETTINGS_MAX_TEMP_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_MAX_TEMP_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_MAX_TEMP_E0_CAPTURE 0
#define HPS_0_SETTINGS_MAX_TEMP_E0_DATA_WIDTH 12
#define HPS_0_SETTINGS_MAX_TEMP_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_MAX_TEMP_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_MAX_TEMP_E0_EDGE_TYPE NONE
#define HPS_0_SETTINGS_MAX_TEMP_E0_FREQ 50000000
#define HPS_0_SETTINGS_MAX_TEMP_E0_HAS_IN 0
#define HPS_0_SETTINGS_MAX_TEMP_E0_HAS_OUT 1
#define HPS_0_SETTINGS_MAX_TEMP_E0_HAS_TRI 0
#define HPS_0_SETTINGS_MAX_TEMP_E0_IRQ_TYPE NONE
#define HPS_0_SETTINGS_MAX_TEMP_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_MAX_TEMP_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_MAX_TEMP_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_MAX_TEMP_E1_COMPONENT_NAME settings_max_temp_e1
#define HPS_0_SETTINGS_MAX_TEMP_E1_BASE 0x5300
#define HPS_0_SETTINGS_MAX_TEMP_E1_SPAN 16
#define HPS_0_SETTINGS_MAX_TEMP_E1_END 0x530f
#define HPS_0_SETTINGS_MAX_TEMP_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_MAX_TEMP_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_MAX_TEMP_E1_CAPTURE 0
#define HPS_0_SETTINGS_MAX_TEMP_E1_DATA_WIDTH 12
#define HPS_0_SETTINGS_MAX_TEMP_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_MAX_TEMP_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_MAX_TEMP_E1_EDGE_TYPE NONE
#define HPS_0_SETTINGS_MAX_TEMP_E1_FREQ 50000000
#define HPS_0_SETTINGS_MAX_TEMP_E1_HAS_IN 0
#define HPS_0_SETTINGS_MAX_TEMP_E1_HAS_OUT 1
#define HPS_0_SETTINGS_MAX_TEMP_E1_HAS_TRI 0
#define HPS_0_SETTINGS_MAX_TEMP_E1_IRQ_TYPE NONE
#define HPS_0_SETTINGS_MAX_TEMP_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_bed', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SETTINGS_MAX_TEMP_BED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SETTINGS_MAX_TEMP_BED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SETTINGS_MAX_TEMP_BED_COMPONENT_NAME settings_max_temp_bed
#define HPS_0_SETTINGS_MAX_TEMP_BED_BASE 0x5320
#define HPS_0_SETTINGS_MAX_TEMP_BED_SPAN 16
#define HPS_0_SETTINGS_MAX_TEMP_BED_END 0x532f
#define HPS_0_SETTINGS_MAX_TEMP_BED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SETTINGS_MAX_TEMP_BED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SETTINGS_MAX_TEMP_BED_CAPTURE 0
#define HPS_0_SETTINGS_MAX_TEMP_BED_DATA_WIDTH 12
#define HPS_0_SETTINGS_MAX_TEMP_BED_DO_TEST_BENCH_WIRING 0
#define HPS_0_SETTINGS_MAX_TEMP_BED_DRIVEN_SIM_VALUE 0
#define HPS_0_SETTINGS_MAX_TEMP_BED_EDGE_TYPE NONE
#define HPS_0_SETTINGS_MAX_TEMP_BED_FREQ 50000000
#define HPS_0_SETTINGS_MAX_TEMP_BED_HAS_IN 0
#define HPS_0_SETTINGS_MAX_TEMP_BED_HAS_OUT 1
#define HPS_0_SETTINGS_MAX_TEMP_BED_HAS_TRI 0
#define HPS_0_SETTINGS_MAX_TEMP_BED_IRQ_TYPE NONE
#define HPS_0_SETTINGS_MAX_TEMP_BED_RESET_VALUE 0

/*
 * Macros for device 'command_f_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_F_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_F_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_F_Y_COMPONENT_NAME command_f_y
#define HPS_0_COMMAND_F_Y_BASE 0x5340
#define HPS_0_COMMAND_F_Y_SPAN 16
#define HPS_0_COMMAND_F_Y_END 0x534f
#define HPS_0_COMMAND_F_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_F_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_F_Y_CAPTURE 0
#define HPS_0_COMMAND_F_Y_DATA_WIDTH 32
#define HPS_0_COMMAND_F_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_F_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_F_Y_EDGE_TYPE NONE
#define HPS_0_COMMAND_F_Y_FREQ 50000000
#define HPS_0_COMMAND_F_Y_HAS_IN 0
#define HPS_0_COMMAND_F_Y_HAS_OUT 1
#define HPS_0_COMMAND_F_Y_HAS_TRI 0
#define HPS_0_COMMAND_F_Y_IRQ_TYPE NONE
#define HPS_0_COMMAND_F_Y_RESET_VALUE 0

/*
 * Macros for device 'command_f_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_F_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_F_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_F_Z_COMPONENT_NAME command_f_z
#define HPS_0_COMMAND_F_Z_BASE 0x5360
#define HPS_0_COMMAND_F_Z_SPAN 16
#define HPS_0_COMMAND_F_Z_END 0x536f
#define HPS_0_COMMAND_F_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_F_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_F_Z_CAPTURE 0
#define HPS_0_COMMAND_F_Z_DATA_WIDTH 32
#define HPS_0_COMMAND_F_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_F_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_F_Z_EDGE_TYPE NONE
#define HPS_0_COMMAND_F_Z_FREQ 50000000
#define HPS_0_COMMAND_F_Z_HAS_IN 0
#define HPS_0_COMMAND_F_Z_HAS_OUT 1
#define HPS_0_COMMAND_F_Z_HAS_TRI 0
#define HPS_0_COMMAND_F_Z_IRQ_TYPE NONE
#define HPS_0_COMMAND_F_Z_RESET_VALUE 0

/*
 * Macros for device 'command_f_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_F_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_F_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_F_E0_COMPONENT_NAME command_f_e0
#define HPS_0_COMMAND_F_E0_BASE 0x5380
#define HPS_0_COMMAND_F_E0_SPAN 16
#define HPS_0_COMMAND_F_E0_END 0x538f
#define HPS_0_COMMAND_F_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_F_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_F_E0_CAPTURE 0
#define HPS_0_COMMAND_F_E0_DATA_WIDTH 32
#define HPS_0_COMMAND_F_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_F_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_F_E0_EDGE_TYPE NONE
#define HPS_0_COMMAND_F_E0_FREQ 50000000
#define HPS_0_COMMAND_F_E0_HAS_IN 0
#define HPS_0_COMMAND_F_E0_HAS_OUT 1
#define HPS_0_COMMAND_F_E0_HAS_TRI 0
#define HPS_0_COMMAND_F_E0_IRQ_TYPE NONE
#define HPS_0_COMMAND_F_E0_RESET_VALUE 0

/*
 * Macros for device 'command_f_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_COMMAND_F_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_COMMAND_F_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_COMMAND_F_E1_COMPONENT_NAME command_f_e1
#define HPS_0_COMMAND_F_E1_BASE 0x53a0
#define HPS_0_COMMAND_F_E1_SPAN 16
#define HPS_0_COMMAND_F_E1_END 0x53af
#define HPS_0_COMMAND_F_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_COMMAND_F_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_COMMAND_F_E1_CAPTURE 0
#define HPS_0_COMMAND_F_E1_DATA_WIDTH 32
#define HPS_0_COMMAND_F_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_COMMAND_F_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_COMMAND_F_E1_EDGE_TYPE NONE
#define HPS_0_COMMAND_F_E1_FREQ 50000000
#define HPS_0_COMMAND_F_E1_HAS_IN 0
#define HPS_0_COMMAND_F_E1_HAS_OUT 1
#define HPS_0_COMMAND_F_E1_HAS_TRI 0
#define HPS_0_COMMAND_F_E1_IRQ_TYPE NONE
#define HPS_0_COMMAND_F_E1_RESET_VALUE 0

/*
 * Macros for device 'temp_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TEMP_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TEMP_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TEMP_0_COMPONENT_NAME temp_0
#define HPS_0_TEMP_0_BASE 0x6000
#define HPS_0_TEMP_0_SPAN 16
#define HPS_0_TEMP_0_END 0x600f
#define HPS_0_TEMP_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TEMP_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TEMP_0_CAPTURE 0
#define HPS_0_TEMP_0_DATA_WIDTH 12
#define HPS_0_TEMP_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_TEMP_0_DRIVEN_SIM_VALUE 0
#define HPS_0_TEMP_0_EDGE_TYPE NONE
#define HPS_0_TEMP_0_FREQ 50000000
#define HPS_0_TEMP_0_HAS_IN 1
#define HPS_0_TEMP_0_HAS_OUT 0
#define HPS_0_TEMP_0_HAS_TRI 0
#define HPS_0_TEMP_0_IRQ_TYPE NONE
#define HPS_0_TEMP_0_RESET_VALUE 0

/*
 * Macros for device 'temp_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TEMP_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TEMP_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TEMP_1_COMPONENT_NAME temp_1
#define HPS_0_TEMP_1_BASE 0x6020
#define HPS_0_TEMP_1_SPAN 16
#define HPS_0_TEMP_1_END 0x602f
#define HPS_0_TEMP_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TEMP_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TEMP_1_CAPTURE 0
#define HPS_0_TEMP_1_DATA_WIDTH 12
#define HPS_0_TEMP_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_TEMP_1_DRIVEN_SIM_VALUE 0
#define HPS_0_TEMP_1_EDGE_TYPE NONE
#define HPS_0_TEMP_1_FREQ 50000000
#define HPS_0_TEMP_1_HAS_IN 1
#define HPS_0_TEMP_1_HAS_OUT 0
#define HPS_0_TEMP_1_HAS_TRI 0
#define HPS_0_TEMP_1_IRQ_TYPE NONE
#define HPS_0_TEMP_1_RESET_VALUE 0

/*
 * Macros for device 'temp_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TEMP_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TEMP_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TEMP_2_COMPONENT_NAME temp_2
#define HPS_0_TEMP_2_BASE 0x6040
#define HPS_0_TEMP_2_SPAN 16
#define HPS_0_TEMP_2_END 0x604f
#define HPS_0_TEMP_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TEMP_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TEMP_2_CAPTURE 0
#define HPS_0_TEMP_2_DATA_WIDTH 12
#define HPS_0_TEMP_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_TEMP_2_DRIVEN_SIM_VALUE 0
#define HPS_0_TEMP_2_EDGE_TYPE NONE
#define HPS_0_TEMP_2_FREQ 50000000
#define HPS_0_TEMP_2_HAS_IN 1
#define HPS_0_TEMP_2_HAS_OUT 0
#define HPS_0_TEMP_2_HAS_TRI 0
#define HPS_0_TEMP_2_IRQ_TYPE NONE
#define HPS_0_TEMP_2_RESET_VALUE 0

/*
 * Macros for device 'position_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_POSITION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_POSITION_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_POSITION_X_COMPONENT_NAME position_x
#define HPS_0_POSITION_X_BASE 0x6060
#define HPS_0_POSITION_X_SPAN 16
#define HPS_0_POSITION_X_END 0x606f
#define HPS_0_POSITION_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_POSITION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_POSITION_X_CAPTURE 0
#define HPS_0_POSITION_X_DATA_WIDTH 12
#define HPS_0_POSITION_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_POSITION_X_DRIVEN_SIM_VALUE 0
#define HPS_0_POSITION_X_EDGE_TYPE NONE
#define HPS_0_POSITION_X_FREQ 50000000
#define HPS_0_POSITION_X_HAS_IN 1
#define HPS_0_POSITION_X_HAS_OUT 0
#define HPS_0_POSITION_X_HAS_TRI 0
#define HPS_0_POSITION_X_IRQ_TYPE NONE
#define HPS_0_POSITION_X_RESET_VALUE 0

/*
 * Macros for device 'position_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_POSITION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_POSITION_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_POSITION_Y_COMPONENT_NAME position_y
#define HPS_0_POSITION_Y_BASE 0x6080
#define HPS_0_POSITION_Y_SPAN 16
#define HPS_0_POSITION_Y_END 0x608f
#define HPS_0_POSITION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_POSITION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_POSITION_Y_CAPTURE 0
#define HPS_0_POSITION_Y_DATA_WIDTH 12
#define HPS_0_POSITION_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_POSITION_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_POSITION_Y_EDGE_TYPE NONE
#define HPS_0_POSITION_Y_FREQ 50000000
#define HPS_0_POSITION_Y_HAS_IN 1
#define HPS_0_POSITION_Y_HAS_OUT 0
#define HPS_0_POSITION_Y_HAS_TRI 0
#define HPS_0_POSITION_Y_IRQ_TYPE NONE
#define HPS_0_POSITION_Y_RESET_VALUE 0

/*
 * Macros for device 'position_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_POSITION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_POSITION_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_POSITION_Z_COMPONENT_NAME position_z
#define HPS_0_POSITION_Z_BASE 0x60a0
#define HPS_0_POSITION_Z_SPAN 16
#define HPS_0_POSITION_Z_END 0x60af
#define HPS_0_POSITION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_POSITION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_POSITION_Z_CAPTURE 0
#define HPS_0_POSITION_Z_DATA_WIDTH 12
#define HPS_0_POSITION_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_POSITION_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_POSITION_Z_EDGE_TYPE NONE
#define HPS_0_POSITION_Z_FREQ 50000000
#define HPS_0_POSITION_Z_HAS_IN 1
#define HPS_0_POSITION_Z_HAS_OUT 0
#define HPS_0_POSITION_Z_HAS_TRI 0
#define HPS_0_POSITION_Z_IRQ_TYPE NONE
#define HPS_0_POSITION_Z_RESET_VALUE 0

/*
 * Macros for device 'position_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_POSITION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_POSITION_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_POSITION_E0_COMPONENT_NAME position_e0
#define HPS_0_POSITION_E0_BASE 0x60c0
#define HPS_0_POSITION_E0_SPAN 16
#define HPS_0_POSITION_E0_END 0x60cf
#define HPS_0_POSITION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_POSITION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_POSITION_E0_CAPTURE 0
#define HPS_0_POSITION_E0_DATA_WIDTH 12
#define HPS_0_POSITION_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_POSITION_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_POSITION_E0_EDGE_TYPE NONE
#define HPS_0_POSITION_E0_FREQ 50000000
#define HPS_0_POSITION_E0_HAS_IN 1
#define HPS_0_POSITION_E0_HAS_OUT 0
#define HPS_0_POSITION_E0_HAS_TRI 0
#define HPS_0_POSITION_E0_IRQ_TYPE NONE
#define HPS_0_POSITION_E0_RESET_VALUE 0

/*
 * Macros for device 'position_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_POSITION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_POSITION_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_POSITION_E1_COMPONENT_NAME position_e1
#define HPS_0_POSITION_E1_BASE 0x60e0
#define HPS_0_POSITION_E1_SPAN 16
#define HPS_0_POSITION_E1_END 0x60ef
#define HPS_0_POSITION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_POSITION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_POSITION_E1_CAPTURE 0
#define HPS_0_POSITION_E1_DATA_WIDTH 12
#define HPS_0_POSITION_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_POSITION_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_POSITION_E1_EDGE_TYPE NONE
#define HPS_0_POSITION_E1_FREQ 50000000
#define HPS_0_POSITION_E1_HAS_IN 1
#define HPS_0_POSITION_E1_HAS_OUT 0
#define HPS_0_POSITION_E1_HAS_TRI 0
#define HPS_0_POSITION_E1_IRQ_TYPE NONE
#define HPS_0_POSITION_E1_RESET_VALUE 0

/*
 * Macros for device 'position_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_POSITION_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_POSITION_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_POSITION_TYPE_COMPONENT_NAME position_type
#define HPS_0_POSITION_TYPE_BASE 0x6100
#define HPS_0_POSITION_TYPE_SPAN 16
#define HPS_0_POSITION_TYPE_END 0x610f
#define HPS_0_POSITION_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_POSITION_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_POSITION_TYPE_CAPTURE 0
#define HPS_0_POSITION_TYPE_DATA_WIDTH 1
#define HPS_0_POSITION_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_POSITION_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_POSITION_TYPE_EDGE_TYPE NONE
#define HPS_0_POSITION_TYPE_FREQ 50000000
#define HPS_0_POSITION_TYPE_HAS_IN 1
#define HPS_0_POSITION_TYPE_HAS_OUT 0
#define HPS_0_POSITION_TYPE_HAS_TRI 0
#define HPS_0_POSITION_TYPE_IRQ_TYPE NONE
#define HPS_0_POSITION_TYPE_RESET_VALUE 0

/*
 * Macros for device 'position_extruder_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_POSITION_EXTRUDER_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_POSITION_EXTRUDER_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_POSITION_EXTRUDER_TYPE_COMPONENT_NAME position_extruder_type
#define HPS_0_POSITION_EXTRUDER_TYPE_BASE 0x6120
#define HPS_0_POSITION_EXTRUDER_TYPE_SPAN 16
#define HPS_0_POSITION_EXTRUDER_TYPE_END 0x612f
#define HPS_0_POSITION_EXTRUDER_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_POSITION_EXTRUDER_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_POSITION_EXTRUDER_TYPE_CAPTURE 0
#define HPS_0_POSITION_EXTRUDER_TYPE_DATA_WIDTH 1
#define HPS_0_POSITION_EXTRUDER_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_POSITION_EXTRUDER_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_POSITION_EXTRUDER_TYPE_EDGE_TYPE NONE
#define HPS_0_POSITION_EXTRUDER_TYPE_FREQ 50000000
#define HPS_0_POSITION_EXTRUDER_TYPE_HAS_IN 1
#define HPS_0_POSITION_EXTRUDER_TYPE_HAS_OUT 0
#define HPS_0_POSITION_EXTRUDER_TYPE_HAS_TRI 0
#define HPS_0_POSITION_EXTRUDER_TYPE_IRQ_TYPE NONE
#define HPS_0_POSITION_EXTRUDER_TYPE_RESET_VALUE 0

/*
 * Macros for device 'params_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_X_0_COMPONENT_NAME params_x_0
#define HPS_0_PARAMS_X_0_BASE 0x7000
#define HPS_0_PARAMS_X_0_SPAN 16
#define HPS_0_PARAMS_X_0_END 0x700f
#define HPS_0_PARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_X_0_CAPTURE 0
#define HPS_0_PARAMS_X_0_DATA_WIDTH 32
#define HPS_0_PARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_X_0_EDGE_TYPE NONE
#define HPS_0_PARAMS_X_0_FREQ 50000000
#define HPS_0_PARAMS_X_0_HAS_IN 1
#define HPS_0_PARAMS_X_0_HAS_OUT 0
#define HPS_0_PARAMS_X_0_HAS_TRI 0
#define HPS_0_PARAMS_X_0_IRQ_TYPE NONE
#define HPS_0_PARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'params_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_X_1_COMPONENT_NAME params_x_1
#define HPS_0_PARAMS_X_1_BASE 0x7020
#define HPS_0_PARAMS_X_1_SPAN 16
#define HPS_0_PARAMS_X_1_END 0x702f
#define HPS_0_PARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_X_1_CAPTURE 0
#define HPS_0_PARAMS_X_1_DATA_WIDTH 32
#define HPS_0_PARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_X_1_EDGE_TYPE NONE
#define HPS_0_PARAMS_X_1_FREQ 50000000
#define HPS_0_PARAMS_X_1_HAS_IN 1
#define HPS_0_PARAMS_X_1_HAS_OUT 0
#define HPS_0_PARAMS_X_1_HAS_TRI 0
#define HPS_0_PARAMS_X_1_IRQ_TYPE NONE
#define HPS_0_PARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'params_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_X_2_COMPONENT_NAME params_x_2
#define HPS_0_PARAMS_X_2_BASE 0x7040
#define HPS_0_PARAMS_X_2_SPAN 16
#define HPS_0_PARAMS_X_2_END 0x704f
#define HPS_0_PARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_X_2_CAPTURE 0
#define HPS_0_PARAMS_X_2_DATA_WIDTH 32
#define HPS_0_PARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_X_2_EDGE_TYPE NONE
#define HPS_0_PARAMS_X_2_FREQ 50000000
#define HPS_0_PARAMS_X_2_HAS_IN 1
#define HPS_0_PARAMS_X_2_HAS_OUT 0
#define HPS_0_PARAMS_X_2_HAS_TRI 0
#define HPS_0_PARAMS_X_2_IRQ_TYPE NONE
#define HPS_0_PARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'params_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_X_3_COMPONENT_NAME params_x_3
#define HPS_0_PARAMS_X_3_BASE 0x7060
#define HPS_0_PARAMS_X_3_SPAN 16
#define HPS_0_PARAMS_X_3_END 0x706f
#define HPS_0_PARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_X_3_CAPTURE 0
#define HPS_0_PARAMS_X_3_DATA_WIDTH 32
#define HPS_0_PARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_X_3_EDGE_TYPE NONE
#define HPS_0_PARAMS_X_3_FREQ 50000000
#define HPS_0_PARAMS_X_3_HAS_IN 1
#define HPS_0_PARAMS_X_3_HAS_OUT 0
#define HPS_0_PARAMS_X_3_HAS_TRI 0
#define HPS_0_PARAMS_X_3_IRQ_TYPE NONE
#define HPS_0_PARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'params_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_X_4_COMPONENT_NAME params_x_4
#define HPS_0_PARAMS_X_4_BASE 0x7080
#define HPS_0_PARAMS_X_4_SPAN 16
#define HPS_0_PARAMS_X_4_END 0x708f
#define HPS_0_PARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_X_4_CAPTURE 0
#define HPS_0_PARAMS_X_4_DATA_WIDTH 32
#define HPS_0_PARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_X_4_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_X_4_EDGE_TYPE NONE
#define HPS_0_PARAMS_X_4_FREQ 50000000
#define HPS_0_PARAMS_X_4_HAS_IN 1
#define HPS_0_PARAMS_X_4_HAS_OUT 0
#define HPS_0_PARAMS_X_4_HAS_TRI 0
#define HPS_0_PARAMS_X_4_IRQ_TYPE NONE
#define HPS_0_PARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'params_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Y_0_COMPONENT_NAME params_y_0
#define HPS_0_PARAMS_Y_0_BASE 0x70a0
#define HPS_0_PARAMS_Y_0_SPAN 16
#define HPS_0_PARAMS_Y_0_END 0x70af
#define HPS_0_PARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Y_0_CAPTURE 0
#define HPS_0_PARAMS_Y_0_DATA_WIDTH 32
#define HPS_0_PARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Y_0_EDGE_TYPE NONE
#define HPS_0_PARAMS_Y_0_FREQ 50000000
#define HPS_0_PARAMS_Y_0_HAS_IN 1
#define HPS_0_PARAMS_Y_0_HAS_OUT 0
#define HPS_0_PARAMS_Y_0_HAS_TRI 0
#define HPS_0_PARAMS_Y_0_IRQ_TYPE NONE
#define HPS_0_PARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'params_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Y_1_COMPONENT_NAME params_y_1
#define HPS_0_PARAMS_Y_1_BASE 0x70c0
#define HPS_0_PARAMS_Y_1_SPAN 16
#define HPS_0_PARAMS_Y_1_END 0x70cf
#define HPS_0_PARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Y_1_CAPTURE 0
#define HPS_0_PARAMS_Y_1_DATA_WIDTH 32
#define HPS_0_PARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Y_1_EDGE_TYPE NONE
#define HPS_0_PARAMS_Y_1_FREQ 50000000
#define HPS_0_PARAMS_Y_1_HAS_IN 1
#define HPS_0_PARAMS_Y_1_HAS_OUT 0
#define HPS_0_PARAMS_Y_1_HAS_TRI 0
#define HPS_0_PARAMS_Y_1_IRQ_TYPE NONE
#define HPS_0_PARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'params_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Y_2_COMPONENT_NAME params_y_2
#define HPS_0_PARAMS_Y_2_BASE 0x70e0
#define HPS_0_PARAMS_Y_2_SPAN 16
#define HPS_0_PARAMS_Y_2_END 0x70ef
#define HPS_0_PARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Y_2_CAPTURE 0
#define HPS_0_PARAMS_Y_2_DATA_WIDTH 32
#define HPS_0_PARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Y_2_EDGE_TYPE NONE
#define HPS_0_PARAMS_Y_2_FREQ 50000000
#define HPS_0_PARAMS_Y_2_HAS_IN 1
#define HPS_0_PARAMS_Y_2_HAS_OUT 0
#define HPS_0_PARAMS_Y_2_HAS_TRI 0
#define HPS_0_PARAMS_Y_2_IRQ_TYPE NONE
#define HPS_0_PARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'params_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Y_3_COMPONENT_NAME params_y_3
#define HPS_0_PARAMS_Y_3_BASE 0x7100
#define HPS_0_PARAMS_Y_3_SPAN 16
#define HPS_0_PARAMS_Y_3_END 0x710f
#define HPS_0_PARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Y_3_CAPTURE 0
#define HPS_0_PARAMS_Y_3_DATA_WIDTH 32
#define HPS_0_PARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Y_3_EDGE_TYPE NONE
#define HPS_0_PARAMS_Y_3_FREQ 50000000
#define HPS_0_PARAMS_Y_3_HAS_IN 1
#define HPS_0_PARAMS_Y_3_HAS_OUT 0
#define HPS_0_PARAMS_Y_3_HAS_TRI 0
#define HPS_0_PARAMS_Y_3_IRQ_TYPE NONE
#define HPS_0_PARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'params_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Y_4_COMPONENT_NAME params_y_4
#define HPS_0_PARAMS_Y_4_BASE 0x7120
#define HPS_0_PARAMS_Y_4_SPAN 16
#define HPS_0_PARAMS_Y_4_END 0x712f
#define HPS_0_PARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Y_4_CAPTURE 0
#define HPS_0_PARAMS_Y_4_DATA_WIDTH 32
#define HPS_0_PARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Y_4_EDGE_TYPE NONE
#define HPS_0_PARAMS_Y_4_FREQ 50000000
#define HPS_0_PARAMS_Y_4_HAS_IN 1
#define HPS_0_PARAMS_Y_4_HAS_OUT 0
#define HPS_0_PARAMS_Y_4_HAS_TRI 0
#define HPS_0_PARAMS_Y_4_IRQ_TYPE NONE
#define HPS_0_PARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'params_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Z_0_COMPONENT_NAME params_z_0
#define HPS_0_PARAMS_Z_0_BASE 0x7140
#define HPS_0_PARAMS_Z_0_SPAN 16
#define HPS_0_PARAMS_Z_0_END 0x714f
#define HPS_0_PARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Z_0_CAPTURE 0
#define HPS_0_PARAMS_Z_0_DATA_WIDTH 32
#define HPS_0_PARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Z_0_EDGE_TYPE NONE
#define HPS_0_PARAMS_Z_0_FREQ 50000000
#define HPS_0_PARAMS_Z_0_HAS_IN 1
#define HPS_0_PARAMS_Z_0_HAS_OUT 0
#define HPS_0_PARAMS_Z_0_HAS_TRI 0
#define HPS_0_PARAMS_Z_0_IRQ_TYPE NONE
#define HPS_0_PARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'params_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Z_1_COMPONENT_NAME params_z_1
#define HPS_0_PARAMS_Z_1_BASE 0x7160
#define HPS_0_PARAMS_Z_1_SPAN 16
#define HPS_0_PARAMS_Z_1_END 0x716f
#define HPS_0_PARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Z_1_CAPTURE 0
#define HPS_0_PARAMS_Z_1_DATA_WIDTH 32
#define HPS_0_PARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Z_1_EDGE_TYPE NONE
#define HPS_0_PARAMS_Z_1_FREQ 50000000
#define HPS_0_PARAMS_Z_1_HAS_IN 1
#define HPS_0_PARAMS_Z_1_HAS_OUT 0
#define HPS_0_PARAMS_Z_1_HAS_TRI 0
#define HPS_0_PARAMS_Z_1_IRQ_TYPE NONE
#define HPS_0_PARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'params_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Z_2_COMPONENT_NAME params_z_2
#define HPS_0_PARAMS_Z_2_BASE 0x7180
#define HPS_0_PARAMS_Z_2_SPAN 16
#define HPS_0_PARAMS_Z_2_END 0x718f
#define HPS_0_PARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Z_2_CAPTURE 0
#define HPS_0_PARAMS_Z_2_DATA_WIDTH 32
#define HPS_0_PARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Z_2_EDGE_TYPE NONE
#define HPS_0_PARAMS_Z_2_FREQ 50000000
#define HPS_0_PARAMS_Z_2_HAS_IN 1
#define HPS_0_PARAMS_Z_2_HAS_OUT 0
#define HPS_0_PARAMS_Z_2_HAS_TRI 0
#define HPS_0_PARAMS_Z_2_IRQ_TYPE NONE
#define HPS_0_PARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'params_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Z_3_COMPONENT_NAME params_z_3
#define HPS_0_PARAMS_Z_3_BASE 0x71a0
#define HPS_0_PARAMS_Z_3_SPAN 16
#define HPS_0_PARAMS_Z_3_END 0x71af
#define HPS_0_PARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Z_3_CAPTURE 0
#define HPS_0_PARAMS_Z_3_DATA_WIDTH 32
#define HPS_0_PARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Z_3_EDGE_TYPE NONE
#define HPS_0_PARAMS_Z_3_FREQ 50000000
#define HPS_0_PARAMS_Z_3_HAS_IN 1
#define HPS_0_PARAMS_Z_3_HAS_OUT 0
#define HPS_0_PARAMS_Z_3_HAS_TRI 0
#define HPS_0_PARAMS_Z_3_IRQ_TYPE NONE
#define HPS_0_PARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'params_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_Z_4_COMPONENT_NAME params_z_4
#define HPS_0_PARAMS_Z_4_BASE 0x71c0
#define HPS_0_PARAMS_Z_4_SPAN 16
#define HPS_0_PARAMS_Z_4_END 0x71cf
#define HPS_0_PARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_Z_4_CAPTURE 0
#define HPS_0_PARAMS_Z_4_DATA_WIDTH 32
#define HPS_0_PARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_Z_4_EDGE_TYPE NONE
#define HPS_0_PARAMS_Z_4_FREQ 50000000
#define HPS_0_PARAMS_Z_4_HAS_IN 1
#define HPS_0_PARAMS_Z_4_HAS_OUT 0
#define HPS_0_PARAMS_Z_4_HAS_TRI 0
#define HPS_0_PARAMS_Z_4_IRQ_TYPE NONE
#define HPS_0_PARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'params_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E0_0_COMPONENT_NAME params_e0_0
#define HPS_0_PARAMS_E0_0_BASE 0x71e0
#define HPS_0_PARAMS_E0_0_SPAN 16
#define HPS_0_PARAMS_E0_0_END 0x71ef
#define HPS_0_PARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E0_0_CAPTURE 0
#define HPS_0_PARAMS_E0_0_DATA_WIDTH 32
#define HPS_0_PARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E0_0_EDGE_TYPE NONE
#define HPS_0_PARAMS_E0_0_FREQ 50000000
#define HPS_0_PARAMS_E0_0_HAS_IN 1
#define HPS_0_PARAMS_E0_0_HAS_OUT 0
#define HPS_0_PARAMS_E0_0_HAS_TRI 0
#define HPS_0_PARAMS_E0_0_IRQ_TYPE NONE
#define HPS_0_PARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'params_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E0_1_COMPONENT_NAME params_e0_1
#define HPS_0_PARAMS_E0_1_BASE 0x7200
#define HPS_0_PARAMS_E0_1_SPAN 16
#define HPS_0_PARAMS_E0_1_END 0x720f
#define HPS_0_PARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E0_1_CAPTURE 0
#define HPS_0_PARAMS_E0_1_DATA_WIDTH 32
#define HPS_0_PARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E0_1_EDGE_TYPE NONE
#define HPS_0_PARAMS_E0_1_FREQ 50000000
#define HPS_0_PARAMS_E0_1_HAS_IN 1
#define HPS_0_PARAMS_E0_1_HAS_OUT 0
#define HPS_0_PARAMS_E0_1_HAS_TRI 0
#define HPS_0_PARAMS_E0_1_IRQ_TYPE NONE
#define HPS_0_PARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'params_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E0_2_COMPONENT_NAME params_e0_2
#define HPS_0_PARAMS_E0_2_BASE 0x7220
#define HPS_0_PARAMS_E0_2_SPAN 16
#define HPS_0_PARAMS_E0_2_END 0x722f
#define HPS_0_PARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E0_2_CAPTURE 0
#define HPS_0_PARAMS_E0_2_DATA_WIDTH 32
#define HPS_0_PARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E0_2_EDGE_TYPE NONE
#define HPS_0_PARAMS_E0_2_FREQ 50000000
#define HPS_0_PARAMS_E0_2_HAS_IN 1
#define HPS_0_PARAMS_E0_2_HAS_OUT 0
#define HPS_0_PARAMS_E0_2_HAS_TRI 0
#define HPS_0_PARAMS_E0_2_IRQ_TYPE NONE
#define HPS_0_PARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'params_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E0_3_COMPONENT_NAME params_e0_3
#define HPS_0_PARAMS_E0_3_BASE 0x7240
#define HPS_0_PARAMS_E0_3_SPAN 16
#define HPS_0_PARAMS_E0_3_END 0x724f
#define HPS_0_PARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E0_3_CAPTURE 0
#define HPS_0_PARAMS_E0_3_DATA_WIDTH 32
#define HPS_0_PARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E0_3_EDGE_TYPE NONE
#define HPS_0_PARAMS_E0_3_FREQ 50000000
#define HPS_0_PARAMS_E0_3_HAS_IN 1
#define HPS_0_PARAMS_E0_3_HAS_OUT 0
#define HPS_0_PARAMS_E0_3_HAS_TRI 0
#define HPS_0_PARAMS_E0_3_IRQ_TYPE NONE
#define HPS_0_PARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'params_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E0_4_COMPONENT_NAME params_e0_4
#define HPS_0_PARAMS_E0_4_BASE 0x7260
#define HPS_0_PARAMS_E0_4_SPAN 16
#define HPS_0_PARAMS_E0_4_END 0x726f
#define HPS_0_PARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E0_4_CAPTURE 0
#define HPS_0_PARAMS_E0_4_DATA_WIDTH 32
#define HPS_0_PARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E0_4_EDGE_TYPE NONE
#define HPS_0_PARAMS_E0_4_FREQ 50000000
#define HPS_0_PARAMS_E0_4_HAS_IN 1
#define HPS_0_PARAMS_E0_4_HAS_OUT 0
#define HPS_0_PARAMS_E0_4_HAS_TRI 0
#define HPS_0_PARAMS_E0_4_IRQ_TYPE NONE
#define HPS_0_PARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'params_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E1_0_COMPONENT_NAME params_e1_0
#define HPS_0_PARAMS_E1_0_BASE 0x7280
#define HPS_0_PARAMS_E1_0_SPAN 16
#define HPS_0_PARAMS_E1_0_END 0x728f
#define HPS_0_PARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E1_0_CAPTURE 0
#define HPS_0_PARAMS_E1_0_DATA_WIDTH 32
#define HPS_0_PARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E1_0_EDGE_TYPE NONE
#define HPS_0_PARAMS_E1_0_FREQ 50000000
#define HPS_0_PARAMS_E1_0_HAS_IN 1
#define HPS_0_PARAMS_E1_0_HAS_OUT 0
#define HPS_0_PARAMS_E1_0_HAS_TRI 0
#define HPS_0_PARAMS_E1_0_IRQ_TYPE NONE
#define HPS_0_PARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'params_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E1_1_COMPONENT_NAME params_e1_1
#define HPS_0_PARAMS_E1_1_BASE 0x72a0
#define HPS_0_PARAMS_E1_1_SPAN 16
#define HPS_0_PARAMS_E1_1_END 0x72af
#define HPS_0_PARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E1_1_CAPTURE 0
#define HPS_0_PARAMS_E1_1_DATA_WIDTH 32
#define HPS_0_PARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E1_1_EDGE_TYPE NONE
#define HPS_0_PARAMS_E1_1_FREQ 50000000
#define HPS_0_PARAMS_E1_1_HAS_IN 1
#define HPS_0_PARAMS_E1_1_HAS_OUT 0
#define HPS_0_PARAMS_E1_1_HAS_TRI 0
#define HPS_0_PARAMS_E1_1_IRQ_TYPE NONE
#define HPS_0_PARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'params_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E1_2_COMPONENT_NAME params_e1_2
#define HPS_0_PARAMS_E1_2_BASE 0x72c0
#define HPS_0_PARAMS_E1_2_SPAN 16
#define HPS_0_PARAMS_E1_2_END 0x72cf
#define HPS_0_PARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E1_2_CAPTURE 0
#define HPS_0_PARAMS_E1_2_DATA_WIDTH 32
#define HPS_0_PARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E1_2_EDGE_TYPE NONE
#define HPS_0_PARAMS_E1_2_FREQ 50000000
#define HPS_0_PARAMS_E1_2_HAS_IN 1
#define HPS_0_PARAMS_E1_2_HAS_OUT 0
#define HPS_0_PARAMS_E1_2_HAS_TRI 0
#define HPS_0_PARAMS_E1_2_IRQ_TYPE NONE
#define HPS_0_PARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'params_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E1_3_COMPONENT_NAME params_e1_3
#define HPS_0_PARAMS_E1_3_BASE 0x72e0
#define HPS_0_PARAMS_E1_3_SPAN 16
#define HPS_0_PARAMS_E1_3_END 0x72ef
#define HPS_0_PARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E1_3_CAPTURE 0
#define HPS_0_PARAMS_E1_3_DATA_WIDTH 32
#define HPS_0_PARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E1_3_EDGE_TYPE NONE
#define HPS_0_PARAMS_E1_3_FREQ 50000000
#define HPS_0_PARAMS_E1_3_HAS_IN 1
#define HPS_0_PARAMS_E1_3_HAS_OUT 0
#define HPS_0_PARAMS_E1_3_HAS_TRI 0
#define HPS_0_PARAMS_E1_3_IRQ_TYPE NONE
#define HPS_0_PARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'params_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PARAMS_E1_4_COMPONENT_NAME params_e1_4
#define HPS_0_PARAMS_E1_4_BASE 0x7300
#define HPS_0_PARAMS_E1_4_SPAN 16
#define HPS_0_PARAMS_E1_4_END 0x730f
#define HPS_0_PARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PARAMS_E1_4_CAPTURE 0
#define HPS_0_PARAMS_E1_4_DATA_WIDTH 32
#define HPS_0_PARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_PARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define HPS_0_PARAMS_E1_4_EDGE_TYPE NONE
#define HPS_0_PARAMS_E1_4_FREQ 50000000
#define HPS_0_PARAMS_E1_4_HAS_IN 1
#define HPS_0_PARAMS_E1_4_HAS_OUT 0
#define HPS_0_PARAMS_E1_4_HAS_TRI 0
#define HPS_0_PARAMS_E1_4_IRQ_TYPE NONE
#define HPS_0_PARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'timing_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_X_0_COMPONENT_NAME timing_x_0
#define HPS_0_TIMING_X_0_BASE 0x7320
#define HPS_0_TIMING_X_0_SPAN 16
#define HPS_0_TIMING_X_0_END 0x732f
#define HPS_0_TIMING_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_X_0_CAPTURE 0
#define HPS_0_TIMING_X_0_DATA_WIDTH 32
#define HPS_0_TIMING_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_X_0_EDGE_TYPE NONE
#define HPS_0_TIMING_X_0_FREQ 50000000
#define HPS_0_TIMING_X_0_HAS_IN 1
#define HPS_0_TIMING_X_0_HAS_OUT 0
#define HPS_0_TIMING_X_0_HAS_TRI 0
#define HPS_0_TIMING_X_0_IRQ_TYPE NONE
#define HPS_0_TIMING_X_0_RESET_VALUE 0

/*
 * Macros for device 'timing_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_X_1_COMPONENT_NAME timing_x_1
#define HPS_0_TIMING_X_1_BASE 0x7340
#define HPS_0_TIMING_X_1_SPAN 16
#define HPS_0_TIMING_X_1_END 0x734f
#define HPS_0_TIMING_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_X_1_CAPTURE 0
#define HPS_0_TIMING_X_1_DATA_WIDTH 32
#define HPS_0_TIMING_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_X_1_EDGE_TYPE NONE
#define HPS_0_TIMING_X_1_FREQ 50000000
#define HPS_0_TIMING_X_1_HAS_IN 1
#define HPS_0_TIMING_X_1_HAS_OUT 0
#define HPS_0_TIMING_X_1_HAS_TRI 0
#define HPS_0_TIMING_X_1_IRQ_TYPE NONE
#define HPS_0_TIMING_X_1_RESET_VALUE 0

/*
 * Macros for device 'timing_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_X_2_COMPONENT_NAME timing_x_2
#define HPS_0_TIMING_X_2_BASE 0x7360
#define HPS_0_TIMING_X_2_SPAN 16
#define HPS_0_TIMING_X_2_END 0x736f
#define HPS_0_TIMING_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_X_2_CAPTURE 0
#define HPS_0_TIMING_X_2_DATA_WIDTH 32
#define HPS_0_TIMING_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_X_2_EDGE_TYPE NONE
#define HPS_0_TIMING_X_2_FREQ 50000000
#define HPS_0_TIMING_X_2_HAS_IN 1
#define HPS_0_TIMING_X_2_HAS_OUT 0
#define HPS_0_TIMING_X_2_HAS_TRI 0
#define HPS_0_TIMING_X_2_IRQ_TYPE NONE
#define HPS_0_TIMING_X_2_RESET_VALUE 0

/*
 * Macros for device 'timing_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_X_3_COMPONENT_NAME timing_x_3
#define HPS_0_TIMING_X_3_BASE 0x7380
#define HPS_0_TIMING_X_3_SPAN 16
#define HPS_0_TIMING_X_3_END 0x738f
#define HPS_0_TIMING_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_X_3_CAPTURE 0
#define HPS_0_TIMING_X_3_DATA_WIDTH 32
#define HPS_0_TIMING_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_X_3_EDGE_TYPE NONE
#define HPS_0_TIMING_X_3_FREQ 50000000
#define HPS_0_TIMING_X_3_HAS_IN 1
#define HPS_0_TIMING_X_3_HAS_OUT 0
#define HPS_0_TIMING_X_3_HAS_TRI 0
#define HPS_0_TIMING_X_3_IRQ_TYPE NONE
#define HPS_0_TIMING_X_3_RESET_VALUE 0

/*
 * Macros for device 'timing_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_Y_0_COMPONENT_NAME timing_y_0
#define HPS_0_TIMING_Y_0_BASE 0x73a0
#define HPS_0_TIMING_Y_0_SPAN 16
#define HPS_0_TIMING_Y_0_END 0x73af
#define HPS_0_TIMING_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_Y_0_CAPTURE 0
#define HPS_0_TIMING_Y_0_DATA_WIDTH 32
#define HPS_0_TIMING_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_Y_0_EDGE_TYPE NONE
#define HPS_0_TIMING_Y_0_FREQ 50000000
#define HPS_0_TIMING_Y_0_HAS_IN 1
#define HPS_0_TIMING_Y_0_HAS_OUT 0
#define HPS_0_TIMING_Y_0_HAS_TRI 0
#define HPS_0_TIMING_Y_0_IRQ_TYPE NONE
#define HPS_0_TIMING_Y_0_RESET_VALUE 0

/*
 * Macros for device 'timing_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_Y_1_COMPONENT_NAME timing_y_1
#define HPS_0_TIMING_Y_1_BASE 0x73c0
#define HPS_0_TIMING_Y_1_SPAN 16
#define HPS_0_TIMING_Y_1_END 0x73cf
#define HPS_0_TIMING_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_Y_1_CAPTURE 0
#define HPS_0_TIMING_Y_1_DATA_WIDTH 32
#define HPS_0_TIMING_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_Y_1_EDGE_TYPE NONE
#define HPS_0_TIMING_Y_1_FREQ 50000000
#define HPS_0_TIMING_Y_1_HAS_IN 1
#define HPS_0_TIMING_Y_1_HAS_OUT 0
#define HPS_0_TIMING_Y_1_HAS_TRI 0
#define HPS_0_TIMING_Y_1_IRQ_TYPE NONE
#define HPS_0_TIMING_Y_1_RESET_VALUE 0

/*
 * Macros for device 'timing_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_Y_2_COMPONENT_NAME timing_y_2
#define HPS_0_TIMING_Y_2_BASE 0x73e0
#define HPS_0_TIMING_Y_2_SPAN 16
#define HPS_0_TIMING_Y_2_END 0x73ef
#define HPS_0_TIMING_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_Y_2_CAPTURE 0
#define HPS_0_TIMING_Y_2_DATA_WIDTH 32
#define HPS_0_TIMING_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_Y_2_EDGE_TYPE NONE
#define HPS_0_TIMING_Y_2_FREQ 50000000
#define HPS_0_TIMING_Y_2_HAS_IN 1
#define HPS_0_TIMING_Y_2_HAS_OUT 0
#define HPS_0_TIMING_Y_2_HAS_TRI 0
#define HPS_0_TIMING_Y_2_IRQ_TYPE NONE
#define HPS_0_TIMING_Y_2_RESET_VALUE 0

/*
 * Macros for device 'timing_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_Y_3_COMPONENT_NAME timing_y_3
#define HPS_0_TIMING_Y_3_BASE 0x7400
#define HPS_0_TIMING_Y_3_SPAN 16
#define HPS_0_TIMING_Y_3_END 0x740f
#define HPS_0_TIMING_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_Y_3_CAPTURE 0
#define HPS_0_TIMING_Y_3_DATA_WIDTH 32
#define HPS_0_TIMING_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_Y_3_EDGE_TYPE NONE
#define HPS_0_TIMING_Y_3_FREQ 50000000
#define HPS_0_TIMING_Y_3_HAS_IN 1
#define HPS_0_TIMING_Y_3_HAS_OUT 0
#define HPS_0_TIMING_Y_3_HAS_TRI 0
#define HPS_0_TIMING_Y_3_IRQ_TYPE NONE
#define HPS_0_TIMING_Y_3_RESET_VALUE 0

/*
 * Macros for device 'timing_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_Z_0_COMPONENT_NAME timing_z_0
#define HPS_0_TIMING_Z_0_BASE 0x7420
#define HPS_0_TIMING_Z_0_SPAN 16
#define HPS_0_TIMING_Z_0_END 0x742f
#define HPS_0_TIMING_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_Z_0_CAPTURE 0
#define HPS_0_TIMING_Z_0_DATA_WIDTH 32
#define HPS_0_TIMING_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_Z_0_EDGE_TYPE NONE
#define HPS_0_TIMING_Z_0_FREQ 50000000
#define HPS_0_TIMING_Z_0_HAS_IN 1
#define HPS_0_TIMING_Z_0_HAS_OUT 0
#define HPS_0_TIMING_Z_0_HAS_TRI 0
#define HPS_0_TIMING_Z_0_IRQ_TYPE NONE
#define HPS_0_TIMING_Z_0_RESET_VALUE 0

/*
 * Macros for device 'timing_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_Z_1_COMPONENT_NAME timing_z_1
#define HPS_0_TIMING_Z_1_BASE 0x7440
#define HPS_0_TIMING_Z_1_SPAN 16
#define HPS_0_TIMING_Z_1_END 0x744f
#define HPS_0_TIMING_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_Z_1_CAPTURE 0
#define HPS_0_TIMING_Z_1_DATA_WIDTH 32
#define HPS_0_TIMING_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_Z_1_EDGE_TYPE NONE
#define HPS_0_TIMING_Z_1_FREQ 50000000
#define HPS_0_TIMING_Z_1_HAS_IN 1
#define HPS_0_TIMING_Z_1_HAS_OUT 0
#define HPS_0_TIMING_Z_1_HAS_TRI 0
#define HPS_0_TIMING_Z_1_IRQ_TYPE NONE
#define HPS_0_TIMING_Z_1_RESET_VALUE 0

/*
 * Macros for device 'timing_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_Z_2_COMPONENT_NAME timing_z_2
#define HPS_0_TIMING_Z_2_BASE 0x7460
#define HPS_0_TIMING_Z_2_SPAN 16
#define HPS_0_TIMING_Z_2_END 0x746f
#define HPS_0_TIMING_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_Z_2_CAPTURE 0
#define HPS_0_TIMING_Z_2_DATA_WIDTH 32
#define HPS_0_TIMING_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_Z_2_EDGE_TYPE NONE
#define HPS_0_TIMING_Z_2_FREQ 50000000
#define HPS_0_TIMING_Z_2_HAS_IN 1
#define HPS_0_TIMING_Z_2_HAS_OUT 0
#define HPS_0_TIMING_Z_2_HAS_TRI 0
#define HPS_0_TIMING_Z_2_IRQ_TYPE NONE
#define HPS_0_TIMING_Z_2_RESET_VALUE 0

/*
 * Macros for device 'timing_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_Z_3_COMPONENT_NAME timing_z_3
#define HPS_0_TIMING_Z_3_BASE 0x7480
#define HPS_0_TIMING_Z_3_SPAN 16
#define HPS_0_TIMING_Z_3_END 0x748f
#define HPS_0_TIMING_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_Z_3_CAPTURE 0
#define HPS_0_TIMING_Z_3_DATA_WIDTH 32
#define HPS_0_TIMING_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_Z_3_EDGE_TYPE NONE
#define HPS_0_TIMING_Z_3_FREQ 50000000
#define HPS_0_TIMING_Z_3_HAS_IN 1
#define HPS_0_TIMING_Z_3_HAS_OUT 0
#define HPS_0_TIMING_Z_3_HAS_TRI 0
#define HPS_0_TIMING_Z_3_IRQ_TYPE NONE
#define HPS_0_TIMING_Z_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_E0_0_COMPONENT_NAME timing_e0_0
#define HPS_0_TIMING_E0_0_BASE 0x74a0
#define HPS_0_TIMING_E0_0_SPAN 16
#define HPS_0_TIMING_E0_0_END 0x74af
#define HPS_0_TIMING_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_E0_0_CAPTURE 0
#define HPS_0_TIMING_E0_0_DATA_WIDTH 32
#define HPS_0_TIMING_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_E0_0_EDGE_TYPE NONE
#define HPS_0_TIMING_E0_0_FREQ 50000000
#define HPS_0_TIMING_E0_0_HAS_IN 1
#define HPS_0_TIMING_E0_0_HAS_OUT 0
#define HPS_0_TIMING_E0_0_HAS_TRI 0
#define HPS_0_TIMING_E0_0_IRQ_TYPE NONE
#define HPS_0_TIMING_E0_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_E0_1_COMPONENT_NAME timing_e0_1
#define HPS_0_TIMING_E0_1_BASE 0x74c0
#define HPS_0_TIMING_E0_1_SPAN 16
#define HPS_0_TIMING_E0_1_END 0x74cf
#define HPS_0_TIMING_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_E0_1_CAPTURE 0
#define HPS_0_TIMING_E0_1_DATA_WIDTH 32
#define HPS_0_TIMING_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_E0_1_EDGE_TYPE NONE
#define HPS_0_TIMING_E0_1_FREQ 50000000
#define HPS_0_TIMING_E0_1_HAS_IN 1
#define HPS_0_TIMING_E0_1_HAS_OUT 0
#define HPS_0_TIMING_E0_1_HAS_TRI 0
#define HPS_0_TIMING_E0_1_IRQ_TYPE NONE
#define HPS_0_TIMING_E0_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_E0_2_COMPONENT_NAME timing_e0_2
#define HPS_0_TIMING_E0_2_BASE 0x74e0
#define HPS_0_TIMING_E0_2_SPAN 16
#define HPS_0_TIMING_E0_2_END 0x74ef
#define HPS_0_TIMING_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_E0_2_CAPTURE 0
#define HPS_0_TIMING_E0_2_DATA_WIDTH 32
#define HPS_0_TIMING_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_E0_2_EDGE_TYPE NONE
#define HPS_0_TIMING_E0_2_FREQ 50000000
#define HPS_0_TIMING_E0_2_HAS_IN 1
#define HPS_0_TIMING_E0_2_HAS_OUT 0
#define HPS_0_TIMING_E0_2_HAS_TRI 0
#define HPS_0_TIMING_E0_2_IRQ_TYPE NONE
#define HPS_0_TIMING_E0_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_E0_3_COMPONENT_NAME timing_e0_3
#define HPS_0_TIMING_E0_3_BASE 0x7500
#define HPS_0_TIMING_E0_3_SPAN 16
#define HPS_0_TIMING_E0_3_END 0x750f
#define HPS_0_TIMING_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_E0_3_CAPTURE 0
#define HPS_0_TIMING_E0_3_DATA_WIDTH 32
#define HPS_0_TIMING_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_E0_3_EDGE_TYPE NONE
#define HPS_0_TIMING_E0_3_FREQ 50000000
#define HPS_0_TIMING_E0_3_HAS_IN 1
#define HPS_0_TIMING_E0_3_HAS_OUT 0
#define HPS_0_TIMING_E0_3_HAS_TRI 0
#define HPS_0_TIMING_E0_3_IRQ_TYPE NONE
#define HPS_0_TIMING_E0_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_E1_0_COMPONENT_NAME timing_e1_0
#define HPS_0_TIMING_E1_0_BASE 0x7520
#define HPS_0_TIMING_E1_0_SPAN 16
#define HPS_0_TIMING_E1_0_END 0x752f
#define HPS_0_TIMING_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_E1_0_CAPTURE 0
#define HPS_0_TIMING_E1_0_DATA_WIDTH 32
#define HPS_0_TIMING_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_E1_0_EDGE_TYPE NONE
#define HPS_0_TIMING_E1_0_FREQ 50000000
#define HPS_0_TIMING_E1_0_HAS_IN 1
#define HPS_0_TIMING_E1_0_HAS_OUT 0
#define HPS_0_TIMING_E1_0_HAS_TRI 0
#define HPS_0_TIMING_E1_0_IRQ_TYPE NONE
#define HPS_0_TIMING_E1_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_E1_1_COMPONENT_NAME timing_e1_1
#define HPS_0_TIMING_E1_1_BASE 0x7540
#define HPS_0_TIMING_E1_1_SPAN 16
#define HPS_0_TIMING_E1_1_END 0x754f
#define HPS_0_TIMING_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_E1_1_CAPTURE 0
#define HPS_0_TIMING_E1_1_DATA_WIDTH 32
#define HPS_0_TIMING_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_E1_1_EDGE_TYPE NONE
#define HPS_0_TIMING_E1_1_FREQ 50000000
#define HPS_0_TIMING_E1_1_HAS_IN 1
#define HPS_0_TIMING_E1_1_HAS_OUT 0
#define HPS_0_TIMING_E1_1_HAS_TRI 0
#define HPS_0_TIMING_E1_1_IRQ_TYPE NONE
#define HPS_0_TIMING_E1_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_E1_2_COMPONENT_NAME timing_e1_2
#define HPS_0_TIMING_E1_2_BASE 0x7560
#define HPS_0_TIMING_E1_2_SPAN 16
#define HPS_0_TIMING_E1_2_END 0x756f
#define HPS_0_TIMING_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_E1_2_CAPTURE 0
#define HPS_0_TIMING_E1_2_DATA_WIDTH 32
#define HPS_0_TIMING_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_E1_2_EDGE_TYPE NONE
#define HPS_0_TIMING_E1_2_FREQ 50000000
#define HPS_0_TIMING_E1_2_HAS_IN 1
#define HPS_0_TIMING_E1_2_HAS_OUT 0
#define HPS_0_TIMING_E1_2_HAS_TRI 0
#define HPS_0_TIMING_E1_2_IRQ_TYPE NONE
#define HPS_0_TIMING_E1_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TIMING_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TIMING_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TIMING_E1_3_COMPONENT_NAME timing_e1_3
#define HPS_0_TIMING_E1_3_BASE 0x7580
#define HPS_0_TIMING_E1_3_SPAN 16
#define HPS_0_TIMING_E1_3_END 0x758f
#define HPS_0_TIMING_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TIMING_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TIMING_E1_3_CAPTURE 0
#define HPS_0_TIMING_E1_3_DATA_WIDTH 32
#define HPS_0_TIMING_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_TIMING_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_TIMING_E1_3_EDGE_TYPE NONE
#define HPS_0_TIMING_E1_3_FREQ 50000000
#define HPS_0_TIMING_E1_3_HAS_IN 1
#define HPS_0_TIMING_E1_3_HAS_OUT 0
#define HPS_0_TIMING_E1_3_HAS_TRI 0
#define HPS_0_TIMING_E1_3_IRQ_TYPE NONE
#define HPS_0_TIMING_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_X_0_COMPONENT_NAME new_rparams_x_0
#define HPS_0_NEW_RPARAMS_X_0_BASE 0x75a0
#define HPS_0_NEW_RPARAMS_X_0_SPAN 16
#define HPS_0_NEW_RPARAMS_X_0_END 0x75af
#define HPS_0_NEW_RPARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_0_CAPTURE 0
#define HPS_0_NEW_RPARAMS_X_0_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_X_0_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_0_FREQ 50000000
#define HPS_0_NEW_RPARAMS_X_0_HAS_IN 1
#define HPS_0_NEW_RPARAMS_X_0_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_X_0_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_X_0_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_X_1_COMPONENT_NAME new_rparams_x_1
#define HPS_0_NEW_RPARAMS_X_1_BASE 0x75c0
#define HPS_0_NEW_RPARAMS_X_1_SPAN 16
#define HPS_0_NEW_RPARAMS_X_1_END 0x75cf
#define HPS_0_NEW_RPARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_1_CAPTURE 0
#define HPS_0_NEW_RPARAMS_X_1_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_X_1_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_1_FREQ 50000000
#define HPS_0_NEW_RPARAMS_X_1_HAS_IN 1
#define HPS_0_NEW_RPARAMS_X_1_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_X_1_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_X_1_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_X_2_COMPONENT_NAME new_rparams_x_2
#define HPS_0_NEW_RPARAMS_X_2_BASE 0x75e0
#define HPS_0_NEW_RPARAMS_X_2_SPAN 16
#define HPS_0_NEW_RPARAMS_X_2_END 0x75ef
#define HPS_0_NEW_RPARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_2_CAPTURE 0
#define HPS_0_NEW_RPARAMS_X_2_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_X_2_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_2_FREQ 50000000
#define HPS_0_NEW_RPARAMS_X_2_HAS_IN 1
#define HPS_0_NEW_RPARAMS_X_2_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_X_2_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_X_2_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_X_3_COMPONENT_NAME new_rparams_x_3
#define HPS_0_NEW_RPARAMS_X_3_BASE 0x7600
#define HPS_0_NEW_RPARAMS_X_3_SPAN 16
#define HPS_0_NEW_RPARAMS_X_3_END 0x760f
#define HPS_0_NEW_RPARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_3_CAPTURE 0
#define HPS_0_NEW_RPARAMS_X_3_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_X_3_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_3_FREQ 50000000
#define HPS_0_NEW_RPARAMS_X_3_HAS_IN 1
#define HPS_0_NEW_RPARAMS_X_3_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_X_3_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_X_3_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_X_4_COMPONENT_NAME new_rparams_x_4
#define HPS_0_NEW_RPARAMS_X_4_BASE 0x7620
#define HPS_0_NEW_RPARAMS_X_4_SPAN 16
#define HPS_0_NEW_RPARAMS_X_4_END 0x762f
#define HPS_0_NEW_RPARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_X_4_CAPTURE 0
#define HPS_0_NEW_RPARAMS_X_4_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_X_4_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_X_4_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_4_FREQ 50000000
#define HPS_0_NEW_RPARAMS_X_4_HAS_IN 1
#define HPS_0_NEW_RPARAMS_X_4_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_X_4_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_X_4_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Y_0_COMPONENT_NAME new_rparams_y_0
#define HPS_0_NEW_RPARAMS_Y_0_BASE 0x7640
#define HPS_0_NEW_RPARAMS_Y_0_SPAN 16
#define HPS_0_NEW_RPARAMS_Y_0_END 0x764f
#define HPS_0_NEW_RPARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_0_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Y_0_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Y_0_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_0_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Y_0_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Y_0_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Y_0_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Y_0_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Y_1_COMPONENT_NAME new_rparams_y_1
#define HPS_0_NEW_RPARAMS_Y_1_BASE 0x7660
#define HPS_0_NEW_RPARAMS_Y_1_SPAN 16
#define HPS_0_NEW_RPARAMS_Y_1_END 0x766f
#define HPS_0_NEW_RPARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_1_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Y_1_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Y_1_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_1_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Y_1_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Y_1_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Y_1_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Y_1_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Y_2_COMPONENT_NAME new_rparams_y_2
#define HPS_0_NEW_RPARAMS_Y_2_BASE 0x7680
#define HPS_0_NEW_RPARAMS_Y_2_SPAN 16
#define HPS_0_NEW_RPARAMS_Y_2_END 0x768f
#define HPS_0_NEW_RPARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_2_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Y_2_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Y_2_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_2_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Y_2_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Y_2_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Y_2_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Y_2_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Y_3_COMPONENT_NAME new_rparams_y_3
#define HPS_0_NEW_RPARAMS_Y_3_BASE 0x76a0
#define HPS_0_NEW_RPARAMS_Y_3_SPAN 16
#define HPS_0_NEW_RPARAMS_Y_3_END 0x76af
#define HPS_0_NEW_RPARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_3_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Y_3_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Y_3_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_3_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Y_3_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Y_3_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Y_3_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Y_3_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Y_4_COMPONENT_NAME new_rparams_y_4
#define HPS_0_NEW_RPARAMS_Y_4_BASE 0x76c0
#define HPS_0_NEW_RPARAMS_Y_4_SPAN 16
#define HPS_0_NEW_RPARAMS_Y_4_END 0x76cf
#define HPS_0_NEW_RPARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Y_4_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Y_4_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Y_4_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_4_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Y_4_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Y_4_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Y_4_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Y_4_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Z_0_COMPONENT_NAME new_rparams_z_0
#define HPS_0_NEW_RPARAMS_Z_0_BASE 0x76e0
#define HPS_0_NEW_RPARAMS_Z_0_SPAN 16
#define HPS_0_NEW_RPARAMS_Z_0_END 0x76ef
#define HPS_0_NEW_RPARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_0_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Z_0_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Z_0_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_0_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Z_0_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Z_0_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Z_0_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Z_0_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Z_1_COMPONENT_NAME new_rparams_z_1
#define HPS_0_NEW_RPARAMS_Z_1_BASE 0x7700
#define HPS_0_NEW_RPARAMS_Z_1_SPAN 16
#define HPS_0_NEW_RPARAMS_Z_1_END 0x770f
#define HPS_0_NEW_RPARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_1_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Z_1_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Z_1_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_1_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Z_1_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Z_1_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Z_1_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Z_1_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Z_2_COMPONENT_NAME new_rparams_z_2
#define HPS_0_NEW_RPARAMS_Z_2_BASE 0x7720
#define HPS_0_NEW_RPARAMS_Z_2_SPAN 16
#define HPS_0_NEW_RPARAMS_Z_2_END 0x772f
#define HPS_0_NEW_RPARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_2_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Z_2_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Z_2_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_2_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Z_2_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Z_2_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Z_2_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Z_2_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Z_3_COMPONENT_NAME new_rparams_z_3
#define HPS_0_NEW_RPARAMS_Z_3_BASE 0x7740
#define HPS_0_NEW_RPARAMS_Z_3_SPAN 16
#define HPS_0_NEW_RPARAMS_Z_3_END 0x774f
#define HPS_0_NEW_RPARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_3_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Z_3_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Z_3_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_3_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Z_3_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Z_3_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Z_3_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Z_3_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_Z_4_COMPONENT_NAME new_rparams_z_4
#define HPS_0_NEW_RPARAMS_Z_4_BASE 0x7760
#define HPS_0_NEW_RPARAMS_Z_4_SPAN 16
#define HPS_0_NEW_RPARAMS_Z_4_END 0x776f
#define HPS_0_NEW_RPARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_Z_4_CAPTURE 0
#define HPS_0_NEW_RPARAMS_Z_4_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_Z_4_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_4_FREQ 50000000
#define HPS_0_NEW_RPARAMS_Z_4_HAS_IN 1
#define HPS_0_NEW_RPARAMS_Z_4_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_Z_4_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_Z_4_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E0_0_COMPONENT_NAME new_rparams_e0_0
#define HPS_0_NEW_RPARAMS_E0_0_BASE 0x7780
#define HPS_0_NEW_RPARAMS_E0_0_SPAN 16
#define HPS_0_NEW_RPARAMS_E0_0_END 0x778f
#define HPS_0_NEW_RPARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_0_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E0_0_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E0_0_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_0_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E0_0_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E0_0_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E0_0_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E0_0_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E0_1_COMPONENT_NAME new_rparams_e0_1
#define HPS_0_NEW_RPARAMS_E0_1_BASE 0x77a0
#define HPS_0_NEW_RPARAMS_E0_1_SPAN 16
#define HPS_0_NEW_RPARAMS_E0_1_END 0x77af
#define HPS_0_NEW_RPARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_1_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E0_1_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E0_1_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_1_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E0_1_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E0_1_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E0_1_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E0_1_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E0_2_COMPONENT_NAME new_rparams_e0_2
#define HPS_0_NEW_RPARAMS_E0_2_BASE 0x77c0
#define HPS_0_NEW_RPARAMS_E0_2_SPAN 16
#define HPS_0_NEW_RPARAMS_E0_2_END 0x77cf
#define HPS_0_NEW_RPARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_2_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E0_2_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E0_2_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_2_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E0_2_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E0_2_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E0_2_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E0_2_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E0_3_COMPONENT_NAME new_rparams_e0_3
#define HPS_0_NEW_RPARAMS_E0_3_BASE 0x77e0
#define HPS_0_NEW_RPARAMS_E0_3_SPAN 16
#define HPS_0_NEW_RPARAMS_E0_3_END 0x77ef
#define HPS_0_NEW_RPARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_3_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E0_3_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E0_3_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_3_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E0_3_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E0_3_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E0_3_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E0_3_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E0_4_COMPONENT_NAME new_rparams_e0_4
#define HPS_0_NEW_RPARAMS_E0_4_BASE 0x7800
#define HPS_0_NEW_RPARAMS_E0_4_SPAN 16
#define HPS_0_NEW_RPARAMS_E0_4_END 0x780f
#define HPS_0_NEW_RPARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E0_4_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E0_4_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E0_4_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_4_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E0_4_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E0_4_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E0_4_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E0_4_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E1_0_COMPONENT_NAME new_rparams_e1_0
#define HPS_0_NEW_RPARAMS_E1_0_BASE 0x7820
#define HPS_0_NEW_RPARAMS_E1_0_SPAN 16
#define HPS_0_NEW_RPARAMS_E1_0_END 0x782f
#define HPS_0_NEW_RPARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_0_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E1_0_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E1_0_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_0_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E1_0_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E1_0_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E1_0_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E1_0_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E1_1_COMPONENT_NAME new_rparams_e1_1
#define HPS_0_NEW_RPARAMS_E1_1_BASE 0x7840
#define HPS_0_NEW_RPARAMS_E1_1_SPAN 16
#define HPS_0_NEW_RPARAMS_E1_1_END 0x784f
#define HPS_0_NEW_RPARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_1_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E1_1_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E1_1_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_1_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E1_1_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E1_1_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E1_1_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E1_1_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E1_2_COMPONENT_NAME new_rparams_e1_2
#define HPS_0_NEW_RPARAMS_E1_2_BASE 0x7860
#define HPS_0_NEW_RPARAMS_E1_2_SPAN 16
#define HPS_0_NEW_RPARAMS_E1_2_END 0x786f
#define HPS_0_NEW_RPARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_2_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E1_2_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E1_2_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_2_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E1_2_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E1_2_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E1_2_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E1_2_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E1_3_COMPONENT_NAME new_rparams_e1_3
#define HPS_0_NEW_RPARAMS_E1_3_BASE 0x7880
#define HPS_0_NEW_RPARAMS_E1_3_SPAN 16
#define HPS_0_NEW_RPARAMS_E1_3_END 0x788f
#define HPS_0_NEW_RPARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_3_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E1_3_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E1_3_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_3_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E1_3_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E1_3_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E1_3_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E1_3_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_NEW_RPARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_NEW_RPARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_NEW_RPARAMS_E1_4_COMPONENT_NAME new_rparams_e1_4
#define HPS_0_NEW_RPARAMS_E1_4_BASE 0x78a0
#define HPS_0_NEW_RPARAMS_E1_4_SPAN 16
#define HPS_0_NEW_RPARAMS_E1_4_END 0x78af
#define HPS_0_NEW_RPARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_NEW_RPARAMS_E1_4_CAPTURE 0
#define HPS_0_NEW_RPARAMS_E1_4_DATA_WIDTH 32
#define HPS_0_NEW_RPARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_NEW_RPARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define HPS_0_NEW_RPARAMS_E1_4_EDGE_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_4_FREQ 50000000
#define HPS_0_NEW_RPARAMS_E1_4_HAS_IN 1
#define HPS_0_NEW_RPARAMS_E1_4_HAS_OUT 0
#define HPS_0_NEW_RPARAMS_E1_4_HAS_TRI 0
#define HPS_0_NEW_RPARAMS_E1_4_IRQ_TYPE NONE
#define HPS_0_NEW_RPARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'step_x_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_STEP_X_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_STEP_X_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_STEP_X_NOW_COMPONENT_NAME step_x_now
#define HPS_0_STEP_X_NOW_BASE 0x7900
#define HPS_0_STEP_X_NOW_SPAN 16
#define HPS_0_STEP_X_NOW_END 0x790f
#define HPS_0_STEP_X_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_STEP_X_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_STEP_X_NOW_CAPTURE 0
#define HPS_0_STEP_X_NOW_DATA_WIDTH 32
#define HPS_0_STEP_X_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_STEP_X_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_STEP_X_NOW_EDGE_TYPE NONE
#define HPS_0_STEP_X_NOW_FREQ 50000000
#define HPS_0_STEP_X_NOW_HAS_IN 1
#define HPS_0_STEP_X_NOW_HAS_OUT 0
#define HPS_0_STEP_X_NOW_HAS_TRI 0
#define HPS_0_STEP_X_NOW_IRQ_TYPE NONE
#define HPS_0_STEP_X_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_y_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_STEP_Y_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_STEP_Y_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_STEP_Y_NOW_COMPONENT_NAME step_y_now
#define HPS_0_STEP_Y_NOW_BASE 0x7920
#define HPS_0_STEP_Y_NOW_SPAN 16
#define HPS_0_STEP_Y_NOW_END 0x792f
#define HPS_0_STEP_Y_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_STEP_Y_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_STEP_Y_NOW_CAPTURE 0
#define HPS_0_STEP_Y_NOW_DATA_WIDTH 32
#define HPS_0_STEP_Y_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_STEP_Y_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_STEP_Y_NOW_EDGE_TYPE NONE
#define HPS_0_STEP_Y_NOW_FREQ 50000000
#define HPS_0_STEP_Y_NOW_HAS_IN 1
#define HPS_0_STEP_Y_NOW_HAS_OUT 0
#define HPS_0_STEP_Y_NOW_HAS_TRI 0
#define HPS_0_STEP_Y_NOW_IRQ_TYPE NONE
#define HPS_0_STEP_Y_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_z_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_STEP_Z_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_STEP_Z_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_STEP_Z_NOW_COMPONENT_NAME step_z_now
#define HPS_0_STEP_Z_NOW_BASE 0x7940
#define HPS_0_STEP_Z_NOW_SPAN 16
#define HPS_0_STEP_Z_NOW_END 0x794f
#define HPS_0_STEP_Z_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_STEP_Z_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_STEP_Z_NOW_CAPTURE 0
#define HPS_0_STEP_Z_NOW_DATA_WIDTH 32
#define HPS_0_STEP_Z_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_STEP_Z_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_STEP_Z_NOW_EDGE_TYPE NONE
#define HPS_0_STEP_Z_NOW_FREQ 50000000
#define HPS_0_STEP_Z_NOW_HAS_IN 1
#define HPS_0_STEP_Z_NOW_HAS_OUT 0
#define HPS_0_STEP_Z_NOW_HAS_TRI 0
#define HPS_0_STEP_Z_NOW_IRQ_TYPE NONE
#define HPS_0_STEP_Z_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e0_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_STEP_E0_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_STEP_E0_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_STEP_E0_NOW_COMPONENT_NAME step_e0_now
#define HPS_0_STEP_E0_NOW_BASE 0x7960
#define HPS_0_STEP_E0_NOW_SPAN 16
#define HPS_0_STEP_E0_NOW_END 0x796f
#define HPS_0_STEP_E0_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_STEP_E0_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_STEP_E0_NOW_CAPTURE 0
#define HPS_0_STEP_E0_NOW_DATA_WIDTH 32
#define HPS_0_STEP_E0_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_STEP_E0_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_STEP_E0_NOW_EDGE_TYPE NONE
#define HPS_0_STEP_E0_NOW_FREQ 50000000
#define HPS_0_STEP_E0_NOW_HAS_IN 1
#define HPS_0_STEP_E0_NOW_HAS_OUT 0
#define HPS_0_STEP_E0_NOW_HAS_TRI 0
#define HPS_0_STEP_E0_NOW_IRQ_TYPE NONE
#define HPS_0_STEP_E0_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e1_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_STEP_E1_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_STEP_E1_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_STEP_E1_NOW_COMPONENT_NAME step_e1_now
#define HPS_0_STEP_E1_NOW_BASE 0x7980
#define HPS_0_STEP_E1_NOW_SPAN 16
#define HPS_0_STEP_E1_NOW_END 0x798f
#define HPS_0_STEP_E1_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_STEP_E1_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_STEP_E1_NOW_CAPTURE 0
#define HPS_0_STEP_E1_NOW_DATA_WIDTH 32
#define HPS_0_STEP_E1_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_STEP_E1_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_STEP_E1_NOW_EDGE_TYPE NONE
#define HPS_0_STEP_E1_NOW_FREQ 50000000
#define HPS_0_STEP_E1_NOW_HAS_IN 1
#define HPS_0_STEP_E1_NOW_HAS_OUT 0
#define HPS_0_STEP_E1_NOW_HAS_TRI 0
#define HPS_0_STEP_E1_NOW_IRQ_TYPE NONE
#define HPS_0_STEP_E1_NOW_RESET_VALUE 0

/*
 * Macros for device 'max_params_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MAX_PARAMS_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MAX_PARAMS_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MAX_PARAMS_0_COMPONENT_NAME max_params_0
#define HPS_0_MAX_PARAMS_0_BASE 0x79a0
#define HPS_0_MAX_PARAMS_0_SPAN 16
#define HPS_0_MAX_PARAMS_0_END 0x79af
#define HPS_0_MAX_PARAMS_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MAX_PARAMS_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MAX_PARAMS_0_CAPTURE 0
#define HPS_0_MAX_PARAMS_0_DATA_WIDTH 32
#define HPS_0_MAX_PARAMS_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_MAX_PARAMS_0_DRIVEN_SIM_VALUE 0
#define HPS_0_MAX_PARAMS_0_EDGE_TYPE NONE
#define HPS_0_MAX_PARAMS_0_FREQ 50000000
#define HPS_0_MAX_PARAMS_0_HAS_IN 1
#define HPS_0_MAX_PARAMS_0_HAS_OUT 0
#define HPS_0_MAX_PARAMS_0_HAS_TRI 0
#define HPS_0_MAX_PARAMS_0_IRQ_TYPE NONE
#define HPS_0_MAX_PARAMS_0_RESET_VALUE 0

/*
 * Macros for device 'max_params_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MAX_PARAMS_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MAX_PARAMS_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MAX_PARAMS_1_COMPONENT_NAME max_params_1
#define HPS_0_MAX_PARAMS_1_BASE 0x79c0
#define HPS_0_MAX_PARAMS_1_SPAN 16
#define HPS_0_MAX_PARAMS_1_END 0x79cf
#define HPS_0_MAX_PARAMS_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MAX_PARAMS_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MAX_PARAMS_1_CAPTURE 0
#define HPS_0_MAX_PARAMS_1_DATA_WIDTH 32
#define HPS_0_MAX_PARAMS_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_MAX_PARAMS_1_DRIVEN_SIM_VALUE 0
#define HPS_0_MAX_PARAMS_1_EDGE_TYPE NONE
#define HPS_0_MAX_PARAMS_1_FREQ 50000000
#define HPS_0_MAX_PARAMS_1_HAS_IN 1
#define HPS_0_MAX_PARAMS_1_HAS_OUT 0
#define HPS_0_MAX_PARAMS_1_HAS_TRI 0
#define HPS_0_MAX_PARAMS_1_IRQ_TYPE NONE
#define HPS_0_MAX_PARAMS_1_RESET_VALUE 0

/*
 * Macros for device 'max_params_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MAX_PARAMS_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MAX_PARAMS_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MAX_PARAMS_2_COMPONENT_NAME max_params_2
#define HPS_0_MAX_PARAMS_2_BASE 0x79e0
#define HPS_0_MAX_PARAMS_2_SPAN 16
#define HPS_0_MAX_PARAMS_2_END 0x79ef
#define HPS_0_MAX_PARAMS_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MAX_PARAMS_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MAX_PARAMS_2_CAPTURE 0
#define HPS_0_MAX_PARAMS_2_DATA_WIDTH 32
#define HPS_0_MAX_PARAMS_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_MAX_PARAMS_2_DRIVEN_SIM_VALUE 0
#define HPS_0_MAX_PARAMS_2_EDGE_TYPE NONE
#define HPS_0_MAX_PARAMS_2_FREQ 50000000
#define HPS_0_MAX_PARAMS_2_HAS_IN 1
#define HPS_0_MAX_PARAMS_2_HAS_OUT 0
#define HPS_0_MAX_PARAMS_2_HAS_TRI 0
#define HPS_0_MAX_PARAMS_2_IRQ_TYPE NONE
#define HPS_0_MAX_PARAMS_2_RESET_VALUE 0

/*
 * Macros for device 'max_params_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MAX_PARAMS_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MAX_PARAMS_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MAX_PARAMS_3_COMPONENT_NAME max_params_3
#define HPS_0_MAX_PARAMS_3_BASE 0x7a00
#define HPS_0_MAX_PARAMS_3_SPAN 16
#define HPS_0_MAX_PARAMS_3_END 0x7a0f
#define HPS_0_MAX_PARAMS_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MAX_PARAMS_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MAX_PARAMS_3_CAPTURE 0
#define HPS_0_MAX_PARAMS_3_DATA_WIDTH 32
#define HPS_0_MAX_PARAMS_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_MAX_PARAMS_3_DRIVEN_SIM_VALUE 0
#define HPS_0_MAX_PARAMS_3_EDGE_TYPE NONE
#define HPS_0_MAX_PARAMS_3_FREQ 50000000
#define HPS_0_MAX_PARAMS_3_HAS_IN 1
#define HPS_0_MAX_PARAMS_3_HAS_OUT 0
#define HPS_0_MAX_PARAMS_3_HAS_TRI 0
#define HPS_0_MAX_PARAMS_3_IRQ_TYPE NONE
#define HPS_0_MAX_PARAMS_3_RESET_VALUE 0

/*
 * Macros for device 'max_params_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MAX_PARAMS_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MAX_PARAMS_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MAX_PARAMS_4_COMPONENT_NAME max_params_4
#define HPS_0_MAX_PARAMS_4_BASE 0x7a20
#define HPS_0_MAX_PARAMS_4_SPAN 16
#define HPS_0_MAX_PARAMS_4_END 0x7a2f
#define HPS_0_MAX_PARAMS_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MAX_PARAMS_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MAX_PARAMS_4_CAPTURE 0
#define HPS_0_MAX_PARAMS_4_DATA_WIDTH 32
#define HPS_0_MAX_PARAMS_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_MAX_PARAMS_4_DRIVEN_SIM_VALUE 0
#define HPS_0_MAX_PARAMS_4_EDGE_TYPE NONE
#define HPS_0_MAX_PARAMS_4_FREQ 50000000
#define HPS_0_MAX_PARAMS_4_HAS_IN 1
#define HPS_0_MAX_PARAMS_4_HAS_OUT 0
#define HPS_0_MAX_PARAMS_4_HAS_TRI 0
#define HPS_0_MAX_PARAMS_4_IRQ_TYPE NONE
#define HPS_0_MAX_PARAMS_4_RESET_VALUE 0

/*
 * Macros for device 'max_timing_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MAX_TIMING_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MAX_TIMING_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MAX_TIMING_0_COMPONENT_NAME max_timing_0
#define HPS_0_MAX_TIMING_0_BASE 0x7a40
#define HPS_0_MAX_TIMING_0_SPAN 16
#define HPS_0_MAX_TIMING_0_END 0x7a4f
#define HPS_0_MAX_TIMING_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MAX_TIMING_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MAX_TIMING_0_CAPTURE 0
#define HPS_0_MAX_TIMING_0_DATA_WIDTH 32
#define HPS_0_MAX_TIMING_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_MAX_TIMING_0_DRIVEN_SIM_VALUE 0
#define HPS_0_MAX_TIMING_0_EDGE_TYPE NONE
#define HPS_0_MAX_TIMING_0_FREQ 50000000
#define HPS_0_MAX_TIMING_0_HAS_IN 1
#define HPS_0_MAX_TIMING_0_HAS_OUT 0
#define HPS_0_MAX_TIMING_0_HAS_TRI 0
#define HPS_0_MAX_TIMING_0_IRQ_TYPE NONE
#define HPS_0_MAX_TIMING_0_RESET_VALUE 0

/*
 * Macros for device 'max_timing_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MAX_TIMING_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MAX_TIMING_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MAX_TIMING_1_COMPONENT_NAME max_timing_1
#define HPS_0_MAX_TIMING_1_BASE 0x7a60
#define HPS_0_MAX_TIMING_1_SPAN 16
#define HPS_0_MAX_TIMING_1_END 0x7a6f
#define HPS_0_MAX_TIMING_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MAX_TIMING_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MAX_TIMING_1_CAPTURE 0
#define HPS_0_MAX_TIMING_1_DATA_WIDTH 32
#define HPS_0_MAX_TIMING_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_MAX_TIMING_1_DRIVEN_SIM_VALUE 0
#define HPS_0_MAX_TIMING_1_EDGE_TYPE NONE
#define HPS_0_MAX_TIMING_1_FREQ 50000000
#define HPS_0_MAX_TIMING_1_HAS_IN 1
#define HPS_0_MAX_TIMING_1_HAS_OUT 0
#define HPS_0_MAX_TIMING_1_HAS_TRI 0
#define HPS_0_MAX_TIMING_1_IRQ_TYPE NONE
#define HPS_0_MAX_TIMING_1_RESET_VALUE 0

/*
 * Macros for device 'max_timing_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MAX_TIMING_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MAX_TIMING_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MAX_TIMING_2_COMPONENT_NAME max_timing_2
#define HPS_0_MAX_TIMING_2_BASE 0x7a80
#define HPS_0_MAX_TIMING_2_SPAN 16
#define HPS_0_MAX_TIMING_2_END 0x7a8f
#define HPS_0_MAX_TIMING_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MAX_TIMING_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MAX_TIMING_2_CAPTURE 0
#define HPS_0_MAX_TIMING_2_DATA_WIDTH 32
#define HPS_0_MAX_TIMING_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_MAX_TIMING_2_DRIVEN_SIM_VALUE 0
#define HPS_0_MAX_TIMING_2_EDGE_TYPE NONE
#define HPS_0_MAX_TIMING_2_FREQ 50000000
#define HPS_0_MAX_TIMING_2_HAS_IN 1
#define HPS_0_MAX_TIMING_2_HAS_OUT 0
#define HPS_0_MAX_TIMING_2_HAS_TRI 0
#define HPS_0_MAX_TIMING_2_IRQ_TYPE NONE
#define HPS_0_MAX_TIMING_2_RESET_VALUE 0

/*
 * Macros for device 'max_timing_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MAX_TIMING_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MAX_TIMING_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MAX_TIMING_3_COMPONENT_NAME max_timing_3
#define HPS_0_MAX_TIMING_3_BASE 0x7aa0
#define HPS_0_MAX_TIMING_3_SPAN 16
#define HPS_0_MAX_TIMING_3_END 0x7aaf
#define HPS_0_MAX_TIMING_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MAX_TIMING_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MAX_TIMING_3_CAPTURE 0
#define HPS_0_MAX_TIMING_3_DATA_WIDTH 32
#define HPS_0_MAX_TIMING_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_MAX_TIMING_3_DRIVEN_SIM_VALUE 0
#define HPS_0_MAX_TIMING_3_EDGE_TYPE NONE
#define HPS_0_MAX_TIMING_3_FREQ 50000000
#define HPS_0_MAX_TIMING_3_HAS_IN 1
#define HPS_0_MAX_TIMING_3_HAS_OUT 0
#define HPS_0_MAX_TIMING_3_HAS_TRI 0
#define HPS_0_MAX_TIMING_3_IRQ_TYPE NONE
#define HPS_0_MAX_TIMING_3_RESET_VALUE 0

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ILC_COMPONENT_TYPE interrupt_latency_counter
#define HPS_0_ILC_COMPONENT_NAME ILC
#define HPS_0_ILC_BASE 0x30000
#define HPS_0_ILC_SPAN 256
#define HPS_0_ILC_END 0x300ff

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_BASE 0x1000
#define HPS_0_BRIDGES_SYSID_QSYS_SPAN 8
#define HPS_0_BRIDGES_SYSID_QSYS_END 0x1007
#define HPS_0_BRIDGES_SYSID_QSYS_ID 4294906626
#define HPS_0_BRIDGES_SYSID_QSYS_TIMESTAMP 1590594581

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_BASE 0x2000
#define HPS_0_BRIDGES_JTAG_UART_SPAN 8
#define HPS_0_BRIDGES_JTAG_UART_END 0x2007
#define HPS_0_BRIDGES_JTAG_UART_READ_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_BRIDGES_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'flags_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_FLAGS_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_FLAGS_IN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_FLAGS_IN_COMPONENT_NAME flags_in
#define HPS_0_BRIDGES_FLAGS_IN_BASE 0x4000
#define HPS_0_BRIDGES_FLAGS_IN_SPAN 16
#define HPS_0_BRIDGES_FLAGS_IN_END 0x400f
#define HPS_0_BRIDGES_FLAGS_IN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_FLAGS_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_FLAGS_IN_CAPTURE 0
#define HPS_0_BRIDGES_FLAGS_IN_DATA_WIDTH 32
#define HPS_0_BRIDGES_FLAGS_IN_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_FLAGS_IN_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_FLAGS_IN_EDGE_TYPE NONE
#define HPS_0_BRIDGES_FLAGS_IN_FREQ 50000000
#define HPS_0_BRIDGES_FLAGS_IN_HAS_IN 1
#define HPS_0_BRIDGES_FLAGS_IN_HAS_OUT 0
#define HPS_0_BRIDGES_FLAGS_IN_HAS_TRI 0
#define HPS_0_BRIDGES_FLAGS_IN_IRQ_TYPE NONE
#define HPS_0_BRIDGES_FLAGS_IN_RESET_VALUE 0

/*
 * Macros for device 'flags_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_FLAGS_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_FLAGS_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_FLAGS_OUT_COMPONENT_NAME flags_out
#define HPS_0_BRIDGES_FLAGS_OUT_BASE 0x4020
#define HPS_0_BRIDGES_FLAGS_OUT_SPAN 16
#define HPS_0_BRIDGES_FLAGS_OUT_END 0x402f
#define HPS_0_BRIDGES_FLAGS_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_FLAGS_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_FLAGS_OUT_CAPTURE 0
#define HPS_0_BRIDGES_FLAGS_OUT_DATA_WIDTH 32
#define HPS_0_BRIDGES_FLAGS_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_FLAGS_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_FLAGS_OUT_EDGE_TYPE NONE
#define HPS_0_BRIDGES_FLAGS_OUT_FREQ 50000000
#define HPS_0_BRIDGES_FLAGS_OUT_HAS_IN 0
#define HPS_0_BRIDGES_FLAGS_OUT_HAS_OUT 1
#define HPS_0_BRIDGES_FLAGS_OUT_HAS_TRI 0
#define HPS_0_BRIDGES_FLAGS_OUT_IRQ_TYPE NONE
#define HPS_0_BRIDGES_FLAGS_OUT_RESET_VALUE 0

/*
 * Macros for device 'command_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_TYPE_COMPONENT_NAME command_type
#define HPS_0_BRIDGES_COMMAND_TYPE_BASE 0x4040
#define HPS_0_BRIDGES_COMMAND_TYPE_SPAN 16
#define HPS_0_BRIDGES_COMMAND_TYPE_END 0x404f
#define HPS_0_BRIDGES_COMMAND_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_TYPE_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_TYPE_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_TYPE_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_TYPE_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_TYPE_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_TYPE_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_TYPE_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_TYPE_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_TYPE_RESET_VALUE 0

/*
 * Macros for device 'command_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_X_COMPONENT_NAME command_x
#define HPS_0_BRIDGES_COMMAND_X_BASE 0x5000
#define HPS_0_BRIDGES_COMMAND_X_SPAN 16
#define HPS_0_BRIDGES_COMMAND_X_END 0x500f
#define HPS_0_BRIDGES_COMMAND_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_X_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_X_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_X_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_X_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_X_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_X_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_X_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_X_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_X_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_X_RESET_VALUE 0

/*
 * Macros for device 'command_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_Y_COMPONENT_NAME command_y
#define HPS_0_BRIDGES_COMMAND_Y_BASE 0x5020
#define HPS_0_BRIDGES_COMMAND_Y_SPAN 16
#define HPS_0_BRIDGES_COMMAND_Y_END 0x502f
#define HPS_0_BRIDGES_COMMAND_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_Y_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_Y_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_Y_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_Y_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_Y_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_Y_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_Y_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_Y_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_Y_RESET_VALUE 0

/*
 * Macros for device 'command_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_Z_COMPONENT_NAME command_z
#define HPS_0_BRIDGES_COMMAND_Z_BASE 0x5040
#define HPS_0_BRIDGES_COMMAND_Z_SPAN 16
#define HPS_0_BRIDGES_COMMAND_Z_END 0x504f
#define HPS_0_BRIDGES_COMMAND_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_Z_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_Z_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_Z_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_Z_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_Z_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_Z_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_Z_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_Z_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_Z_RESET_VALUE 0

/*
 * Macros for device 'command_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_E0_COMPONENT_NAME command_e0
#define HPS_0_BRIDGES_COMMAND_E0_BASE 0x5060
#define HPS_0_BRIDGES_COMMAND_E0_SPAN 16
#define HPS_0_BRIDGES_COMMAND_E0_END 0x506f
#define HPS_0_BRIDGES_COMMAND_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_E0_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_E0_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_E0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_E0_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_E0_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_E0_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_E0_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_E0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_E0_RESET_VALUE 0

/*
 * Macros for device 'command_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_E1_COMPONENT_NAME command_e1
#define HPS_0_BRIDGES_COMMAND_E1_BASE 0x5080
#define HPS_0_BRIDGES_COMMAND_E1_SPAN 16
#define HPS_0_BRIDGES_COMMAND_E1_END 0x508f
#define HPS_0_BRIDGES_COMMAND_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_E1_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_E1_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_E1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_E1_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_E1_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_E1_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_E1_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_E1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_E1_RESET_VALUE 0

/*
 * Macros for device 'command_f_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_F_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_F_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_F_X_COMPONENT_NAME command_f_x
#define HPS_0_BRIDGES_COMMAND_F_X_BASE 0x50a0
#define HPS_0_BRIDGES_COMMAND_F_X_SPAN 16
#define HPS_0_BRIDGES_COMMAND_F_X_END 0x50af
#define HPS_0_BRIDGES_COMMAND_F_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_X_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_F_X_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_F_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_F_X_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_F_X_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_X_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_F_X_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_F_X_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_F_X_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_F_X_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_X_RESET_VALUE 0

/*
 * Macros for device 'command_t', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_T_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_T_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_T_COMPONENT_NAME command_t
#define HPS_0_BRIDGES_COMMAND_T_BASE 0x50c0
#define HPS_0_BRIDGES_COMMAND_T_SPAN 16
#define HPS_0_BRIDGES_COMMAND_T_END 0x50cf
#define HPS_0_BRIDGES_COMMAND_T_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_T_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_T_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_T_DATA_WIDTH 12
#define HPS_0_BRIDGES_COMMAND_T_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_T_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_T_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_T_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_T_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_T_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_T_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_T_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_T_RESET_VALUE 0

/*
 * Macros for device 'command_dt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_DT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_DT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_DT_COMPONENT_NAME command_dt
#define HPS_0_BRIDGES_COMMAND_DT_BASE 0x50e0
#define HPS_0_BRIDGES_COMMAND_DT_SPAN 16
#define HPS_0_BRIDGES_COMMAND_DT_END 0x50ef
#define HPS_0_BRIDGES_COMMAND_DT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_DT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_DT_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_DT_DATA_WIDTH 12
#define HPS_0_BRIDGES_COMMAND_DT_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_DT_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_DT_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_DT_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_DT_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_DT_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_DT_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_DT_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_DT_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_COMPONENT_NAME settings_max_speed_x
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_BASE 0x5100
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_END 0x510f
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_X_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_COMPONENT_NAME settings_max_speed_y
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_BASE 0x5120
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_END 0x512f
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_COMPONENT_NAME settings_max_speed_z
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_BASE 0x5140
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_END 0x514f
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_COMPONENT_NAME settings_max_speed_e0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_BASE 0x5160
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_END 0x516f
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_COMPONENT_NAME settings_max_speed_e1
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_BASE 0x5180
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_END 0x518f
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_SPEED_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_COMPONENT_NAME settings_acceleration_x
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_BASE 0x51a0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_END 0x51af
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_X_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_COMPONENT_NAME settings_acceleration_y
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_BASE 0x51c0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_END 0x51cf
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_COMPONENT_NAME settings_acceleration_z
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_BASE 0x51e0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_END 0x51ef
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_COMPONENT_NAME settings_acceleration_e0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_BASE 0x5200
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_END 0x520f
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_COMPONENT_NAME settings_acceleration_e1
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_BASE 0x5220
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_END 0x522f
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_ACCELERATION_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_JERK_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_JERK_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_JERK_X_COMPONENT_NAME settings_jerk_x
#define HPS_0_BRIDGES_SETTINGS_JERK_X_BASE 0x5240
#define HPS_0_BRIDGES_SETTINGS_JERK_X_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_JERK_X_END 0x524f
#define HPS_0_BRIDGES_SETTINGS_JERK_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_X_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_X_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_JERK_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_JERK_X_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_X_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_X_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_JERK_X_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_JERK_X_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_JERK_X_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_JERK_X_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_X_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_JERK_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_COMPONENT_NAME settings_jerk_y
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_BASE 0x5260
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_END 0x526f
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_JERK_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_COMPONENT_NAME settings_jerk_z
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_BASE 0x5280
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_END 0x528f
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_JERK_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_COMPONENT_NAME settings_jerk_e0
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_BASE 0x52a0
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_END 0x52af
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_JERK_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_COMPONENT_NAME settings_jerk_e1
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_BASE 0x52c0
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_END 0x52cf
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_DATA_WIDTH 32
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_JERK_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_COMPONENT_NAME settings_max_temp_e0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_BASE 0x52e0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_END 0x52ef
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_DATA_WIDTH 12
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_COMPONENT_NAME settings_max_temp_e1
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_BASE 0x5300
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_END 0x530f
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_DATA_WIDTH 12
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_bed', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_COMPONENT_NAME settings_max_temp_bed
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_BASE 0x5320
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_SPAN 16
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_END 0x532f
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_CAPTURE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_DATA_WIDTH 12
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_FREQ 50000000
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_HAS_IN 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_HAS_OUT 1
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_HAS_TRI 0
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SETTINGS_MAX_TEMP_BED_RESET_VALUE 0

/*
 * Macros for device 'command_f_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_F_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_F_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_F_Y_COMPONENT_NAME command_f_y
#define HPS_0_BRIDGES_COMMAND_F_Y_BASE 0x5340
#define HPS_0_BRIDGES_COMMAND_F_Y_SPAN 16
#define HPS_0_BRIDGES_COMMAND_F_Y_END 0x534f
#define HPS_0_BRIDGES_COMMAND_F_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_Y_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_F_Y_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_F_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_F_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_F_Y_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_Y_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_F_Y_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_F_Y_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_F_Y_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_F_Y_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_Y_RESET_VALUE 0

/*
 * Macros for device 'command_f_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_F_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_F_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_F_Z_COMPONENT_NAME command_f_z
#define HPS_0_BRIDGES_COMMAND_F_Z_BASE 0x5360
#define HPS_0_BRIDGES_COMMAND_F_Z_SPAN 16
#define HPS_0_BRIDGES_COMMAND_F_Z_END 0x536f
#define HPS_0_BRIDGES_COMMAND_F_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_Z_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_F_Z_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_F_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_F_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_F_Z_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_Z_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_F_Z_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_F_Z_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_F_Z_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_F_Z_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_Z_RESET_VALUE 0

/*
 * Macros for device 'command_f_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_F_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_F_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_F_E0_COMPONENT_NAME command_f_e0
#define HPS_0_BRIDGES_COMMAND_F_E0_BASE 0x5380
#define HPS_0_BRIDGES_COMMAND_F_E0_SPAN 16
#define HPS_0_BRIDGES_COMMAND_F_E0_END 0x538f
#define HPS_0_BRIDGES_COMMAND_F_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_E0_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_F_E0_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_F_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_F_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_F_E0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_E0_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_F_E0_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_F_E0_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_F_E0_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_F_E0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_E0_RESET_VALUE 0

/*
 * Macros for device 'command_f_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_COMMAND_F_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_COMMAND_F_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_COMMAND_F_E1_COMPONENT_NAME command_f_e1
#define HPS_0_BRIDGES_COMMAND_F_E1_BASE 0x53a0
#define HPS_0_BRIDGES_COMMAND_F_E1_SPAN 16
#define HPS_0_BRIDGES_COMMAND_F_E1_END 0x53af
#define HPS_0_BRIDGES_COMMAND_F_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_COMMAND_F_E1_CAPTURE 0
#define HPS_0_BRIDGES_COMMAND_F_E1_DATA_WIDTH 32
#define HPS_0_BRIDGES_COMMAND_F_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_COMMAND_F_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_COMMAND_F_E1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_E1_FREQ 50000000
#define HPS_0_BRIDGES_COMMAND_F_E1_HAS_IN 0
#define HPS_0_BRIDGES_COMMAND_F_E1_HAS_OUT 1
#define HPS_0_BRIDGES_COMMAND_F_E1_HAS_TRI 0
#define HPS_0_BRIDGES_COMMAND_F_E1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_COMMAND_F_E1_RESET_VALUE 0

/*
 * Macros for device 'temp_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TEMP_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TEMP_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TEMP_0_COMPONENT_NAME temp_0
#define HPS_0_BRIDGES_TEMP_0_BASE 0x6000
#define HPS_0_BRIDGES_TEMP_0_SPAN 16
#define HPS_0_BRIDGES_TEMP_0_END 0x600f
#define HPS_0_BRIDGES_TEMP_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TEMP_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TEMP_0_CAPTURE 0
#define HPS_0_BRIDGES_TEMP_0_DATA_WIDTH 12
#define HPS_0_BRIDGES_TEMP_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TEMP_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TEMP_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TEMP_0_FREQ 50000000
#define HPS_0_BRIDGES_TEMP_0_HAS_IN 1
#define HPS_0_BRIDGES_TEMP_0_HAS_OUT 0
#define HPS_0_BRIDGES_TEMP_0_HAS_TRI 0
#define HPS_0_BRIDGES_TEMP_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TEMP_0_RESET_VALUE 0

/*
 * Macros for device 'temp_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TEMP_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TEMP_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TEMP_1_COMPONENT_NAME temp_1
#define HPS_0_BRIDGES_TEMP_1_BASE 0x6020
#define HPS_0_BRIDGES_TEMP_1_SPAN 16
#define HPS_0_BRIDGES_TEMP_1_END 0x602f
#define HPS_0_BRIDGES_TEMP_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TEMP_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TEMP_1_CAPTURE 0
#define HPS_0_BRIDGES_TEMP_1_DATA_WIDTH 12
#define HPS_0_BRIDGES_TEMP_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TEMP_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TEMP_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TEMP_1_FREQ 50000000
#define HPS_0_BRIDGES_TEMP_1_HAS_IN 1
#define HPS_0_BRIDGES_TEMP_1_HAS_OUT 0
#define HPS_0_BRIDGES_TEMP_1_HAS_TRI 0
#define HPS_0_BRIDGES_TEMP_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TEMP_1_RESET_VALUE 0

/*
 * Macros for device 'temp_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TEMP_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TEMP_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TEMP_2_COMPONENT_NAME temp_2
#define HPS_0_BRIDGES_TEMP_2_BASE 0x6040
#define HPS_0_BRIDGES_TEMP_2_SPAN 16
#define HPS_0_BRIDGES_TEMP_2_END 0x604f
#define HPS_0_BRIDGES_TEMP_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TEMP_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TEMP_2_CAPTURE 0
#define HPS_0_BRIDGES_TEMP_2_DATA_WIDTH 12
#define HPS_0_BRIDGES_TEMP_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TEMP_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TEMP_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TEMP_2_FREQ 50000000
#define HPS_0_BRIDGES_TEMP_2_HAS_IN 1
#define HPS_0_BRIDGES_TEMP_2_HAS_OUT 0
#define HPS_0_BRIDGES_TEMP_2_HAS_TRI 0
#define HPS_0_BRIDGES_TEMP_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TEMP_2_RESET_VALUE 0

/*
 * Macros for device 'position_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_POSITION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_POSITION_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_POSITION_X_COMPONENT_NAME position_x
#define HPS_0_BRIDGES_POSITION_X_BASE 0x6060
#define HPS_0_BRIDGES_POSITION_X_SPAN 16
#define HPS_0_BRIDGES_POSITION_X_END 0x606f
#define HPS_0_BRIDGES_POSITION_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_POSITION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_POSITION_X_CAPTURE 0
#define HPS_0_BRIDGES_POSITION_X_DATA_WIDTH 12
#define HPS_0_BRIDGES_POSITION_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_POSITION_X_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_POSITION_X_EDGE_TYPE NONE
#define HPS_0_BRIDGES_POSITION_X_FREQ 50000000
#define HPS_0_BRIDGES_POSITION_X_HAS_IN 1
#define HPS_0_BRIDGES_POSITION_X_HAS_OUT 0
#define HPS_0_BRIDGES_POSITION_X_HAS_TRI 0
#define HPS_0_BRIDGES_POSITION_X_IRQ_TYPE NONE
#define HPS_0_BRIDGES_POSITION_X_RESET_VALUE 0

/*
 * Macros for device 'position_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_POSITION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_POSITION_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_POSITION_Y_COMPONENT_NAME position_y
#define HPS_0_BRIDGES_POSITION_Y_BASE 0x6080
#define HPS_0_BRIDGES_POSITION_Y_SPAN 16
#define HPS_0_BRIDGES_POSITION_Y_END 0x608f
#define HPS_0_BRIDGES_POSITION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_POSITION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_POSITION_Y_CAPTURE 0
#define HPS_0_BRIDGES_POSITION_Y_DATA_WIDTH 12
#define HPS_0_BRIDGES_POSITION_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_POSITION_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_POSITION_Y_EDGE_TYPE NONE
#define HPS_0_BRIDGES_POSITION_Y_FREQ 50000000
#define HPS_0_BRIDGES_POSITION_Y_HAS_IN 1
#define HPS_0_BRIDGES_POSITION_Y_HAS_OUT 0
#define HPS_0_BRIDGES_POSITION_Y_HAS_TRI 0
#define HPS_0_BRIDGES_POSITION_Y_IRQ_TYPE NONE
#define HPS_0_BRIDGES_POSITION_Y_RESET_VALUE 0

/*
 * Macros for device 'position_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_POSITION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_POSITION_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_POSITION_Z_COMPONENT_NAME position_z
#define HPS_0_BRIDGES_POSITION_Z_BASE 0x60a0
#define HPS_0_BRIDGES_POSITION_Z_SPAN 16
#define HPS_0_BRIDGES_POSITION_Z_END 0x60af
#define HPS_0_BRIDGES_POSITION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_POSITION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_POSITION_Z_CAPTURE 0
#define HPS_0_BRIDGES_POSITION_Z_DATA_WIDTH 12
#define HPS_0_BRIDGES_POSITION_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_POSITION_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_POSITION_Z_EDGE_TYPE NONE
#define HPS_0_BRIDGES_POSITION_Z_FREQ 50000000
#define HPS_0_BRIDGES_POSITION_Z_HAS_IN 1
#define HPS_0_BRIDGES_POSITION_Z_HAS_OUT 0
#define HPS_0_BRIDGES_POSITION_Z_HAS_TRI 0
#define HPS_0_BRIDGES_POSITION_Z_IRQ_TYPE NONE
#define HPS_0_BRIDGES_POSITION_Z_RESET_VALUE 0

/*
 * Macros for device 'position_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_POSITION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_POSITION_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_POSITION_E0_COMPONENT_NAME position_e0
#define HPS_0_BRIDGES_POSITION_E0_BASE 0x60c0
#define HPS_0_BRIDGES_POSITION_E0_SPAN 16
#define HPS_0_BRIDGES_POSITION_E0_END 0x60cf
#define HPS_0_BRIDGES_POSITION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_POSITION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_POSITION_E0_CAPTURE 0
#define HPS_0_BRIDGES_POSITION_E0_DATA_WIDTH 12
#define HPS_0_BRIDGES_POSITION_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_POSITION_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_POSITION_E0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_POSITION_E0_FREQ 50000000
#define HPS_0_BRIDGES_POSITION_E0_HAS_IN 1
#define HPS_0_BRIDGES_POSITION_E0_HAS_OUT 0
#define HPS_0_BRIDGES_POSITION_E0_HAS_TRI 0
#define HPS_0_BRIDGES_POSITION_E0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_POSITION_E0_RESET_VALUE 0

/*
 * Macros for device 'position_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_POSITION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_POSITION_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_POSITION_E1_COMPONENT_NAME position_e1
#define HPS_0_BRIDGES_POSITION_E1_BASE 0x60e0
#define HPS_0_BRIDGES_POSITION_E1_SPAN 16
#define HPS_0_BRIDGES_POSITION_E1_END 0x60ef
#define HPS_0_BRIDGES_POSITION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_POSITION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_POSITION_E1_CAPTURE 0
#define HPS_0_BRIDGES_POSITION_E1_DATA_WIDTH 12
#define HPS_0_BRIDGES_POSITION_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_POSITION_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_POSITION_E1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_POSITION_E1_FREQ 50000000
#define HPS_0_BRIDGES_POSITION_E1_HAS_IN 1
#define HPS_0_BRIDGES_POSITION_E1_HAS_OUT 0
#define HPS_0_BRIDGES_POSITION_E1_HAS_TRI 0
#define HPS_0_BRIDGES_POSITION_E1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_POSITION_E1_RESET_VALUE 0

/*
 * Macros for device 'position_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_POSITION_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_POSITION_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_POSITION_TYPE_COMPONENT_NAME position_type
#define HPS_0_BRIDGES_POSITION_TYPE_BASE 0x6100
#define HPS_0_BRIDGES_POSITION_TYPE_SPAN 16
#define HPS_0_BRIDGES_POSITION_TYPE_END 0x610f
#define HPS_0_BRIDGES_POSITION_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_POSITION_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_POSITION_TYPE_CAPTURE 0
#define HPS_0_BRIDGES_POSITION_TYPE_DATA_WIDTH 1
#define HPS_0_BRIDGES_POSITION_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_POSITION_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_POSITION_TYPE_EDGE_TYPE NONE
#define HPS_0_BRIDGES_POSITION_TYPE_FREQ 50000000
#define HPS_0_BRIDGES_POSITION_TYPE_HAS_IN 1
#define HPS_0_BRIDGES_POSITION_TYPE_HAS_OUT 0
#define HPS_0_BRIDGES_POSITION_TYPE_HAS_TRI 0
#define HPS_0_BRIDGES_POSITION_TYPE_IRQ_TYPE NONE
#define HPS_0_BRIDGES_POSITION_TYPE_RESET_VALUE 0

/*
 * Macros for device 'position_extruder_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_COMPONENT_NAME position_extruder_type
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_BASE 0x6120
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_SPAN 16
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_END 0x612f
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_CAPTURE 0
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_DATA_WIDTH 1
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_EDGE_TYPE NONE
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_FREQ 50000000
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_HAS_IN 1
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_HAS_OUT 0
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_HAS_TRI 0
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_IRQ_TYPE NONE
#define HPS_0_BRIDGES_POSITION_EXTRUDER_TYPE_RESET_VALUE 0

/*
 * Macros for device 'params_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_X_0_COMPONENT_NAME params_x_0
#define HPS_0_BRIDGES_PARAMS_X_0_BASE 0x7000
#define HPS_0_BRIDGES_PARAMS_X_0_SPAN 16
#define HPS_0_BRIDGES_PARAMS_X_0_END 0x700f
#define HPS_0_BRIDGES_PARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_0_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_X_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_X_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_0_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_X_0_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_X_0_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_X_0_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_X_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'params_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_X_1_COMPONENT_NAME params_x_1
#define HPS_0_BRIDGES_PARAMS_X_1_BASE 0x7020
#define HPS_0_BRIDGES_PARAMS_X_1_SPAN 16
#define HPS_0_BRIDGES_PARAMS_X_1_END 0x702f
#define HPS_0_BRIDGES_PARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_1_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_X_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_X_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_1_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_X_1_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_X_1_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_X_1_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_X_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'params_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_X_2_COMPONENT_NAME params_x_2
#define HPS_0_BRIDGES_PARAMS_X_2_BASE 0x7040
#define HPS_0_BRIDGES_PARAMS_X_2_SPAN 16
#define HPS_0_BRIDGES_PARAMS_X_2_END 0x704f
#define HPS_0_BRIDGES_PARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_2_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_X_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_X_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_2_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_X_2_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_X_2_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_X_2_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_X_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'params_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_X_3_COMPONENT_NAME params_x_3
#define HPS_0_BRIDGES_PARAMS_X_3_BASE 0x7060
#define HPS_0_BRIDGES_PARAMS_X_3_SPAN 16
#define HPS_0_BRIDGES_PARAMS_X_3_END 0x706f
#define HPS_0_BRIDGES_PARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_3_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_X_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_X_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_3_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_X_3_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_X_3_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_X_3_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_X_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'params_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_X_4_COMPONENT_NAME params_x_4
#define HPS_0_BRIDGES_PARAMS_X_4_BASE 0x7080
#define HPS_0_BRIDGES_PARAMS_X_4_SPAN 16
#define HPS_0_BRIDGES_PARAMS_X_4_END 0x708f
#define HPS_0_BRIDGES_PARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_X_4_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_X_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_X_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_X_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_4_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_X_4_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_X_4_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_X_4_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_X_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'params_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Y_0_COMPONENT_NAME params_y_0
#define HPS_0_BRIDGES_PARAMS_Y_0_BASE 0x70a0
#define HPS_0_BRIDGES_PARAMS_Y_0_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Y_0_END 0x70af
#define HPS_0_BRIDGES_PARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_0_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Y_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Y_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_0_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Y_0_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Y_0_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Y_0_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Y_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'params_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Y_1_COMPONENT_NAME params_y_1
#define HPS_0_BRIDGES_PARAMS_Y_1_BASE 0x70c0
#define HPS_0_BRIDGES_PARAMS_Y_1_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Y_1_END 0x70cf
#define HPS_0_BRIDGES_PARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_1_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Y_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Y_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_1_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Y_1_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Y_1_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Y_1_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Y_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'params_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Y_2_COMPONENT_NAME params_y_2
#define HPS_0_BRIDGES_PARAMS_Y_2_BASE 0x70e0
#define HPS_0_BRIDGES_PARAMS_Y_2_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Y_2_END 0x70ef
#define HPS_0_BRIDGES_PARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_2_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Y_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Y_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_2_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Y_2_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Y_2_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Y_2_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Y_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'params_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Y_3_COMPONENT_NAME params_y_3
#define HPS_0_BRIDGES_PARAMS_Y_3_BASE 0x7100
#define HPS_0_BRIDGES_PARAMS_Y_3_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Y_3_END 0x710f
#define HPS_0_BRIDGES_PARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_3_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Y_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Y_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_3_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Y_3_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Y_3_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Y_3_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Y_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'params_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Y_4_COMPONENT_NAME params_y_4
#define HPS_0_BRIDGES_PARAMS_Y_4_BASE 0x7120
#define HPS_0_BRIDGES_PARAMS_Y_4_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Y_4_END 0x712f
#define HPS_0_BRIDGES_PARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Y_4_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Y_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Y_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_4_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Y_4_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Y_4_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Y_4_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Y_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'params_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Z_0_COMPONENT_NAME params_z_0
#define HPS_0_BRIDGES_PARAMS_Z_0_BASE 0x7140
#define HPS_0_BRIDGES_PARAMS_Z_0_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Z_0_END 0x714f
#define HPS_0_BRIDGES_PARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_0_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Z_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Z_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_0_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Z_0_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Z_0_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Z_0_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Z_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'params_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Z_1_COMPONENT_NAME params_z_1
#define HPS_0_BRIDGES_PARAMS_Z_1_BASE 0x7160
#define HPS_0_BRIDGES_PARAMS_Z_1_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Z_1_END 0x716f
#define HPS_0_BRIDGES_PARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_1_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Z_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Z_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_1_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Z_1_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Z_1_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Z_1_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Z_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'params_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Z_2_COMPONENT_NAME params_z_2
#define HPS_0_BRIDGES_PARAMS_Z_2_BASE 0x7180
#define HPS_0_BRIDGES_PARAMS_Z_2_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Z_2_END 0x718f
#define HPS_0_BRIDGES_PARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_2_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Z_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Z_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_2_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Z_2_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Z_2_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Z_2_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Z_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'params_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Z_3_COMPONENT_NAME params_z_3
#define HPS_0_BRIDGES_PARAMS_Z_3_BASE 0x71a0
#define HPS_0_BRIDGES_PARAMS_Z_3_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Z_3_END 0x71af
#define HPS_0_BRIDGES_PARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_3_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Z_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Z_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_3_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Z_3_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Z_3_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Z_3_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Z_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'params_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_Z_4_COMPONENT_NAME params_z_4
#define HPS_0_BRIDGES_PARAMS_Z_4_BASE 0x71c0
#define HPS_0_BRIDGES_PARAMS_Z_4_SPAN 16
#define HPS_0_BRIDGES_PARAMS_Z_4_END 0x71cf
#define HPS_0_BRIDGES_PARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_Z_4_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_Z_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_Z_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_4_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_Z_4_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_Z_4_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_Z_4_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_Z_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'params_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E0_0_COMPONENT_NAME params_e0_0
#define HPS_0_BRIDGES_PARAMS_E0_0_BASE 0x71e0
#define HPS_0_BRIDGES_PARAMS_E0_0_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E0_0_END 0x71ef
#define HPS_0_BRIDGES_PARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_0_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E0_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E0_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_0_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E0_0_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E0_0_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E0_0_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E0_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'params_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E0_1_COMPONENT_NAME params_e0_1
#define HPS_0_BRIDGES_PARAMS_E0_1_BASE 0x7200
#define HPS_0_BRIDGES_PARAMS_E0_1_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E0_1_END 0x720f
#define HPS_0_BRIDGES_PARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_1_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E0_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E0_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_1_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E0_1_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E0_1_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E0_1_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E0_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'params_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E0_2_COMPONENT_NAME params_e0_2
#define HPS_0_BRIDGES_PARAMS_E0_2_BASE 0x7220
#define HPS_0_BRIDGES_PARAMS_E0_2_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E0_2_END 0x722f
#define HPS_0_BRIDGES_PARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_2_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E0_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E0_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_2_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E0_2_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E0_2_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E0_2_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E0_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'params_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E0_3_COMPONENT_NAME params_e0_3
#define HPS_0_BRIDGES_PARAMS_E0_3_BASE 0x7240
#define HPS_0_BRIDGES_PARAMS_E0_3_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E0_3_END 0x724f
#define HPS_0_BRIDGES_PARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_3_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E0_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E0_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_3_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E0_3_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E0_3_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E0_3_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E0_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'params_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E0_4_COMPONENT_NAME params_e0_4
#define HPS_0_BRIDGES_PARAMS_E0_4_BASE 0x7260
#define HPS_0_BRIDGES_PARAMS_E0_4_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E0_4_END 0x726f
#define HPS_0_BRIDGES_PARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E0_4_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E0_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E0_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_4_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E0_4_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E0_4_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E0_4_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E0_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'params_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E1_0_COMPONENT_NAME params_e1_0
#define HPS_0_BRIDGES_PARAMS_E1_0_BASE 0x7280
#define HPS_0_BRIDGES_PARAMS_E1_0_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E1_0_END 0x728f
#define HPS_0_BRIDGES_PARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_0_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E1_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E1_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_0_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E1_0_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E1_0_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E1_0_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E1_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'params_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E1_1_COMPONENT_NAME params_e1_1
#define HPS_0_BRIDGES_PARAMS_E1_1_BASE 0x72a0
#define HPS_0_BRIDGES_PARAMS_E1_1_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E1_1_END 0x72af
#define HPS_0_BRIDGES_PARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_1_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E1_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E1_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_1_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E1_1_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E1_1_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E1_1_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E1_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'params_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E1_2_COMPONENT_NAME params_e1_2
#define HPS_0_BRIDGES_PARAMS_E1_2_BASE 0x72c0
#define HPS_0_BRIDGES_PARAMS_E1_2_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E1_2_END 0x72cf
#define HPS_0_BRIDGES_PARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_2_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E1_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E1_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_2_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E1_2_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E1_2_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E1_2_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E1_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'params_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E1_3_COMPONENT_NAME params_e1_3
#define HPS_0_BRIDGES_PARAMS_E1_3_BASE 0x72e0
#define HPS_0_BRIDGES_PARAMS_E1_3_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E1_3_END 0x72ef
#define HPS_0_BRIDGES_PARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_3_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E1_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E1_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_3_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E1_3_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E1_3_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E1_3_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E1_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'params_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PARAMS_E1_4_COMPONENT_NAME params_e1_4
#define HPS_0_BRIDGES_PARAMS_E1_4_BASE 0x7300
#define HPS_0_BRIDGES_PARAMS_E1_4_SPAN 16
#define HPS_0_BRIDGES_PARAMS_E1_4_END 0x730f
#define HPS_0_BRIDGES_PARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PARAMS_E1_4_CAPTURE 0
#define HPS_0_BRIDGES_PARAMS_E1_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_PARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PARAMS_E1_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_4_FREQ 50000000
#define HPS_0_BRIDGES_PARAMS_E1_4_HAS_IN 1
#define HPS_0_BRIDGES_PARAMS_E1_4_HAS_OUT 0
#define HPS_0_BRIDGES_PARAMS_E1_4_HAS_TRI 0
#define HPS_0_BRIDGES_PARAMS_E1_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'timing_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_X_0_COMPONENT_NAME timing_x_0
#define HPS_0_BRIDGES_TIMING_X_0_BASE 0x7320
#define HPS_0_BRIDGES_TIMING_X_0_SPAN 16
#define HPS_0_BRIDGES_TIMING_X_0_END 0x732f
#define HPS_0_BRIDGES_TIMING_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_X_0_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_X_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_X_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_X_0_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_X_0_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_X_0_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_X_0_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_X_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_X_0_RESET_VALUE 0

/*
 * Macros for device 'timing_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_X_1_COMPONENT_NAME timing_x_1
#define HPS_0_BRIDGES_TIMING_X_1_BASE 0x7340
#define HPS_0_BRIDGES_TIMING_X_1_SPAN 16
#define HPS_0_BRIDGES_TIMING_X_1_END 0x734f
#define HPS_0_BRIDGES_TIMING_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_X_1_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_X_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_X_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_X_1_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_X_1_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_X_1_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_X_1_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_X_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_X_1_RESET_VALUE 0

/*
 * Macros for device 'timing_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_X_2_COMPONENT_NAME timing_x_2
#define HPS_0_BRIDGES_TIMING_X_2_BASE 0x7360
#define HPS_0_BRIDGES_TIMING_X_2_SPAN 16
#define HPS_0_BRIDGES_TIMING_X_2_END 0x736f
#define HPS_0_BRIDGES_TIMING_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_X_2_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_X_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_X_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_X_2_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_X_2_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_X_2_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_X_2_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_X_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_X_2_RESET_VALUE 0

/*
 * Macros for device 'timing_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_X_3_COMPONENT_NAME timing_x_3
#define HPS_0_BRIDGES_TIMING_X_3_BASE 0x7380
#define HPS_0_BRIDGES_TIMING_X_3_SPAN 16
#define HPS_0_BRIDGES_TIMING_X_3_END 0x738f
#define HPS_0_BRIDGES_TIMING_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_X_3_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_X_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_X_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_X_3_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_X_3_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_X_3_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_X_3_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_X_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_X_3_RESET_VALUE 0

/*
 * Macros for device 'timing_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_Y_0_COMPONENT_NAME timing_y_0
#define HPS_0_BRIDGES_TIMING_Y_0_BASE 0x73a0
#define HPS_0_BRIDGES_TIMING_Y_0_SPAN 16
#define HPS_0_BRIDGES_TIMING_Y_0_END 0x73af
#define HPS_0_BRIDGES_TIMING_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Y_0_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_Y_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_Y_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Y_0_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_Y_0_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_Y_0_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_Y_0_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_Y_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Y_0_RESET_VALUE 0

/*
 * Macros for device 'timing_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_Y_1_COMPONENT_NAME timing_y_1
#define HPS_0_BRIDGES_TIMING_Y_1_BASE 0x73c0
#define HPS_0_BRIDGES_TIMING_Y_1_SPAN 16
#define HPS_0_BRIDGES_TIMING_Y_1_END 0x73cf
#define HPS_0_BRIDGES_TIMING_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Y_1_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_Y_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_Y_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Y_1_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_Y_1_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_Y_1_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_Y_1_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_Y_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Y_1_RESET_VALUE 0

/*
 * Macros for device 'timing_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_Y_2_COMPONENT_NAME timing_y_2
#define HPS_0_BRIDGES_TIMING_Y_2_BASE 0x73e0
#define HPS_0_BRIDGES_TIMING_Y_2_SPAN 16
#define HPS_0_BRIDGES_TIMING_Y_2_END 0x73ef
#define HPS_0_BRIDGES_TIMING_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Y_2_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_Y_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_Y_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Y_2_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_Y_2_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_Y_2_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_Y_2_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_Y_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Y_2_RESET_VALUE 0

/*
 * Macros for device 'timing_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_Y_3_COMPONENT_NAME timing_y_3
#define HPS_0_BRIDGES_TIMING_Y_3_BASE 0x7400
#define HPS_0_BRIDGES_TIMING_Y_3_SPAN 16
#define HPS_0_BRIDGES_TIMING_Y_3_END 0x740f
#define HPS_0_BRIDGES_TIMING_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Y_3_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_Y_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_Y_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Y_3_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_Y_3_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_Y_3_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_Y_3_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_Y_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Y_3_RESET_VALUE 0

/*
 * Macros for device 'timing_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_Z_0_COMPONENT_NAME timing_z_0
#define HPS_0_BRIDGES_TIMING_Z_0_BASE 0x7420
#define HPS_0_BRIDGES_TIMING_Z_0_SPAN 16
#define HPS_0_BRIDGES_TIMING_Z_0_END 0x742f
#define HPS_0_BRIDGES_TIMING_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Z_0_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_Z_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_Z_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Z_0_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_Z_0_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_Z_0_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_Z_0_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_Z_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Z_0_RESET_VALUE 0

/*
 * Macros for device 'timing_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_Z_1_COMPONENT_NAME timing_z_1
#define HPS_0_BRIDGES_TIMING_Z_1_BASE 0x7440
#define HPS_0_BRIDGES_TIMING_Z_1_SPAN 16
#define HPS_0_BRIDGES_TIMING_Z_1_END 0x744f
#define HPS_0_BRIDGES_TIMING_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Z_1_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_Z_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_Z_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Z_1_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_Z_1_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_Z_1_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_Z_1_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_Z_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Z_1_RESET_VALUE 0

/*
 * Macros for device 'timing_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_Z_2_COMPONENT_NAME timing_z_2
#define HPS_0_BRIDGES_TIMING_Z_2_BASE 0x7460
#define HPS_0_BRIDGES_TIMING_Z_2_SPAN 16
#define HPS_0_BRIDGES_TIMING_Z_2_END 0x746f
#define HPS_0_BRIDGES_TIMING_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Z_2_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_Z_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_Z_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Z_2_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_Z_2_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_Z_2_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_Z_2_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_Z_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Z_2_RESET_VALUE 0

/*
 * Macros for device 'timing_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_Z_3_COMPONENT_NAME timing_z_3
#define HPS_0_BRIDGES_TIMING_Z_3_BASE 0x7480
#define HPS_0_BRIDGES_TIMING_Z_3_SPAN 16
#define HPS_0_BRIDGES_TIMING_Z_3_END 0x748f
#define HPS_0_BRIDGES_TIMING_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_Z_3_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_Z_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_Z_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Z_3_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_Z_3_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_Z_3_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_Z_3_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_Z_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_Z_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_E0_0_COMPONENT_NAME timing_e0_0
#define HPS_0_BRIDGES_TIMING_E0_0_BASE 0x74a0
#define HPS_0_BRIDGES_TIMING_E0_0_SPAN 16
#define HPS_0_BRIDGES_TIMING_E0_0_END 0x74af
#define HPS_0_BRIDGES_TIMING_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E0_0_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_E0_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_E0_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E0_0_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_E0_0_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_E0_0_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_E0_0_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_E0_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E0_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_E0_1_COMPONENT_NAME timing_e0_1
#define HPS_0_BRIDGES_TIMING_E0_1_BASE 0x74c0
#define HPS_0_BRIDGES_TIMING_E0_1_SPAN 16
#define HPS_0_BRIDGES_TIMING_E0_1_END 0x74cf
#define HPS_0_BRIDGES_TIMING_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E0_1_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_E0_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_E0_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E0_1_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_E0_1_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_E0_1_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_E0_1_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_E0_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E0_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_E0_2_COMPONENT_NAME timing_e0_2
#define HPS_0_BRIDGES_TIMING_E0_2_BASE 0x74e0
#define HPS_0_BRIDGES_TIMING_E0_2_SPAN 16
#define HPS_0_BRIDGES_TIMING_E0_2_END 0x74ef
#define HPS_0_BRIDGES_TIMING_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E0_2_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_E0_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_E0_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E0_2_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_E0_2_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_E0_2_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_E0_2_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_E0_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E0_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_E0_3_COMPONENT_NAME timing_e0_3
#define HPS_0_BRIDGES_TIMING_E0_3_BASE 0x7500
#define HPS_0_BRIDGES_TIMING_E0_3_SPAN 16
#define HPS_0_BRIDGES_TIMING_E0_3_END 0x750f
#define HPS_0_BRIDGES_TIMING_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E0_3_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_E0_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_E0_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E0_3_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_E0_3_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_E0_3_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_E0_3_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_E0_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E0_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_E1_0_COMPONENT_NAME timing_e1_0
#define HPS_0_BRIDGES_TIMING_E1_0_BASE 0x7520
#define HPS_0_BRIDGES_TIMING_E1_0_SPAN 16
#define HPS_0_BRIDGES_TIMING_E1_0_END 0x752f
#define HPS_0_BRIDGES_TIMING_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E1_0_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_E1_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_E1_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E1_0_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_E1_0_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_E1_0_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_E1_0_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_E1_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E1_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_E1_1_COMPONENT_NAME timing_e1_1
#define HPS_0_BRIDGES_TIMING_E1_1_BASE 0x7540
#define HPS_0_BRIDGES_TIMING_E1_1_SPAN 16
#define HPS_0_BRIDGES_TIMING_E1_1_END 0x754f
#define HPS_0_BRIDGES_TIMING_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E1_1_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_E1_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_E1_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E1_1_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_E1_1_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_E1_1_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_E1_1_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_E1_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E1_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_E1_2_COMPONENT_NAME timing_e1_2
#define HPS_0_BRIDGES_TIMING_E1_2_BASE 0x7560
#define HPS_0_BRIDGES_TIMING_E1_2_SPAN 16
#define HPS_0_BRIDGES_TIMING_E1_2_END 0x756f
#define HPS_0_BRIDGES_TIMING_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E1_2_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_E1_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_E1_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E1_2_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_E1_2_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_E1_2_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_E1_2_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_E1_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E1_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TIMING_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TIMING_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TIMING_E1_3_COMPONENT_NAME timing_e1_3
#define HPS_0_BRIDGES_TIMING_E1_3_BASE 0x7580
#define HPS_0_BRIDGES_TIMING_E1_3_SPAN 16
#define HPS_0_BRIDGES_TIMING_E1_3_END 0x758f
#define HPS_0_BRIDGES_TIMING_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TIMING_E1_3_CAPTURE 0
#define HPS_0_BRIDGES_TIMING_E1_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_TIMING_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TIMING_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TIMING_E1_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E1_3_FREQ 50000000
#define HPS_0_BRIDGES_TIMING_E1_3_HAS_IN 1
#define HPS_0_BRIDGES_TIMING_E1_3_HAS_OUT 0
#define HPS_0_BRIDGES_TIMING_E1_3_HAS_TRI 0
#define HPS_0_BRIDGES_TIMING_E1_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TIMING_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_COMPONENT_NAME new_rparams_x_0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_BASE 0x75a0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_END 0x75af
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_COMPONENT_NAME new_rparams_x_1
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_BASE 0x75c0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_END 0x75cf
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_COMPONENT_NAME new_rparams_x_2
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_BASE 0x75e0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_END 0x75ef
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_COMPONENT_NAME new_rparams_x_3
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_BASE 0x7600
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_END 0x760f
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_COMPONENT_NAME new_rparams_x_4
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_BASE 0x7620
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_END 0x762f
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_COMPONENT_NAME new_rparams_y_0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_BASE 0x7640
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_END 0x764f
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_COMPONENT_NAME new_rparams_y_1
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_BASE 0x7660
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_END 0x766f
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_COMPONENT_NAME new_rparams_y_2
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_BASE 0x7680
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_END 0x768f
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_COMPONENT_NAME new_rparams_y_3
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_BASE 0x76a0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_END 0x76af
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_COMPONENT_NAME new_rparams_y_4
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_BASE 0x76c0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_END 0x76cf
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_COMPONENT_NAME new_rparams_z_0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_BASE 0x76e0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_END 0x76ef
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_COMPONENT_NAME new_rparams_z_1
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_BASE 0x7700
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_END 0x770f
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_COMPONENT_NAME new_rparams_z_2
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_BASE 0x7720
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_END 0x772f
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_COMPONENT_NAME new_rparams_z_3
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_BASE 0x7740
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_END 0x774f
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_COMPONENT_NAME new_rparams_z_4
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_BASE 0x7760
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_END 0x776f
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_COMPONENT_NAME new_rparams_e0_0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_BASE 0x7780
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_END 0x778f
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_COMPONENT_NAME new_rparams_e0_1
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_BASE 0x77a0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_END 0x77af
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_COMPONENT_NAME new_rparams_e0_2
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_BASE 0x77c0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_END 0x77cf
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_COMPONENT_NAME new_rparams_e0_3
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_BASE 0x77e0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_END 0x77ef
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_COMPONENT_NAME new_rparams_e0_4
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_BASE 0x7800
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_END 0x780f
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_COMPONENT_NAME new_rparams_e1_0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_BASE 0x7820
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_END 0x782f
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_COMPONENT_NAME new_rparams_e1_1
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_BASE 0x7840
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_END 0x784f
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_COMPONENT_NAME new_rparams_e1_2
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_BASE 0x7860
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_END 0x786f
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_COMPONENT_NAME new_rparams_e1_3
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_BASE 0x7880
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_END 0x788f
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_NEW_RPARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_COMPONENT_NAME new_rparams_e1_4
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_BASE 0x78a0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_SPAN 16
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_END 0x78af
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_CAPTURE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_FREQ 50000000
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_HAS_IN 1
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_HAS_OUT 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_HAS_TRI 0
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_NEW_RPARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'step_x_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_STEP_X_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_STEP_X_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_STEP_X_NOW_COMPONENT_NAME step_x_now
#define HPS_0_BRIDGES_STEP_X_NOW_BASE 0x7900
#define HPS_0_BRIDGES_STEP_X_NOW_SPAN 16
#define HPS_0_BRIDGES_STEP_X_NOW_END 0x790f
#define HPS_0_BRIDGES_STEP_X_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_STEP_X_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_STEP_X_NOW_CAPTURE 0
#define HPS_0_BRIDGES_STEP_X_NOW_DATA_WIDTH 32
#define HPS_0_BRIDGES_STEP_X_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_STEP_X_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_STEP_X_NOW_EDGE_TYPE NONE
#define HPS_0_BRIDGES_STEP_X_NOW_FREQ 50000000
#define HPS_0_BRIDGES_STEP_X_NOW_HAS_IN 1
#define HPS_0_BRIDGES_STEP_X_NOW_HAS_OUT 0
#define HPS_0_BRIDGES_STEP_X_NOW_HAS_TRI 0
#define HPS_0_BRIDGES_STEP_X_NOW_IRQ_TYPE NONE
#define HPS_0_BRIDGES_STEP_X_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_y_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_STEP_Y_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_STEP_Y_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_STEP_Y_NOW_COMPONENT_NAME step_y_now
#define HPS_0_BRIDGES_STEP_Y_NOW_BASE 0x7920
#define HPS_0_BRIDGES_STEP_Y_NOW_SPAN 16
#define HPS_0_BRIDGES_STEP_Y_NOW_END 0x792f
#define HPS_0_BRIDGES_STEP_Y_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_STEP_Y_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_STEP_Y_NOW_CAPTURE 0
#define HPS_0_BRIDGES_STEP_Y_NOW_DATA_WIDTH 32
#define HPS_0_BRIDGES_STEP_Y_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_STEP_Y_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_STEP_Y_NOW_EDGE_TYPE NONE
#define HPS_0_BRIDGES_STEP_Y_NOW_FREQ 50000000
#define HPS_0_BRIDGES_STEP_Y_NOW_HAS_IN 1
#define HPS_0_BRIDGES_STEP_Y_NOW_HAS_OUT 0
#define HPS_0_BRIDGES_STEP_Y_NOW_HAS_TRI 0
#define HPS_0_BRIDGES_STEP_Y_NOW_IRQ_TYPE NONE
#define HPS_0_BRIDGES_STEP_Y_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_z_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_STEP_Z_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_STEP_Z_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_STEP_Z_NOW_COMPONENT_NAME step_z_now
#define HPS_0_BRIDGES_STEP_Z_NOW_BASE 0x7940
#define HPS_0_BRIDGES_STEP_Z_NOW_SPAN 16
#define HPS_0_BRIDGES_STEP_Z_NOW_END 0x794f
#define HPS_0_BRIDGES_STEP_Z_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_STEP_Z_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_STEP_Z_NOW_CAPTURE 0
#define HPS_0_BRIDGES_STEP_Z_NOW_DATA_WIDTH 32
#define HPS_0_BRIDGES_STEP_Z_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_STEP_Z_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_STEP_Z_NOW_EDGE_TYPE NONE
#define HPS_0_BRIDGES_STEP_Z_NOW_FREQ 50000000
#define HPS_0_BRIDGES_STEP_Z_NOW_HAS_IN 1
#define HPS_0_BRIDGES_STEP_Z_NOW_HAS_OUT 0
#define HPS_0_BRIDGES_STEP_Z_NOW_HAS_TRI 0
#define HPS_0_BRIDGES_STEP_Z_NOW_IRQ_TYPE NONE
#define HPS_0_BRIDGES_STEP_Z_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e0_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_STEP_E0_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_STEP_E0_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_STEP_E0_NOW_COMPONENT_NAME step_e0_now
#define HPS_0_BRIDGES_STEP_E0_NOW_BASE 0x7960
#define HPS_0_BRIDGES_STEP_E0_NOW_SPAN 16
#define HPS_0_BRIDGES_STEP_E0_NOW_END 0x796f
#define HPS_0_BRIDGES_STEP_E0_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_STEP_E0_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_STEP_E0_NOW_CAPTURE 0
#define HPS_0_BRIDGES_STEP_E0_NOW_DATA_WIDTH 32
#define HPS_0_BRIDGES_STEP_E0_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_STEP_E0_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_STEP_E0_NOW_EDGE_TYPE NONE
#define HPS_0_BRIDGES_STEP_E0_NOW_FREQ 50000000
#define HPS_0_BRIDGES_STEP_E0_NOW_HAS_IN 1
#define HPS_0_BRIDGES_STEP_E0_NOW_HAS_OUT 0
#define HPS_0_BRIDGES_STEP_E0_NOW_HAS_TRI 0
#define HPS_0_BRIDGES_STEP_E0_NOW_IRQ_TYPE NONE
#define HPS_0_BRIDGES_STEP_E0_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e1_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_STEP_E1_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_STEP_E1_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_STEP_E1_NOW_COMPONENT_NAME step_e1_now
#define HPS_0_BRIDGES_STEP_E1_NOW_BASE 0x7980
#define HPS_0_BRIDGES_STEP_E1_NOW_SPAN 16
#define HPS_0_BRIDGES_STEP_E1_NOW_END 0x798f
#define HPS_0_BRIDGES_STEP_E1_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_STEP_E1_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_STEP_E1_NOW_CAPTURE 0
#define HPS_0_BRIDGES_STEP_E1_NOW_DATA_WIDTH 32
#define HPS_0_BRIDGES_STEP_E1_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_STEP_E1_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_STEP_E1_NOW_EDGE_TYPE NONE
#define HPS_0_BRIDGES_STEP_E1_NOW_FREQ 50000000
#define HPS_0_BRIDGES_STEP_E1_NOW_HAS_IN 1
#define HPS_0_BRIDGES_STEP_E1_NOW_HAS_OUT 0
#define HPS_0_BRIDGES_STEP_E1_NOW_HAS_TRI 0
#define HPS_0_BRIDGES_STEP_E1_NOW_IRQ_TYPE NONE
#define HPS_0_BRIDGES_STEP_E1_NOW_RESET_VALUE 0

/*
 * Macros for device 'max_params_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MAX_PARAMS_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MAX_PARAMS_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MAX_PARAMS_0_COMPONENT_NAME max_params_0
#define HPS_0_BRIDGES_MAX_PARAMS_0_BASE 0x79a0
#define HPS_0_BRIDGES_MAX_PARAMS_0_SPAN 16
#define HPS_0_BRIDGES_MAX_PARAMS_0_END 0x79af
#define HPS_0_BRIDGES_MAX_PARAMS_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_0_CAPTURE 0
#define HPS_0_BRIDGES_MAX_PARAMS_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_MAX_PARAMS_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MAX_PARAMS_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MAX_PARAMS_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_0_FREQ 50000000
#define HPS_0_BRIDGES_MAX_PARAMS_0_HAS_IN 1
#define HPS_0_BRIDGES_MAX_PARAMS_0_HAS_OUT 0
#define HPS_0_BRIDGES_MAX_PARAMS_0_HAS_TRI 0
#define HPS_0_BRIDGES_MAX_PARAMS_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_0_RESET_VALUE 0

/*
 * Macros for device 'max_params_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MAX_PARAMS_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MAX_PARAMS_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MAX_PARAMS_1_COMPONENT_NAME max_params_1
#define HPS_0_BRIDGES_MAX_PARAMS_1_BASE 0x79c0
#define HPS_0_BRIDGES_MAX_PARAMS_1_SPAN 16
#define HPS_0_BRIDGES_MAX_PARAMS_1_END 0x79cf
#define HPS_0_BRIDGES_MAX_PARAMS_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_1_CAPTURE 0
#define HPS_0_BRIDGES_MAX_PARAMS_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_MAX_PARAMS_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MAX_PARAMS_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MAX_PARAMS_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_1_FREQ 50000000
#define HPS_0_BRIDGES_MAX_PARAMS_1_HAS_IN 1
#define HPS_0_BRIDGES_MAX_PARAMS_1_HAS_OUT 0
#define HPS_0_BRIDGES_MAX_PARAMS_1_HAS_TRI 0
#define HPS_0_BRIDGES_MAX_PARAMS_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_1_RESET_VALUE 0

/*
 * Macros for device 'max_params_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MAX_PARAMS_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MAX_PARAMS_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MAX_PARAMS_2_COMPONENT_NAME max_params_2
#define HPS_0_BRIDGES_MAX_PARAMS_2_BASE 0x79e0
#define HPS_0_BRIDGES_MAX_PARAMS_2_SPAN 16
#define HPS_0_BRIDGES_MAX_PARAMS_2_END 0x79ef
#define HPS_0_BRIDGES_MAX_PARAMS_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_2_CAPTURE 0
#define HPS_0_BRIDGES_MAX_PARAMS_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_MAX_PARAMS_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MAX_PARAMS_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MAX_PARAMS_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_2_FREQ 50000000
#define HPS_0_BRIDGES_MAX_PARAMS_2_HAS_IN 1
#define HPS_0_BRIDGES_MAX_PARAMS_2_HAS_OUT 0
#define HPS_0_BRIDGES_MAX_PARAMS_2_HAS_TRI 0
#define HPS_0_BRIDGES_MAX_PARAMS_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_2_RESET_VALUE 0

/*
 * Macros for device 'max_params_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MAX_PARAMS_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MAX_PARAMS_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MAX_PARAMS_3_COMPONENT_NAME max_params_3
#define HPS_0_BRIDGES_MAX_PARAMS_3_BASE 0x7a00
#define HPS_0_BRIDGES_MAX_PARAMS_3_SPAN 16
#define HPS_0_BRIDGES_MAX_PARAMS_3_END 0x7a0f
#define HPS_0_BRIDGES_MAX_PARAMS_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_3_CAPTURE 0
#define HPS_0_BRIDGES_MAX_PARAMS_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_MAX_PARAMS_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MAX_PARAMS_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MAX_PARAMS_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_3_FREQ 50000000
#define HPS_0_BRIDGES_MAX_PARAMS_3_HAS_IN 1
#define HPS_0_BRIDGES_MAX_PARAMS_3_HAS_OUT 0
#define HPS_0_BRIDGES_MAX_PARAMS_3_HAS_TRI 0
#define HPS_0_BRIDGES_MAX_PARAMS_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_3_RESET_VALUE 0

/*
 * Macros for device 'max_params_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MAX_PARAMS_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MAX_PARAMS_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MAX_PARAMS_4_COMPONENT_NAME max_params_4
#define HPS_0_BRIDGES_MAX_PARAMS_4_BASE 0x7a20
#define HPS_0_BRIDGES_MAX_PARAMS_4_SPAN 16
#define HPS_0_BRIDGES_MAX_PARAMS_4_END 0x7a2f
#define HPS_0_BRIDGES_MAX_PARAMS_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MAX_PARAMS_4_CAPTURE 0
#define HPS_0_BRIDGES_MAX_PARAMS_4_DATA_WIDTH 32
#define HPS_0_BRIDGES_MAX_PARAMS_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MAX_PARAMS_4_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MAX_PARAMS_4_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_4_FREQ 50000000
#define HPS_0_BRIDGES_MAX_PARAMS_4_HAS_IN 1
#define HPS_0_BRIDGES_MAX_PARAMS_4_HAS_OUT 0
#define HPS_0_BRIDGES_MAX_PARAMS_4_HAS_TRI 0
#define HPS_0_BRIDGES_MAX_PARAMS_4_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MAX_PARAMS_4_RESET_VALUE 0

/*
 * Macros for device 'max_timing_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MAX_TIMING_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MAX_TIMING_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MAX_TIMING_0_COMPONENT_NAME max_timing_0
#define HPS_0_BRIDGES_MAX_TIMING_0_BASE 0x7a40
#define HPS_0_BRIDGES_MAX_TIMING_0_SPAN 16
#define HPS_0_BRIDGES_MAX_TIMING_0_END 0x7a4f
#define HPS_0_BRIDGES_MAX_TIMING_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MAX_TIMING_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MAX_TIMING_0_CAPTURE 0
#define HPS_0_BRIDGES_MAX_TIMING_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_MAX_TIMING_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MAX_TIMING_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MAX_TIMING_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MAX_TIMING_0_FREQ 50000000
#define HPS_0_BRIDGES_MAX_TIMING_0_HAS_IN 1
#define HPS_0_BRIDGES_MAX_TIMING_0_HAS_OUT 0
#define HPS_0_BRIDGES_MAX_TIMING_0_HAS_TRI 0
#define HPS_0_BRIDGES_MAX_TIMING_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MAX_TIMING_0_RESET_VALUE 0

/*
 * Macros for device 'max_timing_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MAX_TIMING_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MAX_TIMING_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MAX_TIMING_1_COMPONENT_NAME max_timing_1
#define HPS_0_BRIDGES_MAX_TIMING_1_BASE 0x7a60
#define HPS_0_BRIDGES_MAX_TIMING_1_SPAN 16
#define HPS_0_BRIDGES_MAX_TIMING_1_END 0x7a6f
#define HPS_0_BRIDGES_MAX_TIMING_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MAX_TIMING_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MAX_TIMING_1_CAPTURE 0
#define HPS_0_BRIDGES_MAX_TIMING_1_DATA_WIDTH 32
#define HPS_0_BRIDGES_MAX_TIMING_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MAX_TIMING_1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MAX_TIMING_1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MAX_TIMING_1_FREQ 50000000
#define HPS_0_BRIDGES_MAX_TIMING_1_HAS_IN 1
#define HPS_0_BRIDGES_MAX_TIMING_1_HAS_OUT 0
#define HPS_0_BRIDGES_MAX_TIMING_1_HAS_TRI 0
#define HPS_0_BRIDGES_MAX_TIMING_1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MAX_TIMING_1_RESET_VALUE 0

/*
 * Macros for device 'max_timing_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MAX_TIMING_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MAX_TIMING_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MAX_TIMING_2_COMPONENT_NAME max_timing_2
#define HPS_0_BRIDGES_MAX_TIMING_2_BASE 0x7a80
#define HPS_0_BRIDGES_MAX_TIMING_2_SPAN 16
#define HPS_0_BRIDGES_MAX_TIMING_2_END 0x7a8f
#define HPS_0_BRIDGES_MAX_TIMING_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MAX_TIMING_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MAX_TIMING_2_CAPTURE 0
#define HPS_0_BRIDGES_MAX_TIMING_2_DATA_WIDTH 32
#define HPS_0_BRIDGES_MAX_TIMING_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MAX_TIMING_2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MAX_TIMING_2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MAX_TIMING_2_FREQ 50000000
#define HPS_0_BRIDGES_MAX_TIMING_2_HAS_IN 1
#define HPS_0_BRIDGES_MAX_TIMING_2_HAS_OUT 0
#define HPS_0_BRIDGES_MAX_TIMING_2_HAS_TRI 0
#define HPS_0_BRIDGES_MAX_TIMING_2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MAX_TIMING_2_RESET_VALUE 0

/*
 * Macros for device 'max_timing_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MAX_TIMING_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MAX_TIMING_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MAX_TIMING_3_COMPONENT_NAME max_timing_3
#define HPS_0_BRIDGES_MAX_TIMING_3_BASE 0x7aa0
#define HPS_0_BRIDGES_MAX_TIMING_3_SPAN 16
#define HPS_0_BRIDGES_MAX_TIMING_3_END 0x7aaf
#define HPS_0_BRIDGES_MAX_TIMING_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MAX_TIMING_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MAX_TIMING_3_CAPTURE 0
#define HPS_0_BRIDGES_MAX_TIMING_3_DATA_WIDTH 32
#define HPS_0_BRIDGES_MAX_TIMING_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MAX_TIMING_3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MAX_TIMING_3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MAX_TIMING_3_FREQ 50000000
#define HPS_0_BRIDGES_MAX_TIMING_3_HAS_IN 1
#define HPS_0_BRIDGES_MAX_TIMING_3_HAS_OUT 0
#define HPS_0_BRIDGES_MAX_TIMING_3_HAS_TRI 0
#define HPS_0_BRIDGES_MAX_TIMING_3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MAX_TIMING_3_RESET_VALUE 0

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_ILC_COMPONENT_TYPE interrupt_latency_counter
#define HPS_0_BRIDGES_ILC_COMPONENT_NAME ILC
#define HPS_0_BRIDGES_ILC_BASE 0x30000
#define HPS_0_BRIDGES_ILC_SPAN 256
#define HPS_0_BRIDGES_ILC_END 0x300ff

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_BRIDGES_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_BRIDGES_HPS_0_GMAC0_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_BRIDGES_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_BRIDGES_HPS_0_GMAC1_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_BRIDGES_HPS_0_SDMMC_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_BRIDGES_HPS_0_QSPI_SPAN 256
#define HPS_0_BRIDGES_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_BRIDGES_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_BRIDGES_HPS_0_GPIO0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_BRIDGES_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_BRIDGES_HPS_0_GPIO1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_BRIDGES_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_BRIDGES_HPS_0_GPIO2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_BRIDGES_HPS_0_L3REGS_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_BRIDGES_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_BRIDGES_HPS_0_NAND0_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_BRIDGES_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_BRIDGES_HPS_0_USB0_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_BRIDGES_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_BRIDGES_HPS_0_USB1_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_BRIDGES_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_BRIDGES_HPS_0_DCAN0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_BRIDGES_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_BRIDGES_HPS_0_DCAN1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_BRIDGES_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_BRIDGES_HPS_0_UART0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART0_END 0xffc020ff
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_BRIDGES_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_BRIDGES_HPS_0_UART1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART1_END 0xffc030ff
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_BRIDGES_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_BRIDGES_HPS_0_I2C0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_BRIDGES_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_BRIDGES_HPS_0_I2C1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_BRIDGES_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_BRIDGES_HPS_0_I2C2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_BRIDGES_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_BRIDGES_HPS_0_I2C3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_BRIDGES_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_BRIDGES_HPS_0_TIMER0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_BRIDGES_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_BRIDGES_HPS_0_TIMER1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_BRIDGES_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_BRIDGES_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_BRIDGES_HPS_0_TIMER2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_BRIDGES_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_BRIDGES_HPS_0_TIMER3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_BRIDGES_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_BRIDGES_HPS_0_RSTMGR_SPAN 256
#define HPS_0_BRIDGES_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_BRIDGES_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_BRIDGES_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_BRIDGES_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_BRIDGES_HPS_0_DMA_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_BRIDGES_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_BRIDGES_HPS_0_SPIM0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_BRIDGES_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_BRIDGES_HPS_0_SPIM1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_BRIDGES_HPS_0_TIMER_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_BRIDGES_HPS_0_L2_BASE 0xfffef000
#define HPS_0_BRIDGES_HPS_0_L2_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_BASE 0xff201000
#define HPS_0_ARM_A9_0_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_0_SYSID_QSYS_END 0xff201007
#define HPS_0_ARM_A9_0_SYSID_QSYS_ID 4294906626
#define HPS_0_ARM_A9_0_SYSID_QSYS_TIMESTAMP 1590594581

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_BASE 0xff202000
#define HPS_0_ARM_A9_0_JTAG_UART_SPAN 8
#define HPS_0_ARM_A9_0_JTAG_UART_END 0xff202007
#define HPS_0_ARM_A9_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'flags_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_FLAGS_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_FLAGS_IN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_FLAGS_IN_COMPONENT_NAME flags_in
#define HPS_0_ARM_A9_0_FLAGS_IN_BASE 0xff204000
#define HPS_0_ARM_A9_0_FLAGS_IN_SPAN 16
#define HPS_0_ARM_A9_0_FLAGS_IN_END 0xff20400f
#define HPS_0_ARM_A9_0_FLAGS_IN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_FLAGS_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_FLAGS_IN_CAPTURE 0
#define HPS_0_ARM_A9_0_FLAGS_IN_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_FLAGS_IN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_FLAGS_IN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_FLAGS_IN_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_FLAGS_IN_FREQ 50000000
#define HPS_0_ARM_A9_0_FLAGS_IN_HAS_IN 1
#define HPS_0_ARM_A9_0_FLAGS_IN_HAS_OUT 0
#define HPS_0_ARM_A9_0_FLAGS_IN_HAS_TRI 0
#define HPS_0_ARM_A9_0_FLAGS_IN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_FLAGS_IN_RESET_VALUE 0

/*
 * Macros for device 'flags_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_FLAGS_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_FLAGS_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_FLAGS_OUT_COMPONENT_NAME flags_out
#define HPS_0_ARM_A9_0_FLAGS_OUT_BASE 0xff204020
#define HPS_0_ARM_A9_0_FLAGS_OUT_SPAN 16
#define HPS_0_ARM_A9_0_FLAGS_OUT_END 0xff20402f
#define HPS_0_ARM_A9_0_FLAGS_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_FLAGS_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_FLAGS_OUT_CAPTURE 0
#define HPS_0_ARM_A9_0_FLAGS_OUT_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_FLAGS_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_FLAGS_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_FLAGS_OUT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_FLAGS_OUT_FREQ 50000000
#define HPS_0_ARM_A9_0_FLAGS_OUT_HAS_IN 0
#define HPS_0_ARM_A9_0_FLAGS_OUT_HAS_OUT 1
#define HPS_0_ARM_A9_0_FLAGS_OUT_HAS_TRI 0
#define HPS_0_ARM_A9_0_FLAGS_OUT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_FLAGS_OUT_RESET_VALUE 0

/*
 * Macros for device 'command_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_TYPE_COMPONENT_NAME command_type
#define HPS_0_ARM_A9_0_COMMAND_TYPE_BASE 0xff204040
#define HPS_0_ARM_A9_0_COMMAND_TYPE_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_TYPE_END 0xff20404f
#define HPS_0_ARM_A9_0_COMMAND_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_TYPE_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_TYPE_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_TYPE_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_TYPE_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_TYPE_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_TYPE_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_TYPE_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_TYPE_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_TYPE_RESET_VALUE 0

/*
 * Macros for device 'command_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_X_COMPONENT_NAME command_x
#define HPS_0_ARM_A9_0_COMMAND_X_BASE 0xff205000
#define HPS_0_ARM_A9_0_COMMAND_X_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_X_END 0xff20500f
#define HPS_0_ARM_A9_0_COMMAND_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_X_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_X_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_X_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_X_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_X_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_X_RESET_VALUE 0

/*
 * Macros for device 'command_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_Y_COMPONENT_NAME command_y
#define HPS_0_ARM_A9_0_COMMAND_Y_BASE 0xff205020
#define HPS_0_ARM_A9_0_COMMAND_Y_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_Y_END 0xff20502f
#define HPS_0_ARM_A9_0_COMMAND_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_Y_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_Y_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_Y_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_Y_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_Y_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_Y_RESET_VALUE 0

/*
 * Macros for device 'command_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_Z_COMPONENT_NAME command_z
#define HPS_0_ARM_A9_0_COMMAND_Z_BASE 0xff205040
#define HPS_0_ARM_A9_0_COMMAND_Z_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_Z_END 0xff20504f
#define HPS_0_ARM_A9_0_COMMAND_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_Z_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_Z_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_Z_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_Z_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_Z_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_Z_RESET_VALUE 0

/*
 * Macros for device 'command_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_E0_COMPONENT_NAME command_e0
#define HPS_0_ARM_A9_0_COMMAND_E0_BASE 0xff205060
#define HPS_0_ARM_A9_0_COMMAND_E0_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_E0_END 0xff20506f
#define HPS_0_ARM_A9_0_COMMAND_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_E0_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_E0_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_E0_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_E0_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_E0_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_E0_RESET_VALUE 0

/*
 * Macros for device 'command_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_E1_COMPONENT_NAME command_e1
#define HPS_0_ARM_A9_0_COMMAND_E1_BASE 0xff205080
#define HPS_0_ARM_A9_0_COMMAND_E1_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_E1_END 0xff20508f
#define HPS_0_ARM_A9_0_COMMAND_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_E1_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_E1_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_E1_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_E1_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_E1_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_E1_RESET_VALUE 0

/*
 * Macros for device 'command_f_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_F_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_F_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_F_X_COMPONENT_NAME command_f_x
#define HPS_0_ARM_A9_0_COMMAND_F_X_BASE 0xff2050a0
#define HPS_0_ARM_A9_0_COMMAND_F_X_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_F_X_END 0xff2050af
#define HPS_0_ARM_A9_0_COMMAND_F_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_X_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_F_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_F_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_F_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_F_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_X_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_F_X_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_F_X_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_F_X_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_F_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_X_RESET_VALUE 0

/*
 * Macros for device 'command_t', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_T_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_T_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_T_COMPONENT_NAME command_t
#define HPS_0_ARM_A9_0_COMMAND_T_BASE 0xff2050c0
#define HPS_0_ARM_A9_0_COMMAND_T_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_T_END 0xff2050cf
#define HPS_0_ARM_A9_0_COMMAND_T_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_T_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_T_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_T_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_COMMAND_T_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_T_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_T_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_T_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_T_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_T_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_T_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_T_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_T_RESET_VALUE 0

/*
 * Macros for device 'command_dt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_DT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_DT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_DT_COMPONENT_NAME command_dt
#define HPS_0_ARM_A9_0_COMMAND_DT_BASE 0xff2050e0
#define HPS_0_ARM_A9_0_COMMAND_DT_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_DT_END 0xff2050ef
#define HPS_0_ARM_A9_0_COMMAND_DT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_DT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_DT_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_DT_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_COMMAND_DT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_DT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_DT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_DT_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_DT_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_DT_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_DT_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_DT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_DT_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_COMPONENT_NAME settings_max_speed_x
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_BASE 0xff205100
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_END 0xff20510f
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_X_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_COMPONENT_NAME settings_max_speed_y
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_BASE 0xff205120
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_END 0xff20512f
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_COMPONENT_NAME settings_max_speed_z
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_BASE 0xff205140
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_END 0xff20514f
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_COMPONENT_NAME settings_max_speed_e0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_BASE 0xff205160
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_END 0xff20516f
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_COMPONENT_NAME settings_max_speed_e1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_BASE 0xff205180
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_END 0xff20518f
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_SPEED_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_COMPONENT_NAME settings_acceleration_x
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_BASE 0xff2051a0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_END 0xff2051af
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_X_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_COMPONENT_NAME settings_acceleration_y
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_BASE 0xff2051c0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_END 0xff2051cf
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_COMPONENT_NAME settings_acceleration_z
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_BASE 0xff2051e0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_END 0xff2051ef
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_COMPONENT_NAME settings_acceleration_e0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_BASE 0xff205200
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_END 0xff20520f
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_COMPONENT_NAME settings_acceleration_e1
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_BASE 0xff205220
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_END 0xff20522f
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_ACCELERATION_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_JERK_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_COMPONENT_NAME settings_jerk_x
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_BASE 0xff205240
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_END 0xff20524f
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_X_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_JERK_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_COMPONENT_NAME settings_jerk_y
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_BASE 0xff205260
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_END 0xff20526f
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_JERK_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_COMPONENT_NAME settings_jerk_z
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_BASE 0xff205280
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_END 0xff20528f
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_JERK_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_COMPONENT_NAME settings_jerk_e0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_BASE 0xff2052a0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_END 0xff2052af
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_JERK_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_COMPONENT_NAME settings_jerk_e1
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_BASE 0xff2052c0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_END 0xff2052cf
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_JERK_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_COMPONENT_NAME settings_max_temp_e0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_BASE 0xff2052e0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_END 0xff2052ef
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_COMPONENT_NAME settings_max_temp_e1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_BASE 0xff205300
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_END 0xff20530f
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_bed', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_COMPONENT_NAME settings_max_temp_bed
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_BASE 0xff205320
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_SPAN 16
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_END 0xff20532f
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_CAPTURE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_FREQ 50000000
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_HAS_IN 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_HAS_OUT 1
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_HAS_TRI 0
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SETTINGS_MAX_TEMP_BED_RESET_VALUE 0

/*
 * Macros for device 'command_f_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_F_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_F_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_F_Y_COMPONENT_NAME command_f_y
#define HPS_0_ARM_A9_0_COMMAND_F_Y_BASE 0xff205340
#define HPS_0_ARM_A9_0_COMMAND_F_Y_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_F_Y_END 0xff20534f
#define HPS_0_ARM_A9_0_COMMAND_F_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_Y_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_F_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_F_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_F_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_F_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_Y_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_F_Y_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_F_Y_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_F_Y_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_F_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_Y_RESET_VALUE 0

/*
 * Macros for device 'command_f_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_F_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_F_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_F_Z_COMPONENT_NAME command_f_z
#define HPS_0_ARM_A9_0_COMMAND_F_Z_BASE 0xff205360
#define HPS_0_ARM_A9_0_COMMAND_F_Z_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_F_Z_END 0xff20536f
#define HPS_0_ARM_A9_0_COMMAND_F_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_Z_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_F_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_F_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_F_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_F_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_Z_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_F_Z_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_F_Z_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_F_Z_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_F_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_Z_RESET_VALUE 0

/*
 * Macros for device 'command_f_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_F_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_F_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_F_E0_COMPONENT_NAME command_f_e0
#define HPS_0_ARM_A9_0_COMMAND_F_E0_BASE 0xff205380
#define HPS_0_ARM_A9_0_COMMAND_F_E0_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_F_E0_END 0xff20538f
#define HPS_0_ARM_A9_0_COMMAND_F_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_E0_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_F_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_F_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_F_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_F_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_E0_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_F_E0_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_F_E0_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_F_E0_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_F_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_E0_RESET_VALUE 0

/*
 * Macros for device 'command_f_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_COMMAND_F_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_COMMAND_F_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_COMMAND_F_E1_COMPONENT_NAME command_f_e1
#define HPS_0_ARM_A9_0_COMMAND_F_E1_BASE 0xff2053a0
#define HPS_0_ARM_A9_0_COMMAND_F_E1_SPAN 16
#define HPS_0_ARM_A9_0_COMMAND_F_E1_END 0xff2053af
#define HPS_0_ARM_A9_0_COMMAND_F_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_COMMAND_F_E1_CAPTURE 0
#define HPS_0_ARM_A9_0_COMMAND_F_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_COMMAND_F_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_COMMAND_F_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_COMMAND_F_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_E1_FREQ 50000000
#define HPS_0_ARM_A9_0_COMMAND_F_E1_HAS_IN 0
#define HPS_0_ARM_A9_0_COMMAND_F_E1_HAS_OUT 1
#define HPS_0_ARM_A9_0_COMMAND_F_E1_HAS_TRI 0
#define HPS_0_ARM_A9_0_COMMAND_F_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_COMMAND_F_E1_RESET_VALUE 0

/*
 * Macros for device 'temp_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TEMP_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TEMP_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TEMP_0_COMPONENT_NAME temp_0
#define HPS_0_ARM_A9_0_TEMP_0_BASE 0xff206000
#define HPS_0_ARM_A9_0_TEMP_0_SPAN 16
#define HPS_0_ARM_A9_0_TEMP_0_END 0xff20600f
#define HPS_0_ARM_A9_0_TEMP_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TEMP_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TEMP_0_CAPTURE 0
#define HPS_0_ARM_A9_0_TEMP_0_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_TEMP_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TEMP_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TEMP_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TEMP_0_FREQ 50000000
#define HPS_0_ARM_A9_0_TEMP_0_HAS_IN 1
#define HPS_0_ARM_A9_0_TEMP_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_TEMP_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_TEMP_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TEMP_0_RESET_VALUE 0

/*
 * Macros for device 'temp_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TEMP_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TEMP_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TEMP_1_COMPONENT_NAME temp_1
#define HPS_0_ARM_A9_0_TEMP_1_BASE 0xff206020
#define HPS_0_ARM_A9_0_TEMP_1_SPAN 16
#define HPS_0_ARM_A9_0_TEMP_1_END 0xff20602f
#define HPS_0_ARM_A9_0_TEMP_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TEMP_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TEMP_1_CAPTURE 0
#define HPS_0_ARM_A9_0_TEMP_1_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_TEMP_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TEMP_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TEMP_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TEMP_1_FREQ 50000000
#define HPS_0_ARM_A9_0_TEMP_1_HAS_IN 1
#define HPS_0_ARM_A9_0_TEMP_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_TEMP_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_TEMP_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TEMP_1_RESET_VALUE 0

/*
 * Macros for device 'temp_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TEMP_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TEMP_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TEMP_2_COMPONENT_NAME temp_2
#define HPS_0_ARM_A9_0_TEMP_2_BASE 0xff206040
#define HPS_0_ARM_A9_0_TEMP_2_SPAN 16
#define HPS_0_ARM_A9_0_TEMP_2_END 0xff20604f
#define HPS_0_ARM_A9_0_TEMP_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TEMP_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TEMP_2_CAPTURE 0
#define HPS_0_ARM_A9_0_TEMP_2_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_TEMP_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TEMP_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TEMP_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TEMP_2_FREQ 50000000
#define HPS_0_ARM_A9_0_TEMP_2_HAS_IN 1
#define HPS_0_ARM_A9_0_TEMP_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_TEMP_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_TEMP_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TEMP_2_RESET_VALUE 0

/*
 * Macros for device 'position_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_POSITION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_POSITION_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_POSITION_X_COMPONENT_NAME position_x
#define HPS_0_ARM_A9_0_POSITION_X_BASE 0xff206060
#define HPS_0_ARM_A9_0_POSITION_X_SPAN 16
#define HPS_0_ARM_A9_0_POSITION_X_END 0xff20606f
#define HPS_0_ARM_A9_0_POSITION_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_X_CAPTURE 0
#define HPS_0_ARM_A9_0_POSITION_X_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_POSITION_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_POSITION_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_POSITION_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_X_FREQ 50000000
#define HPS_0_ARM_A9_0_POSITION_X_HAS_IN 1
#define HPS_0_ARM_A9_0_POSITION_X_HAS_OUT 0
#define HPS_0_ARM_A9_0_POSITION_X_HAS_TRI 0
#define HPS_0_ARM_A9_0_POSITION_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_X_RESET_VALUE 0

/*
 * Macros for device 'position_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_POSITION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_POSITION_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_POSITION_Y_COMPONENT_NAME position_y
#define HPS_0_ARM_A9_0_POSITION_Y_BASE 0xff206080
#define HPS_0_ARM_A9_0_POSITION_Y_SPAN 16
#define HPS_0_ARM_A9_0_POSITION_Y_END 0xff20608f
#define HPS_0_ARM_A9_0_POSITION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_Y_CAPTURE 0
#define HPS_0_ARM_A9_0_POSITION_Y_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_POSITION_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_POSITION_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_POSITION_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_Y_FREQ 50000000
#define HPS_0_ARM_A9_0_POSITION_Y_HAS_IN 1
#define HPS_0_ARM_A9_0_POSITION_Y_HAS_OUT 0
#define HPS_0_ARM_A9_0_POSITION_Y_HAS_TRI 0
#define HPS_0_ARM_A9_0_POSITION_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_Y_RESET_VALUE 0

/*
 * Macros for device 'position_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_POSITION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_POSITION_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_POSITION_Z_COMPONENT_NAME position_z
#define HPS_0_ARM_A9_0_POSITION_Z_BASE 0xff2060a0
#define HPS_0_ARM_A9_0_POSITION_Z_SPAN 16
#define HPS_0_ARM_A9_0_POSITION_Z_END 0xff2060af
#define HPS_0_ARM_A9_0_POSITION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_Z_CAPTURE 0
#define HPS_0_ARM_A9_0_POSITION_Z_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_POSITION_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_POSITION_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_POSITION_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_Z_FREQ 50000000
#define HPS_0_ARM_A9_0_POSITION_Z_HAS_IN 1
#define HPS_0_ARM_A9_0_POSITION_Z_HAS_OUT 0
#define HPS_0_ARM_A9_0_POSITION_Z_HAS_TRI 0
#define HPS_0_ARM_A9_0_POSITION_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_Z_RESET_VALUE 0

/*
 * Macros for device 'position_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_POSITION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_POSITION_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_POSITION_E0_COMPONENT_NAME position_e0
#define HPS_0_ARM_A9_0_POSITION_E0_BASE 0xff2060c0
#define HPS_0_ARM_A9_0_POSITION_E0_SPAN 16
#define HPS_0_ARM_A9_0_POSITION_E0_END 0xff2060cf
#define HPS_0_ARM_A9_0_POSITION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_E0_CAPTURE 0
#define HPS_0_ARM_A9_0_POSITION_E0_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_POSITION_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_POSITION_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_POSITION_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_E0_FREQ 50000000
#define HPS_0_ARM_A9_0_POSITION_E0_HAS_IN 1
#define HPS_0_ARM_A9_0_POSITION_E0_HAS_OUT 0
#define HPS_0_ARM_A9_0_POSITION_E0_HAS_TRI 0
#define HPS_0_ARM_A9_0_POSITION_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_E0_RESET_VALUE 0

/*
 * Macros for device 'position_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_POSITION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_POSITION_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_POSITION_E1_COMPONENT_NAME position_e1
#define HPS_0_ARM_A9_0_POSITION_E1_BASE 0xff2060e0
#define HPS_0_ARM_A9_0_POSITION_E1_SPAN 16
#define HPS_0_ARM_A9_0_POSITION_E1_END 0xff2060ef
#define HPS_0_ARM_A9_0_POSITION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_E1_CAPTURE 0
#define HPS_0_ARM_A9_0_POSITION_E1_DATA_WIDTH 12
#define HPS_0_ARM_A9_0_POSITION_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_POSITION_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_POSITION_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_E1_FREQ 50000000
#define HPS_0_ARM_A9_0_POSITION_E1_HAS_IN 1
#define HPS_0_ARM_A9_0_POSITION_E1_HAS_OUT 0
#define HPS_0_ARM_A9_0_POSITION_E1_HAS_TRI 0
#define HPS_0_ARM_A9_0_POSITION_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_E1_RESET_VALUE 0

/*
 * Macros for device 'position_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_POSITION_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_POSITION_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_POSITION_TYPE_COMPONENT_NAME position_type
#define HPS_0_ARM_A9_0_POSITION_TYPE_BASE 0xff206100
#define HPS_0_ARM_A9_0_POSITION_TYPE_SPAN 16
#define HPS_0_ARM_A9_0_POSITION_TYPE_END 0xff20610f
#define HPS_0_ARM_A9_0_POSITION_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_TYPE_CAPTURE 0
#define HPS_0_ARM_A9_0_POSITION_TYPE_DATA_WIDTH 1
#define HPS_0_ARM_A9_0_POSITION_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_POSITION_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_POSITION_TYPE_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_TYPE_FREQ 50000000
#define HPS_0_ARM_A9_0_POSITION_TYPE_HAS_IN 1
#define HPS_0_ARM_A9_0_POSITION_TYPE_HAS_OUT 0
#define HPS_0_ARM_A9_0_POSITION_TYPE_HAS_TRI 0
#define HPS_0_ARM_A9_0_POSITION_TYPE_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_TYPE_RESET_VALUE 0

/*
 * Macros for device 'position_extruder_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_COMPONENT_NAME position_extruder_type
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_BASE 0xff206120
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_SPAN 16
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_END 0xff20612f
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_CAPTURE 0
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_DATA_WIDTH 1
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_FREQ 50000000
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_HAS_IN 1
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_HAS_OUT 0
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_HAS_TRI 0
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_POSITION_EXTRUDER_TYPE_RESET_VALUE 0

/*
 * Macros for device 'params_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_X_0_COMPONENT_NAME params_x_0
#define HPS_0_ARM_A9_0_PARAMS_X_0_BASE 0xff207000
#define HPS_0_ARM_A9_0_PARAMS_X_0_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_X_0_END 0xff20700f
#define HPS_0_ARM_A9_0_PARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_0_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_X_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_X_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_0_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_X_0_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_X_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_X_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_X_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'params_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_X_1_COMPONENT_NAME params_x_1
#define HPS_0_ARM_A9_0_PARAMS_X_1_BASE 0xff207020
#define HPS_0_ARM_A9_0_PARAMS_X_1_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_X_1_END 0xff20702f
#define HPS_0_ARM_A9_0_PARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_1_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_X_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_X_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_1_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_X_1_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_X_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_X_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_X_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'params_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_X_2_COMPONENT_NAME params_x_2
#define HPS_0_ARM_A9_0_PARAMS_X_2_BASE 0xff207040
#define HPS_0_ARM_A9_0_PARAMS_X_2_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_X_2_END 0xff20704f
#define HPS_0_ARM_A9_0_PARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_2_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_X_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_X_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_2_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_X_2_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_X_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_X_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_X_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'params_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_X_3_COMPONENT_NAME params_x_3
#define HPS_0_ARM_A9_0_PARAMS_X_3_BASE 0xff207060
#define HPS_0_ARM_A9_0_PARAMS_X_3_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_X_3_END 0xff20706f
#define HPS_0_ARM_A9_0_PARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_3_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_X_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_X_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_3_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_X_3_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_X_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_X_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_X_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'params_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_X_4_COMPONENT_NAME params_x_4
#define HPS_0_ARM_A9_0_PARAMS_X_4_BASE 0xff207080
#define HPS_0_ARM_A9_0_PARAMS_X_4_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_X_4_END 0xff20708f
#define HPS_0_ARM_A9_0_PARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_X_4_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_X_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_X_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_X_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_4_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_X_4_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_X_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_X_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_X_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'params_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Y_0_COMPONENT_NAME params_y_0
#define HPS_0_ARM_A9_0_PARAMS_Y_0_BASE 0xff2070a0
#define HPS_0_ARM_A9_0_PARAMS_Y_0_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Y_0_END 0xff2070af
#define HPS_0_ARM_A9_0_PARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_0_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_0_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Y_0_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Y_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Y_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Y_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'params_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Y_1_COMPONENT_NAME params_y_1
#define HPS_0_ARM_A9_0_PARAMS_Y_1_BASE 0xff2070c0
#define HPS_0_ARM_A9_0_PARAMS_Y_1_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Y_1_END 0xff2070cf
#define HPS_0_ARM_A9_0_PARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_1_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_1_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Y_1_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Y_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Y_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Y_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'params_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Y_2_COMPONENT_NAME params_y_2
#define HPS_0_ARM_A9_0_PARAMS_Y_2_BASE 0xff2070e0
#define HPS_0_ARM_A9_0_PARAMS_Y_2_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Y_2_END 0xff2070ef
#define HPS_0_ARM_A9_0_PARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_2_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_2_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Y_2_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Y_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Y_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Y_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'params_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Y_3_COMPONENT_NAME params_y_3
#define HPS_0_ARM_A9_0_PARAMS_Y_3_BASE 0xff207100
#define HPS_0_ARM_A9_0_PARAMS_Y_3_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Y_3_END 0xff20710f
#define HPS_0_ARM_A9_0_PARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_3_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_3_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Y_3_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Y_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Y_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Y_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'params_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Y_4_COMPONENT_NAME params_y_4
#define HPS_0_ARM_A9_0_PARAMS_Y_4_BASE 0xff207120
#define HPS_0_ARM_A9_0_PARAMS_Y_4_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Y_4_END 0xff20712f
#define HPS_0_ARM_A9_0_PARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Y_4_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Y_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_4_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Y_4_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Y_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Y_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Y_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'params_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Z_0_COMPONENT_NAME params_z_0
#define HPS_0_ARM_A9_0_PARAMS_Z_0_BASE 0xff207140
#define HPS_0_ARM_A9_0_PARAMS_Z_0_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Z_0_END 0xff20714f
#define HPS_0_ARM_A9_0_PARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_0_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_0_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Z_0_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Z_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Z_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Z_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'params_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Z_1_COMPONENT_NAME params_z_1
#define HPS_0_ARM_A9_0_PARAMS_Z_1_BASE 0xff207160
#define HPS_0_ARM_A9_0_PARAMS_Z_1_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Z_1_END 0xff20716f
#define HPS_0_ARM_A9_0_PARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_1_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_1_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Z_1_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Z_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Z_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Z_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'params_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Z_2_COMPONENT_NAME params_z_2
#define HPS_0_ARM_A9_0_PARAMS_Z_2_BASE 0xff207180
#define HPS_0_ARM_A9_0_PARAMS_Z_2_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Z_2_END 0xff20718f
#define HPS_0_ARM_A9_0_PARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_2_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_2_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Z_2_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Z_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Z_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Z_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'params_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Z_3_COMPONENT_NAME params_z_3
#define HPS_0_ARM_A9_0_PARAMS_Z_3_BASE 0xff2071a0
#define HPS_0_ARM_A9_0_PARAMS_Z_3_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Z_3_END 0xff2071af
#define HPS_0_ARM_A9_0_PARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_3_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_3_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Z_3_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Z_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Z_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Z_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'params_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_Z_4_COMPONENT_NAME params_z_4
#define HPS_0_ARM_A9_0_PARAMS_Z_4_BASE 0xff2071c0
#define HPS_0_ARM_A9_0_PARAMS_Z_4_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_Z_4_END 0xff2071cf
#define HPS_0_ARM_A9_0_PARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_Z_4_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_Z_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_4_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_Z_4_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_Z_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_Z_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_Z_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'params_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E0_0_COMPONENT_NAME params_e0_0
#define HPS_0_ARM_A9_0_PARAMS_E0_0_BASE 0xff2071e0
#define HPS_0_ARM_A9_0_PARAMS_E0_0_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E0_0_END 0xff2071ef
#define HPS_0_ARM_A9_0_PARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_0_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_0_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E0_0_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E0_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E0_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E0_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'params_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E0_1_COMPONENT_NAME params_e0_1
#define HPS_0_ARM_A9_0_PARAMS_E0_1_BASE 0xff207200
#define HPS_0_ARM_A9_0_PARAMS_E0_1_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E0_1_END 0xff20720f
#define HPS_0_ARM_A9_0_PARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_1_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_1_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E0_1_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E0_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E0_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E0_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'params_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E0_2_COMPONENT_NAME params_e0_2
#define HPS_0_ARM_A9_0_PARAMS_E0_2_BASE 0xff207220
#define HPS_0_ARM_A9_0_PARAMS_E0_2_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E0_2_END 0xff20722f
#define HPS_0_ARM_A9_0_PARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_2_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_2_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E0_2_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E0_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E0_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E0_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'params_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E0_3_COMPONENT_NAME params_e0_3
#define HPS_0_ARM_A9_0_PARAMS_E0_3_BASE 0xff207240
#define HPS_0_ARM_A9_0_PARAMS_E0_3_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E0_3_END 0xff20724f
#define HPS_0_ARM_A9_0_PARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_3_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_3_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E0_3_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E0_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E0_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E0_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'params_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E0_4_COMPONENT_NAME params_e0_4
#define HPS_0_ARM_A9_0_PARAMS_E0_4_BASE 0xff207260
#define HPS_0_ARM_A9_0_PARAMS_E0_4_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E0_4_END 0xff20726f
#define HPS_0_ARM_A9_0_PARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E0_4_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E0_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_4_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E0_4_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E0_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E0_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E0_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'params_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E1_0_COMPONENT_NAME params_e1_0
#define HPS_0_ARM_A9_0_PARAMS_E1_0_BASE 0xff207280
#define HPS_0_ARM_A9_0_PARAMS_E1_0_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E1_0_END 0xff20728f
#define HPS_0_ARM_A9_0_PARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_0_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_0_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E1_0_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E1_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E1_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'params_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E1_1_COMPONENT_NAME params_e1_1
#define HPS_0_ARM_A9_0_PARAMS_E1_1_BASE 0xff2072a0
#define HPS_0_ARM_A9_0_PARAMS_E1_1_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E1_1_END 0xff2072af
#define HPS_0_ARM_A9_0_PARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_1_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_1_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E1_1_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E1_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E1_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E1_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'params_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E1_2_COMPONENT_NAME params_e1_2
#define HPS_0_ARM_A9_0_PARAMS_E1_2_BASE 0xff2072c0
#define HPS_0_ARM_A9_0_PARAMS_E1_2_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E1_2_END 0xff2072cf
#define HPS_0_ARM_A9_0_PARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_2_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_2_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E1_2_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E1_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E1_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E1_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'params_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E1_3_COMPONENT_NAME params_e1_3
#define HPS_0_ARM_A9_0_PARAMS_E1_3_BASE 0xff2072e0
#define HPS_0_ARM_A9_0_PARAMS_E1_3_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E1_3_END 0xff2072ef
#define HPS_0_ARM_A9_0_PARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_3_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_3_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E1_3_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E1_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E1_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E1_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'params_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PARAMS_E1_4_COMPONENT_NAME params_e1_4
#define HPS_0_ARM_A9_0_PARAMS_E1_4_BASE 0xff207300
#define HPS_0_ARM_A9_0_PARAMS_E1_4_SPAN 16
#define HPS_0_ARM_A9_0_PARAMS_E1_4_END 0xff20730f
#define HPS_0_ARM_A9_0_PARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PARAMS_E1_4_CAPTURE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PARAMS_E1_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_4_FREQ 50000000
#define HPS_0_ARM_A9_0_PARAMS_E1_4_HAS_IN 1
#define HPS_0_ARM_A9_0_PARAMS_E1_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_PARAMS_E1_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_PARAMS_E1_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'timing_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_X_0_COMPONENT_NAME timing_x_0
#define HPS_0_ARM_A9_0_TIMING_X_0_BASE 0xff207320
#define HPS_0_ARM_A9_0_TIMING_X_0_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_X_0_END 0xff20732f
#define HPS_0_ARM_A9_0_TIMING_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_X_0_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_X_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_X_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_X_0_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_X_0_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_X_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_X_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_X_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_X_0_RESET_VALUE 0

/*
 * Macros for device 'timing_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_X_1_COMPONENT_NAME timing_x_1
#define HPS_0_ARM_A9_0_TIMING_X_1_BASE 0xff207340
#define HPS_0_ARM_A9_0_TIMING_X_1_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_X_1_END 0xff20734f
#define HPS_0_ARM_A9_0_TIMING_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_X_1_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_X_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_X_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_X_1_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_X_1_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_X_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_X_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_X_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_X_1_RESET_VALUE 0

/*
 * Macros for device 'timing_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_X_2_COMPONENT_NAME timing_x_2
#define HPS_0_ARM_A9_0_TIMING_X_2_BASE 0xff207360
#define HPS_0_ARM_A9_0_TIMING_X_2_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_X_2_END 0xff20736f
#define HPS_0_ARM_A9_0_TIMING_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_X_2_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_X_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_X_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_X_2_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_X_2_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_X_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_X_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_X_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_X_2_RESET_VALUE 0

/*
 * Macros for device 'timing_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_X_3_COMPONENT_NAME timing_x_3
#define HPS_0_ARM_A9_0_TIMING_X_3_BASE 0xff207380
#define HPS_0_ARM_A9_0_TIMING_X_3_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_X_3_END 0xff20738f
#define HPS_0_ARM_A9_0_TIMING_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_X_3_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_X_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_X_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_X_3_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_X_3_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_X_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_X_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_X_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_X_3_RESET_VALUE 0

/*
 * Macros for device 'timing_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_Y_0_COMPONENT_NAME timing_y_0
#define HPS_0_ARM_A9_0_TIMING_Y_0_BASE 0xff2073a0
#define HPS_0_ARM_A9_0_TIMING_Y_0_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_Y_0_END 0xff2073af
#define HPS_0_ARM_A9_0_TIMING_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Y_0_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_Y_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_Y_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Y_0_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_Y_0_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_Y_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_Y_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_Y_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Y_0_RESET_VALUE 0

/*
 * Macros for device 'timing_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_Y_1_COMPONENT_NAME timing_y_1
#define HPS_0_ARM_A9_0_TIMING_Y_1_BASE 0xff2073c0
#define HPS_0_ARM_A9_0_TIMING_Y_1_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_Y_1_END 0xff2073cf
#define HPS_0_ARM_A9_0_TIMING_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Y_1_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_Y_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_Y_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Y_1_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_Y_1_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_Y_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_Y_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_Y_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Y_1_RESET_VALUE 0

/*
 * Macros for device 'timing_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_Y_2_COMPONENT_NAME timing_y_2
#define HPS_0_ARM_A9_0_TIMING_Y_2_BASE 0xff2073e0
#define HPS_0_ARM_A9_0_TIMING_Y_2_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_Y_2_END 0xff2073ef
#define HPS_0_ARM_A9_0_TIMING_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Y_2_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_Y_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_Y_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Y_2_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_Y_2_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_Y_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_Y_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_Y_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Y_2_RESET_VALUE 0

/*
 * Macros for device 'timing_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_Y_3_COMPONENT_NAME timing_y_3
#define HPS_0_ARM_A9_0_TIMING_Y_3_BASE 0xff207400
#define HPS_0_ARM_A9_0_TIMING_Y_3_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_Y_3_END 0xff20740f
#define HPS_0_ARM_A9_0_TIMING_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Y_3_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_Y_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_Y_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Y_3_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_Y_3_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_Y_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_Y_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_Y_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Y_3_RESET_VALUE 0

/*
 * Macros for device 'timing_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_Z_0_COMPONENT_NAME timing_z_0
#define HPS_0_ARM_A9_0_TIMING_Z_0_BASE 0xff207420
#define HPS_0_ARM_A9_0_TIMING_Z_0_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_Z_0_END 0xff20742f
#define HPS_0_ARM_A9_0_TIMING_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Z_0_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_Z_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_Z_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Z_0_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_Z_0_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_Z_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_Z_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_Z_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Z_0_RESET_VALUE 0

/*
 * Macros for device 'timing_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_Z_1_COMPONENT_NAME timing_z_1
#define HPS_0_ARM_A9_0_TIMING_Z_1_BASE 0xff207440
#define HPS_0_ARM_A9_0_TIMING_Z_1_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_Z_1_END 0xff20744f
#define HPS_0_ARM_A9_0_TIMING_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Z_1_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_Z_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_Z_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Z_1_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_Z_1_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_Z_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_Z_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_Z_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Z_1_RESET_VALUE 0

/*
 * Macros for device 'timing_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_Z_2_COMPONENT_NAME timing_z_2
#define HPS_0_ARM_A9_0_TIMING_Z_2_BASE 0xff207460
#define HPS_0_ARM_A9_0_TIMING_Z_2_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_Z_2_END 0xff20746f
#define HPS_0_ARM_A9_0_TIMING_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Z_2_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_Z_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_Z_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Z_2_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_Z_2_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_Z_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_Z_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_Z_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Z_2_RESET_VALUE 0

/*
 * Macros for device 'timing_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_Z_3_COMPONENT_NAME timing_z_3
#define HPS_0_ARM_A9_0_TIMING_Z_3_BASE 0xff207480
#define HPS_0_ARM_A9_0_TIMING_Z_3_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_Z_3_END 0xff20748f
#define HPS_0_ARM_A9_0_TIMING_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_Z_3_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_Z_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_Z_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Z_3_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_Z_3_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_Z_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_Z_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_Z_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_Z_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_E0_0_COMPONENT_NAME timing_e0_0
#define HPS_0_ARM_A9_0_TIMING_E0_0_BASE 0xff2074a0
#define HPS_0_ARM_A9_0_TIMING_E0_0_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_E0_0_END 0xff2074af
#define HPS_0_ARM_A9_0_TIMING_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E0_0_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_E0_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_E0_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E0_0_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_E0_0_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_E0_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_E0_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_E0_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E0_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_E0_1_COMPONENT_NAME timing_e0_1
#define HPS_0_ARM_A9_0_TIMING_E0_1_BASE 0xff2074c0
#define HPS_0_ARM_A9_0_TIMING_E0_1_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_E0_1_END 0xff2074cf
#define HPS_0_ARM_A9_0_TIMING_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E0_1_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_E0_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_E0_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E0_1_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_E0_1_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_E0_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_E0_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_E0_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E0_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_E0_2_COMPONENT_NAME timing_e0_2
#define HPS_0_ARM_A9_0_TIMING_E0_2_BASE 0xff2074e0
#define HPS_0_ARM_A9_0_TIMING_E0_2_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_E0_2_END 0xff2074ef
#define HPS_0_ARM_A9_0_TIMING_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E0_2_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_E0_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_E0_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E0_2_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_E0_2_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_E0_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_E0_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_E0_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E0_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_E0_3_COMPONENT_NAME timing_e0_3
#define HPS_0_ARM_A9_0_TIMING_E0_3_BASE 0xff207500
#define HPS_0_ARM_A9_0_TIMING_E0_3_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_E0_3_END 0xff20750f
#define HPS_0_ARM_A9_0_TIMING_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E0_3_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_E0_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_E0_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E0_3_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_E0_3_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_E0_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_E0_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_E0_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E0_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_E1_0_COMPONENT_NAME timing_e1_0
#define HPS_0_ARM_A9_0_TIMING_E1_0_BASE 0xff207520
#define HPS_0_ARM_A9_0_TIMING_E1_0_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_E1_0_END 0xff20752f
#define HPS_0_ARM_A9_0_TIMING_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E1_0_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_E1_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_E1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E1_0_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_E1_0_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_E1_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_E1_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_E1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E1_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_E1_1_COMPONENT_NAME timing_e1_1
#define HPS_0_ARM_A9_0_TIMING_E1_1_BASE 0xff207540
#define HPS_0_ARM_A9_0_TIMING_E1_1_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_E1_1_END 0xff20754f
#define HPS_0_ARM_A9_0_TIMING_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E1_1_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_E1_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_E1_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E1_1_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_E1_1_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_E1_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_E1_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_E1_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E1_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_E1_2_COMPONENT_NAME timing_e1_2
#define HPS_0_ARM_A9_0_TIMING_E1_2_BASE 0xff207560
#define HPS_0_ARM_A9_0_TIMING_E1_2_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_E1_2_END 0xff20756f
#define HPS_0_ARM_A9_0_TIMING_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E1_2_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_E1_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_E1_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E1_2_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_E1_2_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_E1_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_E1_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_E1_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E1_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TIMING_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TIMING_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TIMING_E1_3_COMPONENT_NAME timing_e1_3
#define HPS_0_ARM_A9_0_TIMING_E1_3_BASE 0xff207580
#define HPS_0_ARM_A9_0_TIMING_E1_3_SPAN 16
#define HPS_0_ARM_A9_0_TIMING_E1_3_END 0xff20758f
#define HPS_0_ARM_A9_0_TIMING_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TIMING_E1_3_CAPTURE 0
#define HPS_0_ARM_A9_0_TIMING_E1_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TIMING_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TIMING_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TIMING_E1_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E1_3_FREQ 50000000
#define HPS_0_ARM_A9_0_TIMING_E1_3_HAS_IN 1
#define HPS_0_ARM_A9_0_TIMING_E1_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_TIMING_E1_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_TIMING_E1_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TIMING_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_COMPONENT_NAME new_rparams_x_0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_BASE 0xff2075a0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_END 0xff2075af
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_COMPONENT_NAME new_rparams_x_1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_BASE 0xff2075c0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_END 0xff2075cf
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_COMPONENT_NAME new_rparams_x_2
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_BASE 0xff2075e0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_END 0xff2075ef
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_COMPONENT_NAME new_rparams_x_3
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_BASE 0xff207600
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_END 0xff20760f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_COMPONENT_NAME new_rparams_x_4
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_BASE 0xff207620
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_END 0xff20762f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_COMPONENT_NAME new_rparams_y_0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_BASE 0xff207640
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_END 0xff20764f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_COMPONENT_NAME new_rparams_y_1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_BASE 0xff207660
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_END 0xff20766f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_COMPONENT_NAME new_rparams_y_2
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_BASE 0xff207680
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_END 0xff20768f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_COMPONENT_NAME new_rparams_y_3
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_BASE 0xff2076a0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_END 0xff2076af
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_COMPONENT_NAME new_rparams_y_4
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_BASE 0xff2076c0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_END 0xff2076cf
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_COMPONENT_NAME new_rparams_z_0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_BASE 0xff2076e0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_END 0xff2076ef
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_COMPONENT_NAME new_rparams_z_1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_BASE 0xff207700
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_END 0xff20770f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_COMPONENT_NAME new_rparams_z_2
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_BASE 0xff207720
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_END 0xff20772f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_COMPONENT_NAME new_rparams_z_3
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_BASE 0xff207740
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_END 0xff20774f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_COMPONENT_NAME new_rparams_z_4
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_BASE 0xff207760
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_END 0xff20776f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_COMPONENT_NAME new_rparams_e0_0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_BASE 0xff207780
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_END 0xff20778f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_COMPONENT_NAME new_rparams_e0_1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_BASE 0xff2077a0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_END 0xff2077af
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_COMPONENT_NAME new_rparams_e0_2
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_BASE 0xff2077c0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_END 0xff2077cf
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_COMPONENT_NAME new_rparams_e0_3
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_BASE 0xff2077e0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_END 0xff2077ef
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_COMPONENT_NAME new_rparams_e0_4
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_BASE 0xff207800
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_END 0xff20780f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_COMPONENT_NAME new_rparams_e1_0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_BASE 0xff207820
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_END 0xff20782f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_COMPONENT_NAME new_rparams_e1_1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_BASE 0xff207840
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_END 0xff20784f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_COMPONENT_NAME new_rparams_e1_2
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_BASE 0xff207860
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_END 0xff20786f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_COMPONENT_NAME new_rparams_e1_3
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_BASE 0xff207880
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_END 0xff20788f
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_COMPONENT_NAME new_rparams_e1_4
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_BASE 0xff2078a0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_SPAN 16
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_END 0xff2078af
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_CAPTURE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_FREQ 50000000
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_HAS_IN 1
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_NEW_RPARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'step_x_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_STEP_X_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_STEP_X_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_STEP_X_NOW_COMPONENT_NAME step_x_now
#define HPS_0_ARM_A9_0_STEP_X_NOW_BASE 0xff207900
#define HPS_0_ARM_A9_0_STEP_X_NOW_SPAN 16
#define HPS_0_ARM_A9_0_STEP_X_NOW_END 0xff20790f
#define HPS_0_ARM_A9_0_STEP_X_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_X_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_X_NOW_CAPTURE 0
#define HPS_0_ARM_A9_0_STEP_X_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_STEP_X_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_STEP_X_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_STEP_X_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_X_NOW_FREQ 50000000
#define HPS_0_ARM_A9_0_STEP_X_NOW_HAS_IN 1
#define HPS_0_ARM_A9_0_STEP_X_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_0_STEP_X_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_0_STEP_X_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_X_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_y_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_STEP_Y_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_STEP_Y_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_STEP_Y_NOW_COMPONENT_NAME step_y_now
#define HPS_0_ARM_A9_0_STEP_Y_NOW_BASE 0xff207920
#define HPS_0_ARM_A9_0_STEP_Y_NOW_SPAN 16
#define HPS_0_ARM_A9_0_STEP_Y_NOW_END 0xff20792f
#define HPS_0_ARM_A9_0_STEP_Y_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_Y_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_Y_NOW_CAPTURE 0
#define HPS_0_ARM_A9_0_STEP_Y_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_STEP_Y_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_STEP_Y_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_STEP_Y_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_Y_NOW_FREQ 50000000
#define HPS_0_ARM_A9_0_STEP_Y_NOW_HAS_IN 1
#define HPS_0_ARM_A9_0_STEP_Y_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_0_STEP_Y_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_0_STEP_Y_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_Y_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_z_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_STEP_Z_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_STEP_Z_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_STEP_Z_NOW_COMPONENT_NAME step_z_now
#define HPS_0_ARM_A9_0_STEP_Z_NOW_BASE 0xff207940
#define HPS_0_ARM_A9_0_STEP_Z_NOW_SPAN 16
#define HPS_0_ARM_A9_0_STEP_Z_NOW_END 0xff20794f
#define HPS_0_ARM_A9_0_STEP_Z_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_Z_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_Z_NOW_CAPTURE 0
#define HPS_0_ARM_A9_0_STEP_Z_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_STEP_Z_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_STEP_Z_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_STEP_Z_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_Z_NOW_FREQ 50000000
#define HPS_0_ARM_A9_0_STEP_Z_NOW_HAS_IN 1
#define HPS_0_ARM_A9_0_STEP_Z_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_0_STEP_Z_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_0_STEP_Z_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_Z_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e0_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_STEP_E0_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_STEP_E0_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_STEP_E0_NOW_COMPONENT_NAME step_e0_now
#define HPS_0_ARM_A9_0_STEP_E0_NOW_BASE 0xff207960
#define HPS_0_ARM_A9_0_STEP_E0_NOW_SPAN 16
#define HPS_0_ARM_A9_0_STEP_E0_NOW_END 0xff20796f
#define HPS_0_ARM_A9_0_STEP_E0_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_E0_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_E0_NOW_CAPTURE 0
#define HPS_0_ARM_A9_0_STEP_E0_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_STEP_E0_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_STEP_E0_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_STEP_E0_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_E0_NOW_FREQ 50000000
#define HPS_0_ARM_A9_0_STEP_E0_NOW_HAS_IN 1
#define HPS_0_ARM_A9_0_STEP_E0_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_0_STEP_E0_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_0_STEP_E0_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_E0_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e1_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_STEP_E1_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_STEP_E1_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_STEP_E1_NOW_COMPONENT_NAME step_e1_now
#define HPS_0_ARM_A9_0_STEP_E1_NOW_BASE 0xff207980
#define HPS_0_ARM_A9_0_STEP_E1_NOW_SPAN 16
#define HPS_0_ARM_A9_0_STEP_E1_NOW_END 0xff20798f
#define HPS_0_ARM_A9_0_STEP_E1_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_E1_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_STEP_E1_NOW_CAPTURE 0
#define HPS_0_ARM_A9_0_STEP_E1_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_STEP_E1_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_STEP_E1_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_STEP_E1_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_E1_NOW_FREQ 50000000
#define HPS_0_ARM_A9_0_STEP_E1_NOW_HAS_IN 1
#define HPS_0_ARM_A9_0_STEP_E1_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_0_STEP_E1_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_0_STEP_E1_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_STEP_E1_NOW_RESET_VALUE 0

/*
 * Macros for device 'max_params_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MAX_PARAMS_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_COMPONENT_NAME max_params_0
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_BASE 0xff2079a0
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_SPAN 16
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_END 0xff2079af
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_CAPTURE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_FREQ 50000000
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_HAS_IN 1
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_0_RESET_VALUE 0

/*
 * Macros for device 'max_params_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MAX_PARAMS_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_COMPONENT_NAME max_params_1
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_BASE 0xff2079c0
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_SPAN 16
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_END 0xff2079cf
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_CAPTURE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_FREQ 50000000
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_HAS_IN 1
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_1_RESET_VALUE 0

/*
 * Macros for device 'max_params_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MAX_PARAMS_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_COMPONENT_NAME max_params_2
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_BASE 0xff2079e0
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_SPAN 16
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_END 0xff2079ef
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_CAPTURE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_FREQ 50000000
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_HAS_IN 1
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_2_RESET_VALUE 0

/*
 * Macros for device 'max_params_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MAX_PARAMS_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_COMPONENT_NAME max_params_3
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_BASE 0xff207a00
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_SPAN 16
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_END 0xff207a0f
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_CAPTURE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_FREQ 50000000
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_HAS_IN 1
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_3_RESET_VALUE 0

/*
 * Macros for device 'max_params_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MAX_PARAMS_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_COMPONENT_NAME max_params_4
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_BASE 0xff207a20
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_SPAN 16
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_END 0xff207a2f
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_CAPTURE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_FREQ 50000000
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_HAS_IN 1
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_HAS_OUT 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_HAS_TRI 0
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_PARAMS_4_RESET_VALUE 0

/*
 * Macros for device 'max_timing_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MAX_TIMING_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MAX_TIMING_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MAX_TIMING_0_COMPONENT_NAME max_timing_0
#define HPS_0_ARM_A9_0_MAX_TIMING_0_BASE 0xff207a40
#define HPS_0_ARM_A9_0_MAX_TIMING_0_SPAN 16
#define HPS_0_ARM_A9_0_MAX_TIMING_0_END 0xff207a4f
#define HPS_0_ARM_A9_0_MAX_TIMING_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_TIMING_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_TIMING_0_CAPTURE 0
#define HPS_0_ARM_A9_0_MAX_TIMING_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MAX_TIMING_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MAX_TIMING_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MAX_TIMING_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_TIMING_0_FREQ 50000000
#define HPS_0_ARM_A9_0_MAX_TIMING_0_HAS_IN 1
#define HPS_0_ARM_A9_0_MAX_TIMING_0_HAS_OUT 0
#define HPS_0_ARM_A9_0_MAX_TIMING_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_MAX_TIMING_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_TIMING_0_RESET_VALUE 0

/*
 * Macros for device 'max_timing_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MAX_TIMING_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MAX_TIMING_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MAX_TIMING_1_COMPONENT_NAME max_timing_1
#define HPS_0_ARM_A9_0_MAX_TIMING_1_BASE 0xff207a60
#define HPS_0_ARM_A9_0_MAX_TIMING_1_SPAN 16
#define HPS_0_ARM_A9_0_MAX_TIMING_1_END 0xff207a6f
#define HPS_0_ARM_A9_0_MAX_TIMING_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_TIMING_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_TIMING_1_CAPTURE 0
#define HPS_0_ARM_A9_0_MAX_TIMING_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MAX_TIMING_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MAX_TIMING_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MAX_TIMING_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_TIMING_1_FREQ 50000000
#define HPS_0_ARM_A9_0_MAX_TIMING_1_HAS_IN 1
#define HPS_0_ARM_A9_0_MAX_TIMING_1_HAS_OUT 0
#define HPS_0_ARM_A9_0_MAX_TIMING_1_HAS_TRI 0
#define HPS_0_ARM_A9_0_MAX_TIMING_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_TIMING_1_RESET_VALUE 0

/*
 * Macros for device 'max_timing_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MAX_TIMING_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MAX_TIMING_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MAX_TIMING_2_COMPONENT_NAME max_timing_2
#define HPS_0_ARM_A9_0_MAX_TIMING_2_BASE 0xff207a80
#define HPS_0_ARM_A9_0_MAX_TIMING_2_SPAN 16
#define HPS_0_ARM_A9_0_MAX_TIMING_2_END 0xff207a8f
#define HPS_0_ARM_A9_0_MAX_TIMING_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_TIMING_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_TIMING_2_CAPTURE 0
#define HPS_0_ARM_A9_0_MAX_TIMING_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MAX_TIMING_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MAX_TIMING_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MAX_TIMING_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_TIMING_2_FREQ 50000000
#define HPS_0_ARM_A9_0_MAX_TIMING_2_HAS_IN 1
#define HPS_0_ARM_A9_0_MAX_TIMING_2_HAS_OUT 0
#define HPS_0_ARM_A9_0_MAX_TIMING_2_HAS_TRI 0
#define HPS_0_ARM_A9_0_MAX_TIMING_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_TIMING_2_RESET_VALUE 0

/*
 * Macros for device 'max_timing_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MAX_TIMING_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MAX_TIMING_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MAX_TIMING_3_COMPONENT_NAME max_timing_3
#define HPS_0_ARM_A9_0_MAX_TIMING_3_BASE 0xff207aa0
#define HPS_0_ARM_A9_0_MAX_TIMING_3_SPAN 16
#define HPS_0_ARM_A9_0_MAX_TIMING_3_END 0xff207aaf
#define HPS_0_ARM_A9_0_MAX_TIMING_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_TIMING_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MAX_TIMING_3_CAPTURE 0
#define HPS_0_ARM_A9_0_MAX_TIMING_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MAX_TIMING_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MAX_TIMING_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MAX_TIMING_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_TIMING_3_FREQ 50000000
#define HPS_0_ARM_A9_0_MAX_TIMING_3_HAS_IN 1
#define HPS_0_ARM_A9_0_MAX_TIMING_3_HAS_OUT 0
#define HPS_0_ARM_A9_0_MAX_TIMING_3_HAS_TRI 0
#define HPS_0_ARM_A9_0_MAX_TIMING_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MAX_TIMING_3_RESET_VALUE 0

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_ILC_COMPONENT_TYPE interrupt_latency_counter
#define HPS_0_ARM_A9_0_ILC_COMPONENT_NAME ILC
#define HPS_0_ARM_A9_0_ILC_BASE 0xff230000
#define HPS_0_ARM_A9_0_ILC_SPAN 256
#define HPS_0_ARM_A9_0_ILC_END 0xff2300ff

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_0_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_0_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_0_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_0_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_0_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_0_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_0_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_0_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_0_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_0_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_0_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_0_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_0_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_0_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_0_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_0_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_0_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_0_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_0_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_0_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_0_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_0_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_0_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_BASE 0xff201000
#define HPS_0_ARM_A9_1_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_1_SYSID_QSYS_END 0xff201007
#define HPS_0_ARM_A9_1_SYSID_QSYS_ID 4294906626
#define HPS_0_ARM_A9_1_SYSID_QSYS_TIMESTAMP 1590594581

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_BASE 0xff202000
#define HPS_0_ARM_A9_1_JTAG_UART_SPAN 8
#define HPS_0_ARM_A9_1_JTAG_UART_END 0xff202007
#define HPS_0_ARM_A9_1_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'flags_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_FLAGS_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_FLAGS_IN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_FLAGS_IN_COMPONENT_NAME flags_in
#define HPS_0_ARM_A9_1_FLAGS_IN_BASE 0xff204000
#define HPS_0_ARM_A9_1_FLAGS_IN_SPAN 16
#define HPS_0_ARM_A9_1_FLAGS_IN_END 0xff20400f
#define HPS_0_ARM_A9_1_FLAGS_IN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_FLAGS_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_FLAGS_IN_CAPTURE 0
#define HPS_0_ARM_A9_1_FLAGS_IN_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_FLAGS_IN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_FLAGS_IN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_FLAGS_IN_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_FLAGS_IN_FREQ 50000000
#define HPS_0_ARM_A9_1_FLAGS_IN_HAS_IN 1
#define HPS_0_ARM_A9_1_FLAGS_IN_HAS_OUT 0
#define HPS_0_ARM_A9_1_FLAGS_IN_HAS_TRI 0
#define HPS_0_ARM_A9_1_FLAGS_IN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_FLAGS_IN_RESET_VALUE 0

/*
 * Macros for device 'flags_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_FLAGS_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_FLAGS_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_FLAGS_OUT_COMPONENT_NAME flags_out
#define HPS_0_ARM_A9_1_FLAGS_OUT_BASE 0xff204020
#define HPS_0_ARM_A9_1_FLAGS_OUT_SPAN 16
#define HPS_0_ARM_A9_1_FLAGS_OUT_END 0xff20402f
#define HPS_0_ARM_A9_1_FLAGS_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_FLAGS_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_FLAGS_OUT_CAPTURE 0
#define HPS_0_ARM_A9_1_FLAGS_OUT_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_FLAGS_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_FLAGS_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_FLAGS_OUT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_FLAGS_OUT_FREQ 50000000
#define HPS_0_ARM_A9_1_FLAGS_OUT_HAS_IN 0
#define HPS_0_ARM_A9_1_FLAGS_OUT_HAS_OUT 1
#define HPS_0_ARM_A9_1_FLAGS_OUT_HAS_TRI 0
#define HPS_0_ARM_A9_1_FLAGS_OUT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_FLAGS_OUT_RESET_VALUE 0

/*
 * Macros for device 'command_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_TYPE_COMPONENT_NAME command_type
#define HPS_0_ARM_A9_1_COMMAND_TYPE_BASE 0xff204040
#define HPS_0_ARM_A9_1_COMMAND_TYPE_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_TYPE_END 0xff20404f
#define HPS_0_ARM_A9_1_COMMAND_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_TYPE_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_TYPE_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_TYPE_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_TYPE_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_TYPE_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_TYPE_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_TYPE_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_TYPE_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_TYPE_RESET_VALUE 0

/*
 * Macros for device 'command_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_X_COMPONENT_NAME command_x
#define HPS_0_ARM_A9_1_COMMAND_X_BASE 0xff205000
#define HPS_0_ARM_A9_1_COMMAND_X_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_X_END 0xff20500f
#define HPS_0_ARM_A9_1_COMMAND_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_X_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_X_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_X_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_X_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_X_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_X_RESET_VALUE 0

/*
 * Macros for device 'command_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_Y_COMPONENT_NAME command_y
#define HPS_0_ARM_A9_1_COMMAND_Y_BASE 0xff205020
#define HPS_0_ARM_A9_1_COMMAND_Y_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_Y_END 0xff20502f
#define HPS_0_ARM_A9_1_COMMAND_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_Y_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_Y_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_Y_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_Y_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_Y_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_Y_RESET_VALUE 0

/*
 * Macros for device 'command_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_Z_COMPONENT_NAME command_z
#define HPS_0_ARM_A9_1_COMMAND_Z_BASE 0xff205040
#define HPS_0_ARM_A9_1_COMMAND_Z_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_Z_END 0xff20504f
#define HPS_0_ARM_A9_1_COMMAND_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_Z_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_Z_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_Z_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_Z_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_Z_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_Z_RESET_VALUE 0

/*
 * Macros for device 'command_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_E0_COMPONENT_NAME command_e0
#define HPS_0_ARM_A9_1_COMMAND_E0_BASE 0xff205060
#define HPS_0_ARM_A9_1_COMMAND_E0_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_E0_END 0xff20506f
#define HPS_0_ARM_A9_1_COMMAND_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_E0_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_E0_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_E0_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_E0_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_E0_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_E0_RESET_VALUE 0

/*
 * Macros for device 'command_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_E1_COMPONENT_NAME command_e1
#define HPS_0_ARM_A9_1_COMMAND_E1_BASE 0xff205080
#define HPS_0_ARM_A9_1_COMMAND_E1_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_E1_END 0xff20508f
#define HPS_0_ARM_A9_1_COMMAND_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_E1_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_E1_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_E1_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_E1_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_E1_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_E1_RESET_VALUE 0

/*
 * Macros for device 'command_f_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_F_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_F_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_F_X_COMPONENT_NAME command_f_x
#define HPS_0_ARM_A9_1_COMMAND_F_X_BASE 0xff2050a0
#define HPS_0_ARM_A9_1_COMMAND_F_X_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_F_X_END 0xff2050af
#define HPS_0_ARM_A9_1_COMMAND_F_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_X_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_F_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_F_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_F_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_F_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_X_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_F_X_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_F_X_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_F_X_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_F_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_X_RESET_VALUE 0

/*
 * Macros for device 'command_t', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_T_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_T_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_T_COMPONENT_NAME command_t
#define HPS_0_ARM_A9_1_COMMAND_T_BASE 0xff2050c0
#define HPS_0_ARM_A9_1_COMMAND_T_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_T_END 0xff2050cf
#define HPS_0_ARM_A9_1_COMMAND_T_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_T_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_T_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_T_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_COMMAND_T_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_T_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_T_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_T_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_T_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_T_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_T_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_T_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_T_RESET_VALUE 0

/*
 * Macros for device 'command_dt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_DT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_DT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_DT_COMPONENT_NAME command_dt
#define HPS_0_ARM_A9_1_COMMAND_DT_BASE 0xff2050e0
#define HPS_0_ARM_A9_1_COMMAND_DT_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_DT_END 0xff2050ef
#define HPS_0_ARM_A9_1_COMMAND_DT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_DT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_DT_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_DT_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_COMMAND_DT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_DT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_DT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_DT_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_DT_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_DT_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_DT_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_DT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_DT_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_COMPONENT_NAME settings_max_speed_x
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_BASE 0xff205100
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_END 0xff20510f
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_X_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_COMPONENT_NAME settings_max_speed_y
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_BASE 0xff205120
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_END 0xff20512f
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_COMPONENT_NAME settings_max_speed_z
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_BASE 0xff205140
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_END 0xff20514f
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_COMPONENT_NAME settings_max_speed_e0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_BASE 0xff205160
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_END 0xff20516f
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_COMPONENT_NAME settings_max_speed_e1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_BASE 0xff205180
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_END 0xff20518f
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_SPEED_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_COMPONENT_NAME settings_acceleration_x
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_BASE 0xff2051a0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_END 0xff2051af
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_X_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_COMPONENT_NAME settings_acceleration_y
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_BASE 0xff2051c0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_END 0xff2051cf
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_COMPONENT_NAME settings_acceleration_z
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_BASE 0xff2051e0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_END 0xff2051ef
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_COMPONENT_NAME settings_acceleration_e0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_BASE 0xff205200
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_END 0xff20520f
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_COMPONENT_NAME settings_acceleration_e1
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_BASE 0xff205220
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_END 0xff20522f
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_ACCELERATION_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_JERK_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_COMPONENT_NAME settings_jerk_x
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_BASE 0xff205240
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_END 0xff20524f
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_X_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_JERK_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_COMPONENT_NAME settings_jerk_y
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_BASE 0xff205260
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_END 0xff20526f
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_JERK_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_COMPONENT_NAME settings_jerk_z
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_BASE 0xff205280
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_END 0xff20528f
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_JERK_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_COMPONENT_NAME settings_jerk_e0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_BASE 0xff2052a0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_END 0xff2052af
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_JERK_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_COMPONENT_NAME settings_jerk_e1
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_BASE 0xff2052c0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_END 0xff2052cf
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_JERK_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_COMPONENT_NAME settings_max_temp_e0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_BASE 0xff2052e0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_END 0xff2052ef
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_COMPONENT_NAME settings_max_temp_e1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_BASE 0xff205300
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_END 0xff20530f
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_bed', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_COMPONENT_NAME settings_max_temp_bed
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_BASE 0xff205320
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_SPAN 16
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_END 0xff20532f
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_CAPTURE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_FREQ 50000000
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_HAS_IN 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_HAS_OUT 1
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_HAS_TRI 0
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SETTINGS_MAX_TEMP_BED_RESET_VALUE 0

/*
 * Macros for device 'command_f_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_F_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_F_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_F_Y_COMPONENT_NAME command_f_y
#define HPS_0_ARM_A9_1_COMMAND_F_Y_BASE 0xff205340
#define HPS_0_ARM_A9_1_COMMAND_F_Y_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_F_Y_END 0xff20534f
#define HPS_0_ARM_A9_1_COMMAND_F_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_Y_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_F_Y_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_F_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_F_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_F_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_Y_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_F_Y_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_F_Y_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_F_Y_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_F_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_Y_RESET_VALUE 0

/*
 * Macros for device 'command_f_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_F_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_F_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_F_Z_COMPONENT_NAME command_f_z
#define HPS_0_ARM_A9_1_COMMAND_F_Z_BASE 0xff205360
#define HPS_0_ARM_A9_1_COMMAND_F_Z_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_F_Z_END 0xff20536f
#define HPS_0_ARM_A9_1_COMMAND_F_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_Z_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_F_Z_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_F_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_F_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_F_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_Z_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_F_Z_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_F_Z_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_F_Z_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_F_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_Z_RESET_VALUE 0

/*
 * Macros for device 'command_f_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_F_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_F_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_F_E0_COMPONENT_NAME command_f_e0
#define HPS_0_ARM_A9_1_COMMAND_F_E0_BASE 0xff205380
#define HPS_0_ARM_A9_1_COMMAND_F_E0_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_F_E0_END 0xff20538f
#define HPS_0_ARM_A9_1_COMMAND_F_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_E0_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_F_E0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_F_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_F_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_F_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_E0_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_F_E0_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_F_E0_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_F_E0_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_F_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_E0_RESET_VALUE 0

/*
 * Macros for device 'command_f_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_COMMAND_F_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_COMMAND_F_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_COMMAND_F_E1_COMPONENT_NAME command_f_e1
#define HPS_0_ARM_A9_1_COMMAND_F_E1_BASE 0xff2053a0
#define HPS_0_ARM_A9_1_COMMAND_F_E1_SPAN 16
#define HPS_0_ARM_A9_1_COMMAND_F_E1_END 0xff2053af
#define HPS_0_ARM_A9_1_COMMAND_F_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_COMMAND_F_E1_CAPTURE 0
#define HPS_0_ARM_A9_1_COMMAND_F_E1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_COMMAND_F_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_COMMAND_F_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_COMMAND_F_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_E1_FREQ 50000000
#define HPS_0_ARM_A9_1_COMMAND_F_E1_HAS_IN 0
#define HPS_0_ARM_A9_1_COMMAND_F_E1_HAS_OUT 1
#define HPS_0_ARM_A9_1_COMMAND_F_E1_HAS_TRI 0
#define HPS_0_ARM_A9_1_COMMAND_F_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_COMMAND_F_E1_RESET_VALUE 0

/*
 * Macros for device 'temp_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TEMP_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TEMP_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TEMP_0_COMPONENT_NAME temp_0
#define HPS_0_ARM_A9_1_TEMP_0_BASE 0xff206000
#define HPS_0_ARM_A9_1_TEMP_0_SPAN 16
#define HPS_0_ARM_A9_1_TEMP_0_END 0xff20600f
#define HPS_0_ARM_A9_1_TEMP_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TEMP_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TEMP_0_CAPTURE 0
#define HPS_0_ARM_A9_1_TEMP_0_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_TEMP_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TEMP_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TEMP_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TEMP_0_FREQ 50000000
#define HPS_0_ARM_A9_1_TEMP_0_HAS_IN 1
#define HPS_0_ARM_A9_1_TEMP_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_TEMP_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_TEMP_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TEMP_0_RESET_VALUE 0

/*
 * Macros for device 'temp_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TEMP_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TEMP_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TEMP_1_COMPONENT_NAME temp_1
#define HPS_0_ARM_A9_1_TEMP_1_BASE 0xff206020
#define HPS_0_ARM_A9_1_TEMP_1_SPAN 16
#define HPS_0_ARM_A9_1_TEMP_1_END 0xff20602f
#define HPS_0_ARM_A9_1_TEMP_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TEMP_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TEMP_1_CAPTURE 0
#define HPS_0_ARM_A9_1_TEMP_1_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_TEMP_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TEMP_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TEMP_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TEMP_1_FREQ 50000000
#define HPS_0_ARM_A9_1_TEMP_1_HAS_IN 1
#define HPS_0_ARM_A9_1_TEMP_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_TEMP_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_TEMP_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TEMP_1_RESET_VALUE 0

/*
 * Macros for device 'temp_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TEMP_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TEMP_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TEMP_2_COMPONENT_NAME temp_2
#define HPS_0_ARM_A9_1_TEMP_2_BASE 0xff206040
#define HPS_0_ARM_A9_1_TEMP_2_SPAN 16
#define HPS_0_ARM_A9_1_TEMP_2_END 0xff20604f
#define HPS_0_ARM_A9_1_TEMP_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TEMP_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TEMP_2_CAPTURE 0
#define HPS_0_ARM_A9_1_TEMP_2_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_TEMP_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TEMP_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TEMP_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TEMP_2_FREQ 50000000
#define HPS_0_ARM_A9_1_TEMP_2_HAS_IN 1
#define HPS_0_ARM_A9_1_TEMP_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_TEMP_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_TEMP_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TEMP_2_RESET_VALUE 0

/*
 * Macros for device 'position_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_POSITION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_POSITION_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_POSITION_X_COMPONENT_NAME position_x
#define HPS_0_ARM_A9_1_POSITION_X_BASE 0xff206060
#define HPS_0_ARM_A9_1_POSITION_X_SPAN 16
#define HPS_0_ARM_A9_1_POSITION_X_END 0xff20606f
#define HPS_0_ARM_A9_1_POSITION_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_X_CAPTURE 0
#define HPS_0_ARM_A9_1_POSITION_X_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_POSITION_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_POSITION_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_POSITION_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_X_FREQ 50000000
#define HPS_0_ARM_A9_1_POSITION_X_HAS_IN 1
#define HPS_0_ARM_A9_1_POSITION_X_HAS_OUT 0
#define HPS_0_ARM_A9_1_POSITION_X_HAS_TRI 0
#define HPS_0_ARM_A9_1_POSITION_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_X_RESET_VALUE 0

/*
 * Macros for device 'position_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_POSITION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_POSITION_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_POSITION_Y_COMPONENT_NAME position_y
#define HPS_0_ARM_A9_1_POSITION_Y_BASE 0xff206080
#define HPS_0_ARM_A9_1_POSITION_Y_SPAN 16
#define HPS_0_ARM_A9_1_POSITION_Y_END 0xff20608f
#define HPS_0_ARM_A9_1_POSITION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_Y_CAPTURE 0
#define HPS_0_ARM_A9_1_POSITION_Y_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_POSITION_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_POSITION_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_POSITION_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_Y_FREQ 50000000
#define HPS_0_ARM_A9_1_POSITION_Y_HAS_IN 1
#define HPS_0_ARM_A9_1_POSITION_Y_HAS_OUT 0
#define HPS_0_ARM_A9_1_POSITION_Y_HAS_TRI 0
#define HPS_0_ARM_A9_1_POSITION_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_Y_RESET_VALUE 0

/*
 * Macros for device 'position_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_POSITION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_POSITION_Z_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_POSITION_Z_COMPONENT_NAME position_z
#define HPS_0_ARM_A9_1_POSITION_Z_BASE 0xff2060a0
#define HPS_0_ARM_A9_1_POSITION_Z_SPAN 16
#define HPS_0_ARM_A9_1_POSITION_Z_END 0xff2060af
#define HPS_0_ARM_A9_1_POSITION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_Z_CAPTURE 0
#define HPS_0_ARM_A9_1_POSITION_Z_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_POSITION_Z_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_POSITION_Z_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_POSITION_Z_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_Z_FREQ 50000000
#define HPS_0_ARM_A9_1_POSITION_Z_HAS_IN 1
#define HPS_0_ARM_A9_1_POSITION_Z_HAS_OUT 0
#define HPS_0_ARM_A9_1_POSITION_Z_HAS_TRI 0
#define HPS_0_ARM_A9_1_POSITION_Z_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_Z_RESET_VALUE 0

/*
 * Macros for device 'position_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_POSITION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_POSITION_E0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_POSITION_E0_COMPONENT_NAME position_e0
#define HPS_0_ARM_A9_1_POSITION_E0_BASE 0xff2060c0
#define HPS_0_ARM_A9_1_POSITION_E0_SPAN 16
#define HPS_0_ARM_A9_1_POSITION_E0_END 0xff2060cf
#define HPS_0_ARM_A9_1_POSITION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_E0_CAPTURE 0
#define HPS_0_ARM_A9_1_POSITION_E0_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_POSITION_E0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_POSITION_E0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_POSITION_E0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_E0_FREQ 50000000
#define HPS_0_ARM_A9_1_POSITION_E0_HAS_IN 1
#define HPS_0_ARM_A9_1_POSITION_E0_HAS_OUT 0
#define HPS_0_ARM_A9_1_POSITION_E0_HAS_TRI 0
#define HPS_0_ARM_A9_1_POSITION_E0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_E0_RESET_VALUE 0

/*
 * Macros for device 'position_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_POSITION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_POSITION_E1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_POSITION_E1_COMPONENT_NAME position_e1
#define HPS_0_ARM_A9_1_POSITION_E1_BASE 0xff2060e0
#define HPS_0_ARM_A9_1_POSITION_E1_SPAN 16
#define HPS_0_ARM_A9_1_POSITION_E1_END 0xff2060ef
#define HPS_0_ARM_A9_1_POSITION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_E1_CAPTURE 0
#define HPS_0_ARM_A9_1_POSITION_E1_DATA_WIDTH 12
#define HPS_0_ARM_A9_1_POSITION_E1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_POSITION_E1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_POSITION_E1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_E1_FREQ 50000000
#define HPS_0_ARM_A9_1_POSITION_E1_HAS_IN 1
#define HPS_0_ARM_A9_1_POSITION_E1_HAS_OUT 0
#define HPS_0_ARM_A9_1_POSITION_E1_HAS_TRI 0
#define HPS_0_ARM_A9_1_POSITION_E1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_E1_RESET_VALUE 0

/*
 * Macros for device 'position_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_POSITION_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_POSITION_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_POSITION_TYPE_COMPONENT_NAME position_type
#define HPS_0_ARM_A9_1_POSITION_TYPE_BASE 0xff206100
#define HPS_0_ARM_A9_1_POSITION_TYPE_SPAN 16
#define HPS_0_ARM_A9_1_POSITION_TYPE_END 0xff20610f
#define HPS_0_ARM_A9_1_POSITION_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_TYPE_CAPTURE 0
#define HPS_0_ARM_A9_1_POSITION_TYPE_DATA_WIDTH 1
#define HPS_0_ARM_A9_1_POSITION_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_POSITION_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_POSITION_TYPE_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_TYPE_FREQ 50000000
#define HPS_0_ARM_A9_1_POSITION_TYPE_HAS_IN 1
#define HPS_0_ARM_A9_1_POSITION_TYPE_HAS_OUT 0
#define HPS_0_ARM_A9_1_POSITION_TYPE_HAS_TRI 0
#define HPS_0_ARM_A9_1_POSITION_TYPE_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_TYPE_RESET_VALUE 0

/*
 * Macros for device 'position_extruder_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_COMPONENT_NAME position_extruder_type
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_BASE 0xff206120
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_SPAN 16
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_END 0xff20612f
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_CAPTURE 0
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_DATA_WIDTH 1
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_FREQ 50000000
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_HAS_IN 1
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_HAS_OUT 0
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_HAS_TRI 0
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_POSITION_EXTRUDER_TYPE_RESET_VALUE 0

/*
 * Macros for device 'params_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_X_0_COMPONENT_NAME params_x_0
#define HPS_0_ARM_A9_1_PARAMS_X_0_BASE 0xff207000
#define HPS_0_ARM_A9_1_PARAMS_X_0_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_X_0_END 0xff20700f
#define HPS_0_ARM_A9_1_PARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_0_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_X_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_X_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_0_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_X_0_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_X_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_X_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_X_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'params_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_X_1_COMPONENT_NAME params_x_1
#define HPS_0_ARM_A9_1_PARAMS_X_1_BASE 0xff207020
#define HPS_0_ARM_A9_1_PARAMS_X_1_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_X_1_END 0xff20702f
#define HPS_0_ARM_A9_1_PARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_1_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_X_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_X_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_1_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_X_1_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_X_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_X_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_X_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'params_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_X_2_COMPONENT_NAME params_x_2
#define HPS_0_ARM_A9_1_PARAMS_X_2_BASE 0xff207040
#define HPS_0_ARM_A9_1_PARAMS_X_2_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_X_2_END 0xff20704f
#define HPS_0_ARM_A9_1_PARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_2_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_X_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_X_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_2_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_X_2_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_X_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_X_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_X_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'params_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_X_3_COMPONENT_NAME params_x_3
#define HPS_0_ARM_A9_1_PARAMS_X_3_BASE 0xff207060
#define HPS_0_ARM_A9_1_PARAMS_X_3_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_X_3_END 0xff20706f
#define HPS_0_ARM_A9_1_PARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_3_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_X_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_X_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_3_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_X_3_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_X_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_X_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_X_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'params_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_X_4_COMPONENT_NAME params_x_4
#define HPS_0_ARM_A9_1_PARAMS_X_4_BASE 0xff207080
#define HPS_0_ARM_A9_1_PARAMS_X_4_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_X_4_END 0xff20708f
#define HPS_0_ARM_A9_1_PARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_X_4_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_X_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_X_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_X_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_4_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_X_4_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_X_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_X_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_X_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'params_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Y_0_COMPONENT_NAME params_y_0
#define HPS_0_ARM_A9_1_PARAMS_Y_0_BASE 0xff2070a0
#define HPS_0_ARM_A9_1_PARAMS_Y_0_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Y_0_END 0xff2070af
#define HPS_0_ARM_A9_1_PARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_0_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_0_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Y_0_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Y_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Y_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Y_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'params_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Y_1_COMPONENT_NAME params_y_1
#define HPS_0_ARM_A9_1_PARAMS_Y_1_BASE 0xff2070c0
#define HPS_0_ARM_A9_1_PARAMS_Y_1_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Y_1_END 0xff2070cf
#define HPS_0_ARM_A9_1_PARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_1_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_1_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Y_1_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Y_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Y_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Y_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'params_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Y_2_COMPONENT_NAME params_y_2
#define HPS_0_ARM_A9_1_PARAMS_Y_2_BASE 0xff2070e0
#define HPS_0_ARM_A9_1_PARAMS_Y_2_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Y_2_END 0xff2070ef
#define HPS_0_ARM_A9_1_PARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_2_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_2_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Y_2_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Y_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Y_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Y_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'params_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Y_3_COMPONENT_NAME params_y_3
#define HPS_0_ARM_A9_1_PARAMS_Y_3_BASE 0xff207100
#define HPS_0_ARM_A9_1_PARAMS_Y_3_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Y_3_END 0xff20710f
#define HPS_0_ARM_A9_1_PARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_3_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_3_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Y_3_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Y_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Y_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Y_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'params_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Y_4_COMPONENT_NAME params_y_4
#define HPS_0_ARM_A9_1_PARAMS_Y_4_BASE 0xff207120
#define HPS_0_ARM_A9_1_PARAMS_Y_4_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Y_4_END 0xff20712f
#define HPS_0_ARM_A9_1_PARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Y_4_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Y_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_4_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Y_4_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Y_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Y_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Y_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'params_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Z_0_COMPONENT_NAME params_z_0
#define HPS_0_ARM_A9_1_PARAMS_Z_0_BASE 0xff207140
#define HPS_0_ARM_A9_1_PARAMS_Z_0_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Z_0_END 0xff20714f
#define HPS_0_ARM_A9_1_PARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_0_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_0_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Z_0_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Z_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Z_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Z_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'params_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Z_1_COMPONENT_NAME params_z_1
#define HPS_0_ARM_A9_1_PARAMS_Z_1_BASE 0xff207160
#define HPS_0_ARM_A9_1_PARAMS_Z_1_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Z_1_END 0xff20716f
#define HPS_0_ARM_A9_1_PARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_1_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_1_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Z_1_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Z_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Z_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Z_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'params_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Z_2_COMPONENT_NAME params_z_2
#define HPS_0_ARM_A9_1_PARAMS_Z_2_BASE 0xff207180
#define HPS_0_ARM_A9_1_PARAMS_Z_2_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Z_2_END 0xff20718f
#define HPS_0_ARM_A9_1_PARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_2_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_2_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Z_2_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Z_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Z_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Z_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'params_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Z_3_COMPONENT_NAME params_z_3
#define HPS_0_ARM_A9_1_PARAMS_Z_3_BASE 0xff2071a0
#define HPS_0_ARM_A9_1_PARAMS_Z_3_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Z_3_END 0xff2071af
#define HPS_0_ARM_A9_1_PARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_3_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_3_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Z_3_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Z_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Z_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Z_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'params_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_Z_4_COMPONENT_NAME params_z_4
#define HPS_0_ARM_A9_1_PARAMS_Z_4_BASE 0xff2071c0
#define HPS_0_ARM_A9_1_PARAMS_Z_4_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_Z_4_END 0xff2071cf
#define HPS_0_ARM_A9_1_PARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_Z_4_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_Z_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_4_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_Z_4_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_Z_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_Z_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_Z_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'params_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E0_0_COMPONENT_NAME params_e0_0
#define HPS_0_ARM_A9_1_PARAMS_E0_0_BASE 0xff2071e0
#define HPS_0_ARM_A9_1_PARAMS_E0_0_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E0_0_END 0xff2071ef
#define HPS_0_ARM_A9_1_PARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_0_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_0_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E0_0_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E0_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E0_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E0_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'params_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E0_1_COMPONENT_NAME params_e0_1
#define HPS_0_ARM_A9_1_PARAMS_E0_1_BASE 0xff207200
#define HPS_0_ARM_A9_1_PARAMS_E0_1_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E0_1_END 0xff20720f
#define HPS_0_ARM_A9_1_PARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_1_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_1_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E0_1_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E0_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E0_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E0_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'params_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E0_2_COMPONENT_NAME params_e0_2
#define HPS_0_ARM_A9_1_PARAMS_E0_2_BASE 0xff207220
#define HPS_0_ARM_A9_1_PARAMS_E0_2_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E0_2_END 0xff20722f
#define HPS_0_ARM_A9_1_PARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_2_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_2_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E0_2_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E0_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E0_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E0_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'params_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E0_3_COMPONENT_NAME params_e0_3
#define HPS_0_ARM_A9_1_PARAMS_E0_3_BASE 0xff207240
#define HPS_0_ARM_A9_1_PARAMS_E0_3_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E0_3_END 0xff20724f
#define HPS_0_ARM_A9_1_PARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_3_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_3_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E0_3_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E0_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E0_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E0_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'params_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E0_4_COMPONENT_NAME params_e0_4
#define HPS_0_ARM_A9_1_PARAMS_E0_4_BASE 0xff207260
#define HPS_0_ARM_A9_1_PARAMS_E0_4_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E0_4_END 0xff20726f
#define HPS_0_ARM_A9_1_PARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E0_4_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E0_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_4_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E0_4_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E0_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E0_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E0_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'params_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E1_0_COMPONENT_NAME params_e1_0
#define HPS_0_ARM_A9_1_PARAMS_E1_0_BASE 0xff207280
#define HPS_0_ARM_A9_1_PARAMS_E1_0_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E1_0_END 0xff20728f
#define HPS_0_ARM_A9_1_PARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_0_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_0_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E1_0_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E1_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E1_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'params_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E1_1_COMPONENT_NAME params_e1_1
#define HPS_0_ARM_A9_1_PARAMS_E1_1_BASE 0xff2072a0
#define HPS_0_ARM_A9_1_PARAMS_E1_1_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E1_1_END 0xff2072af
#define HPS_0_ARM_A9_1_PARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_1_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_1_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E1_1_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E1_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E1_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E1_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'params_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E1_2_COMPONENT_NAME params_e1_2
#define HPS_0_ARM_A9_1_PARAMS_E1_2_BASE 0xff2072c0
#define HPS_0_ARM_A9_1_PARAMS_E1_2_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E1_2_END 0xff2072cf
#define HPS_0_ARM_A9_1_PARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_2_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_2_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E1_2_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E1_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E1_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E1_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'params_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E1_3_COMPONENT_NAME params_e1_3
#define HPS_0_ARM_A9_1_PARAMS_E1_3_BASE 0xff2072e0
#define HPS_0_ARM_A9_1_PARAMS_E1_3_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E1_3_END 0xff2072ef
#define HPS_0_ARM_A9_1_PARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_3_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_3_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E1_3_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E1_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E1_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E1_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'params_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PARAMS_E1_4_COMPONENT_NAME params_e1_4
#define HPS_0_ARM_A9_1_PARAMS_E1_4_BASE 0xff207300
#define HPS_0_ARM_A9_1_PARAMS_E1_4_SPAN 16
#define HPS_0_ARM_A9_1_PARAMS_E1_4_END 0xff20730f
#define HPS_0_ARM_A9_1_PARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PARAMS_E1_4_CAPTURE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PARAMS_E1_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_4_FREQ 50000000
#define HPS_0_ARM_A9_1_PARAMS_E1_4_HAS_IN 1
#define HPS_0_ARM_A9_1_PARAMS_E1_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_PARAMS_E1_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_PARAMS_E1_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'timing_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_X_0_COMPONENT_NAME timing_x_0
#define HPS_0_ARM_A9_1_TIMING_X_0_BASE 0xff207320
#define HPS_0_ARM_A9_1_TIMING_X_0_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_X_0_END 0xff20732f
#define HPS_0_ARM_A9_1_TIMING_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_X_0_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_X_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_X_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_X_0_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_X_0_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_X_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_X_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_X_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_X_0_RESET_VALUE 0

/*
 * Macros for device 'timing_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_X_1_COMPONENT_NAME timing_x_1
#define HPS_0_ARM_A9_1_TIMING_X_1_BASE 0xff207340
#define HPS_0_ARM_A9_1_TIMING_X_1_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_X_1_END 0xff20734f
#define HPS_0_ARM_A9_1_TIMING_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_X_1_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_X_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_X_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_X_1_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_X_1_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_X_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_X_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_X_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_X_1_RESET_VALUE 0

/*
 * Macros for device 'timing_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_X_2_COMPONENT_NAME timing_x_2
#define HPS_0_ARM_A9_1_TIMING_X_2_BASE 0xff207360
#define HPS_0_ARM_A9_1_TIMING_X_2_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_X_2_END 0xff20736f
#define HPS_0_ARM_A9_1_TIMING_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_X_2_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_X_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_X_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_X_2_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_X_2_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_X_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_X_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_X_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_X_2_RESET_VALUE 0

/*
 * Macros for device 'timing_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_X_3_COMPONENT_NAME timing_x_3
#define HPS_0_ARM_A9_1_TIMING_X_3_BASE 0xff207380
#define HPS_0_ARM_A9_1_TIMING_X_3_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_X_3_END 0xff20738f
#define HPS_0_ARM_A9_1_TIMING_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_X_3_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_X_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_X_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_X_3_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_X_3_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_X_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_X_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_X_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_X_3_RESET_VALUE 0

/*
 * Macros for device 'timing_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_Y_0_COMPONENT_NAME timing_y_0
#define HPS_0_ARM_A9_1_TIMING_Y_0_BASE 0xff2073a0
#define HPS_0_ARM_A9_1_TIMING_Y_0_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_Y_0_END 0xff2073af
#define HPS_0_ARM_A9_1_TIMING_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Y_0_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_Y_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_Y_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Y_0_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_Y_0_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_Y_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_Y_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_Y_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Y_0_RESET_VALUE 0

/*
 * Macros for device 'timing_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_Y_1_COMPONENT_NAME timing_y_1
#define HPS_0_ARM_A9_1_TIMING_Y_1_BASE 0xff2073c0
#define HPS_0_ARM_A9_1_TIMING_Y_1_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_Y_1_END 0xff2073cf
#define HPS_0_ARM_A9_1_TIMING_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Y_1_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_Y_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_Y_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Y_1_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_Y_1_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_Y_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_Y_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_Y_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Y_1_RESET_VALUE 0

/*
 * Macros for device 'timing_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_Y_2_COMPONENT_NAME timing_y_2
#define HPS_0_ARM_A9_1_TIMING_Y_2_BASE 0xff2073e0
#define HPS_0_ARM_A9_1_TIMING_Y_2_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_Y_2_END 0xff2073ef
#define HPS_0_ARM_A9_1_TIMING_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Y_2_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_Y_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_Y_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Y_2_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_Y_2_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_Y_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_Y_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_Y_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Y_2_RESET_VALUE 0

/*
 * Macros for device 'timing_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_Y_3_COMPONENT_NAME timing_y_3
#define HPS_0_ARM_A9_1_TIMING_Y_3_BASE 0xff207400
#define HPS_0_ARM_A9_1_TIMING_Y_3_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_Y_3_END 0xff20740f
#define HPS_0_ARM_A9_1_TIMING_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Y_3_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_Y_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_Y_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Y_3_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_Y_3_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_Y_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_Y_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_Y_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Y_3_RESET_VALUE 0

/*
 * Macros for device 'timing_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_Z_0_COMPONENT_NAME timing_z_0
#define HPS_0_ARM_A9_1_TIMING_Z_0_BASE 0xff207420
#define HPS_0_ARM_A9_1_TIMING_Z_0_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_Z_0_END 0xff20742f
#define HPS_0_ARM_A9_1_TIMING_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Z_0_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_Z_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_Z_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Z_0_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_Z_0_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_Z_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_Z_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_Z_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Z_0_RESET_VALUE 0

/*
 * Macros for device 'timing_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_Z_1_COMPONENT_NAME timing_z_1
#define HPS_0_ARM_A9_1_TIMING_Z_1_BASE 0xff207440
#define HPS_0_ARM_A9_1_TIMING_Z_1_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_Z_1_END 0xff20744f
#define HPS_0_ARM_A9_1_TIMING_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Z_1_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_Z_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_Z_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Z_1_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_Z_1_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_Z_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_Z_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_Z_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Z_1_RESET_VALUE 0

/*
 * Macros for device 'timing_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_Z_2_COMPONENT_NAME timing_z_2
#define HPS_0_ARM_A9_1_TIMING_Z_2_BASE 0xff207460
#define HPS_0_ARM_A9_1_TIMING_Z_2_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_Z_2_END 0xff20746f
#define HPS_0_ARM_A9_1_TIMING_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Z_2_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_Z_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_Z_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Z_2_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_Z_2_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_Z_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_Z_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_Z_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Z_2_RESET_VALUE 0

/*
 * Macros for device 'timing_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_Z_3_COMPONENT_NAME timing_z_3
#define HPS_0_ARM_A9_1_TIMING_Z_3_BASE 0xff207480
#define HPS_0_ARM_A9_1_TIMING_Z_3_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_Z_3_END 0xff20748f
#define HPS_0_ARM_A9_1_TIMING_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_Z_3_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_Z_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_Z_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Z_3_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_Z_3_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_Z_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_Z_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_Z_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_Z_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_E0_0_COMPONENT_NAME timing_e0_0
#define HPS_0_ARM_A9_1_TIMING_E0_0_BASE 0xff2074a0
#define HPS_0_ARM_A9_1_TIMING_E0_0_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_E0_0_END 0xff2074af
#define HPS_0_ARM_A9_1_TIMING_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E0_0_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_E0_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_E0_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E0_0_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_E0_0_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_E0_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_E0_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_E0_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E0_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_E0_1_COMPONENT_NAME timing_e0_1
#define HPS_0_ARM_A9_1_TIMING_E0_1_BASE 0xff2074c0
#define HPS_0_ARM_A9_1_TIMING_E0_1_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_E0_1_END 0xff2074cf
#define HPS_0_ARM_A9_1_TIMING_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E0_1_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_E0_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_E0_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E0_1_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_E0_1_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_E0_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_E0_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_E0_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E0_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_E0_2_COMPONENT_NAME timing_e0_2
#define HPS_0_ARM_A9_1_TIMING_E0_2_BASE 0xff2074e0
#define HPS_0_ARM_A9_1_TIMING_E0_2_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_E0_2_END 0xff2074ef
#define HPS_0_ARM_A9_1_TIMING_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E0_2_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_E0_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_E0_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E0_2_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_E0_2_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_E0_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_E0_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_E0_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E0_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_E0_3_COMPONENT_NAME timing_e0_3
#define HPS_0_ARM_A9_1_TIMING_E0_3_BASE 0xff207500
#define HPS_0_ARM_A9_1_TIMING_E0_3_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_E0_3_END 0xff20750f
#define HPS_0_ARM_A9_1_TIMING_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E0_3_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_E0_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_E0_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E0_3_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_E0_3_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_E0_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_E0_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_E0_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E0_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_E1_0_COMPONENT_NAME timing_e1_0
#define HPS_0_ARM_A9_1_TIMING_E1_0_BASE 0xff207520
#define HPS_0_ARM_A9_1_TIMING_E1_0_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_E1_0_END 0xff20752f
#define HPS_0_ARM_A9_1_TIMING_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E1_0_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_E1_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_E1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E1_0_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_E1_0_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_E1_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_E1_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_E1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E1_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_E1_1_COMPONENT_NAME timing_e1_1
#define HPS_0_ARM_A9_1_TIMING_E1_1_BASE 0xff207540
#define HPS_0_ARM_A9_1_TIMING_E1_1_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_E1_1_END 0xff20754f
#define HPS_0_ARM_A9_1_TIMING_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E1_1_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_E1_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_E1_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E1_1_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_E1_1_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_E1_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_E1_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_E1_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E1_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_E1_2_COMPONENT_NAME timing_e1_2
#define HPS_0_ARM_A9_1_TIMING_E1_2_BASE 0xff207560
#define HPS_0_ARM_A9_1_TIMING_E1_2_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_E1_2_END 0xff20756f
#define HPS_0_ARM_A9_1_TIMING_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E1_2_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_E1_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_E1_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E1_2_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_E1_2_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_E1_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_E1_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_E1_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E1_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TIMING_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TIMING_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TIMING_E1_3_COMPONENT_NAME timing_e1_3
#define HPS_0_ARM_A9_1_TIMING_E1_3_BASE 0xff207580
#define HPS_0_ARM_A9_1_TIMING_E1_3_SPAN 16
#define HPS_0_ARM_A9_1_TIMING_E1_3_END 0xff20758f
#define HPS_0_ARM_A9_1_TIMING_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TIMING_E1_3_CAPTURE 0
#define HPS_0_ARM_A9_1_TIMING_E1_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TIMING_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TIMING_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TIMING_E1_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E1_3_FREQ 50000000
#define HPS_0_ARM_A9_1_TIMING_E1_3_HAS_IN 1
#define HPS_0_ARM_A9_1_TIMING_E1_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_TIMING_E1_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_TIMING_E1_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TIMING_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_COMPONENT_NAME new_rparams_x_0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_BASE 0xff2075a0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_END 0xff2075af
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_COMPONENT_NAME new_rparams_x_1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_BASE 0xff2075c0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_END 0xff2075cf
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_COMPONENT_NAME new_rparams_x_2
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_BASE 0xff2075e0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_END 0xff2075ef
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_COMPONENT_NAME new_rparams_x_3
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_BASE 0xff207600
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_END 0xff20760f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_COMPONENT_NAME new_rparams_x_4
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_BASE 0xff207620
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_END 0xff20762f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_COMPONENT_NAME new_rparams_y_0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_BASE 0xff207640
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_END 0xff20764f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_COMPONENT_NAME new_rparams_y_1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_BASE 0xff207660
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_END 0xff20766f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_COMPONENT_NAME new_rparams_y_2
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_BASE 0xff207680
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_END 0xff20768f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_COMPONENT_NAME new_rparams_y_3
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_BASE 0xff2076a0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_END 0xff2076af
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_COMPONENT_NAME new_rparams_y_4
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_BASE 0xff2076c0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_END 0xff2076cf
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_COMPONENT_NAME new_rparams_z_0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_BASE 0xff2076e0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_END 0xff2076ef
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_COMPONENT_NAME new_rparams_z_1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_BASE 0xff207700
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_END 0xff20770f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_COMPONENT_NAME new_rparams_z_2
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_BASE 0xff207720
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_END 0xff20772f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_COMPONENT_NAME new_rparams_z_3
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_BASE 0xff207740
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_END 0xff20774f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_COMPONENT_NAME new_rparams_z_4
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_BASE 0xff207760
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_END 0xff20776f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_COMPONENT_NAME new_rparams_e0_0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_BASE 0xff207780
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_END 0xff20778f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_COMPONENT_NAME new_rparams_e0_1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_BASE 0xff2077a0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_END 0xff2077af
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_COMPONENT_NAME new_rparams_e0_2
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_BASE 0xff2077c0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_END 0xff2077cf
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_COMPONENT_NAME new_rparams_e0_3
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_BASE 0xff2077e0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_END 0xff2077ef
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_COMPONENT_NAME new_rparams_e0_4
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_BASE 0xff207800
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_END 0xff20780f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_COMPONENT_NAME new_rparams_e1_0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_BASE 0xff207820
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_END 0xff20782f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_COMPONENT_NAME new_rparams_e1_1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_BASE 0xff207840
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_END 0xff20784f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_COMPONENT_NAME new_rparams_e1_2
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_BASE 0xff207860
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_END 0xff20786f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_COMPONENT_NAME new_rparams_e1_3
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_BASE 0xff207880
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_END 0xff20788f
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_COMPONENT_NAME new_rparams_e1_4
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_BASE 0xff2078a0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_SPAN 16
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_END 0xff2078af
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_CAPTURE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_FREQ 50000000
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_HAS_IN 1
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_NEW_RPARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'step_x_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_STEP_X_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_STEP_X_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_STEP_X_NOW_COMPONENT_NAME step_x_now
#define HPS_0_ARM_A9_1_STEP_X_NOW_BASE 0xff207900
#define HPS_0_ARM_A9_1_STEP_X_NOW_SPAN 16
#define HPS_0_ARM_A9_1_STEP_X_NOW_END 0xff20790f
#define HPS_0_ARM_A9_1_STEP_X_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_X_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_X_NOW_CAPTURE 0
#define HPS_0_ARM_A9_1_STEP_X_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_STEP_X_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_STEP_X_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_STEP_X_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_X_NOW_FREQ 50000000
#define HPS_0_ARM_A9_1_STEP_X_NOW_HAS_IN 1
#define HPS_0_ARM_A9_1_STEP_X_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_1_STEP_X_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_1_STEP_X_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_X_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_y_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_STEP_Y_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_STEP_Y_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_STEP_Y_NOW_COMPONENT_NAME step_y_now
#define HPS_0_ARM_A9_1_STEP_Y_NOW_BASE 0xff207920
#define HPS_0_ARM_A9_1_STEP_Y_NOW_SPAN 16
#define HPS_0_ARM_A9_1_STEP_Y_NOW_END 0xff20792f
#define HPS_0_ARM_A9_1_STEP_Y_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_Y_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_Y_NOW_CAPTURE 0
#define HPS_0_ARM_A9_1_STEP_Y_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_STEP_Y_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_STEP_Y_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_STEP_Y_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_Y_NOW_FREQ 50000000
#define HPS_0_ARM_A9_1_STEP_Y_NOW_HAS_IN 1
#define HPS_0_ARM_A9_1_STEP_Y_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_1_STEP_Y_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_1_STEP_Y_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_Y_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_z_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_STEP_Z_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_STEP_Z_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_STEP_Z_NOW_COMPONENT_NAME step_z_now
#define HPS_0_ARM_A9_1_STEP_Z_NOW_BASE 0xff207940
#define HPS_0_ARM_A9_1_STEP_Z_NOW_SPAN 16
#define HPS_0_ARM_A9_1_STEP_Z_NOW_END 0xff20794f
#define HPS_0_ARM_A9_1_STEP_Z_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_Z_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_Z_NOW_CAPTURE 0
#define HPS_0_ARM_A9_1_STEP_Z_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_STEP_Z_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_STEP_Z_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_STEP_Z_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_Z_NOW_FREQ 50000000
#define HPS_0_ARM_A9_1_STEP_Z_NOW_HAS_IN 1
#define HPS_0_ARM_A9_1_STEP_Z_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_1_STEP_Z_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_1_STEP_Z_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_Z_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e0_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_STEP_E0_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_STEP_E0_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_STEP_E0_NOW_COMPONENT_NAME step_e0_now
#define HPS_0_ARM_A9_1_STEP_E0_NOW_BASE 0xff207960
#define HPS_0_ARM_A9_1_STEP_E0_NOW_SPAN 16
#define HPS_0_ARM_A9_1_STEP_E0_NOW_END 0xff20796f
#define HPS_0_ARM_A9_1_STEP_E0_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_E0_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_E0_NOW_CAPTURE 0
#define HPS_0_ARM_A9_1_STEP_E0_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_STEP_E0_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_STEP_E0_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_STEP_E0_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_E0_NOW_FREQ 50000000
#define HPS_0_ARM_A9_1_STEP_E0_NOW_HAS_IN 1
#define HPS_0_ARM_A9_1_STEP_E0_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_1_STEP_E0_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_1_STEP_E0_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_E0_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e1_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_STEP_E1_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_STEP_E1_NOW_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_STEP_E1_NOW_COMPONENT_NAME step_e1_now
#define HPS_0_ARM_A9_1_STEP_E1_NOW_BASE 0xff207980
#define HPS_0_ARM_A9_1_STEP_E1_NOW_SPAN 16
#define HPS_0_ARM_A9_1_STEP_E1_NOW_END 0xff20798f
#define HPS_0_ARM_A9_1_STEP_E1_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_E1_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_STEP_E1_NOW_CAPTURE 0
#define HPS_0_ARM_A9_1_STEP_E1_NOW_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_STEP_E1_NOW_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_STEP_E1_NOW_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_STEP_E1_NOW_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_E1_NOW_FREQ 50000000
#define HPS_0_ARM_A9_1_STEP_E1_NOW_HAS_IN 1
#define HPS_0_ARM_A9_1_STEP_E1_NOW_HAS_OUT 0
#define HPS_0_ARM_A9_1_STEP_E1_NOW_HAS_TRI 0
#define HPS_0_ARM_A9_1_STEP_E1_NOW_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_STEP_E1_NOW_RESET_VALUE 0

/*
 * Macros for device 'max_params_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MAX_PARAMS_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_COMPONENT_NAME max_params_0
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_BASE 0xff2079a0
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_SPAN 16
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_END 0xff2079af
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_CAPTURE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_FREQ 50000000
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_HAS_IN 1
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_0_RESET_VALUE 0

/*
 * Macros for device 'max_params_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MAX_PARAMS_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_COMPONENT_NAME max_params_1
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_BASE 0xff2079c0
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_SPAN 16
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_END 0xff2079cf
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_CAPTURE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_FREQ 50000000
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_HAS_IN 1
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_1_RESET_VALUE 0

/*
 * Macros for device 'max_params_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MAX_PARAMS_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_COMPONENT_NAME max_params_2
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_BASE 0xff2079e0
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_SPAN 16
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_END 0xff2079ef
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_CAPTURE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_FREQ 50000000
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_HAS_IN 1
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_2_RESET_VALUE 0

/*
 * Macros for device 'max_params_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MAX_PARAMS_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_COMPONENT_NAME max_params_3
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_BASE 0xff207a00
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_SPAN 16
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_END 0xff207a0f
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_CAPTURE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_FREQ 50000000
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_HAS_IN 1
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_3_RESET_VALUE 0

/*
 * Macros for device 'max_params_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MAX_PARAMS_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_COMPONENT_NAME max_params_4
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_BASE 0xff207a20
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_SPAN 16
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_END 0xff207a2f
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_CAPTURE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_FREQ 50000000
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_HAS_IN 1
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_HAS_OUT 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_HAS_TRI 0
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_PARAMS_4_RESET_VALUE 0

/*
 * Macros for device 'max_timing_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MAX_TIMING_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MAX_TIMING_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MAX_TIMING_0_COMPONENT_NAME max_timing_0
#define HPS_0_ARM_A9_1_MAX_TIMING_0_BASE 0xff207a40
#define HPS_0_ARM_A9_1_MAX_TIMING_0_SPAN 16
#define HPS_0_ARM_A9_1_MAX_TIMING_0_END 0xff207a4f
#define HPS_0_ARM_A9_1_MAX_TIMING_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_TIMING_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_TIMING_0_CAPTURE 0
#define HPS_0_ARM_A9_1_MAX_TIMING_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MAX_TIMING_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MAX_TIMING_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MAX_TIMING_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_TIMING_0_FREQ 50000000
#define HPS_0_ARM_A9_1_MAX_TIMING_0_HAS_IN 1
#define HPS_0_ARM_A9_1_MAX_TIMING_0_HAS_OUT 0
#define HPS_0_ARM_A9_1_MAX_TIMING_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_MAX_TIMING_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_TIMING_0_RESET_VALUE 0

/*
 * Macros for device 'max_timing_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MAX_TIMING_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MAX_TIMING_1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MAX_TIMING_1_COMPONENT_NAME max_timing_1
#define HPS_0_ARM_A9_1_MAX_TIMING_1_BASE 0xff207a60
#define HPS_0_ARM_A9_1_MAX_TIMING_1_SPAN 16
#define HPS_0_ARM_A9_1_MAX_TIMING_1_END 0xff207a6f
#define HPS_0_ARM_A9_1_MAX_TIMING_1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_TIMING_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_TIMING_1_CAPTURE 0
#define HPS_0_ARM_A9_1_MAX_TIMING_1_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MAX_TIMING_1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MAX_TIMING_1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MAX_TIMING_1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_TIMING_1_FREQ 50000000
#define HPS_0_ARM_A9_1_MAX_TIMING_1_HAS_IN 1
#define HPS_0_ARM_A9_1_MAX_TIMING_1_HAS_OUT 0
#define HPS_0_ARM_A9_1_MAX_TIMING_1_HAS_TRI 0
#define HPS_0_ARM_A9_1_MAX_TIMING_1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_TIMING_1_RESET_VALUE 0

/*
 * Macros for device 'max_timing_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MAX_TIMING_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MAX_TIMING_2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MAX_TIMING_2_COMPONENT_NAME max_timing_2
#define HPS_0_ARM_A9_1_MAX_TIMING_2_BASE 0xff207a80
#define HPS_0_ARM_A9_1_MAX_TIMING_2_SPAN 16
#define HPS_0_ARM_A9_1_MAX_TIMING_2_END 0xff207a8f
#define HPS_0_ARM_A9_1_MAX_TIMING_2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_TIMING_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_TIMING_2_CAPTURE 0
#define HPS_0_ARM_A9_1_MAX_TIMING_2_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MAX_TIMING_2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MAX_TIMING_2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MAX_TIMING_2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_TIMING_2_FREQ 50000000
#define HPS_0_ARM_A9_1_MAX_TIMING_2_HAS_IN 1
#define HPS_0_ARM_A9_1_MAX_TIMING_2_HAS_OUT 0
#define HPS_0_ARM_A9_1_MAX_TIMING_2_HAS_TRI 0
#define HPS_0_ARM_A9_1_MAX_TIMING_2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_TIMING_2_RESET_VALUE 0

/*
 * Macros for device 'max_timing_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MAX_TIMING_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MAX_TIMING_3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MAX_TIMING_3_COMPONENT_NAME max_timing_3
#define HPS_0_ARM_A9_1_MAX_TIMING_3_BASE 0xff207aa0
#define HPS_0_ARM_A9_1_MAX_TIMING_3_SPAN 16
#define HPS_0_ARM_A9_1_MAX_TIMING_3_END 0xff207aaf
#define HPS_0_ARM_A9_1_MAX_TIMING_3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_TIMING_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MAX_TIMING_3_CAPTURE 0
#define HPS_0_ARM_A9_1_MAX_TIMING_3_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MAX_TIMING_3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MAX_TIMING_3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MAX_TIMING_3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_TIMING_3_FREQ 50000000
#define HPS_0_ARM_A9_1_MAX_TIMING_3_HAS_IN 1
#define HPS_0_ARM_A9_1_MAX_TIMING_3_HAS_OUT 0
#define HPS_0_ARM_A9_1_MAX_TIMING_3_HAS_TRI 0
#define HPS_0_ARM_A9_1_MAX_TIMING_3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MAX_TIMING_3_RESET_VALUE 0

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_ILC_COMPONENT_TYPE interrupt_latency_counter
#define HPS_0_ARM_A9_1_ILC_COMPONENT_NAME ILC
#define HPS_0_ARM_A9_1_ILC_BASE 0xff230000
#define HPS_0_ARM_A9_1_ILC_SPAN 256
#define HPS_0_ARM_A9_1_ILC_END 0xff2300ff

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_1_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_1_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_1_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_1_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_1_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_1_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_1_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_1_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_1_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_1_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_1_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_1_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_1_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_1_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_1_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_1_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_1_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_1_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_1_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_1_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_1_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_1_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_1_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_ONLY_MASTER_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_ONLY_MASTER_HPS_0_GMAC0_BASE 0xff700000
#define HPS_ONLY_MASTER_HPS_0_GMAC0_SPAN 8192
#define HPS_ONLY_MASTER_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_ONLY_MASTER_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_ONLY_MASTER_HPS_0_GMAC1_BASE 0xff702000
#define HPS_ONLY_MASTER_HPS_0_GMAC1_SPAN 8192
#define HPS_ONLY_MASTER_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_ONLY_MASTER_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_ONLY_MASTER_HPS_0_SDMMC_BASE 0xff704000
#define HPS_ONLY_MASTER_HPS_0_SDMMC_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_ONLY_MASTER_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_ONLY_MASTER_HPS_0_QSPI_BASE 0xff705000
#define HPS_ONLY_MASTER_HPS_0_QSPI_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_ONLY_MASTER_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_ONLY_MASTER_HPS_0_GPIO0_BASE 0xff708000
#define HPS_ONLY_MASTER_HPS_0_GPIO0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_ONLY_MASTER_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_ONLY_MASTER_HPS_0_GPIO1_BASE 0xff709000
#define HPS_ONLY_MASTER_HPS_0_GPIO1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_ONLY_MASTER_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_ONLY_MASTER_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_ONLY_MASTER_HPS_0_GPIO2_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_ONLY_MASTER_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_ONLY_MASTER_HPS_0_L3REGS_BASE 0xff800000
#define HPS_ONLY_MASTER_HPS_0_L3REGS_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_ONLY_MASTER_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_ONLY_MASTER_HPS_0_NAND0_BASE 0xff900000
#define HPS_ONLY_MASTER_HPS_0_NAND0_SPAN 65536
#define HPS_ONLY_MASTER_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_ONLY_MASTER_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_ONLY_MASTER_HPS_0_USB0_BASE 0xffb00000
#define HPS_ONLY_MASTER_HPS_0_USB0_SPAN 262144
#define HPS_ONLY_MASTER_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_ONLY_MASTER_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_ONLY_MASTER_HPS_0_USB1_BASE 0xffb40000
#define HPS_ONLY_MASTER_HPS_0_USB1_SPAN 262144
#define HPS_ONLY_MASTER_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_ONLY_MASTER_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_ONLY_MASTER_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_ONLY_MASTER_HPS_0_DCAN0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_ONLY_MASTER_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_ONLY_MASTER_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_ONLY_MASTER_HPS_0_DCAN1_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_ONLY_MASTER_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_ONLY_MASTER_HPS_0_UART0_BASE 0xffc02000
#define HPS_ONLY_MASTER_HPS_0_UART0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_UART0_END 0xffc020ff
#define HPS_ONLY_MASTER_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_ONLY_MASTER_HPS_0_UART0_FIFO_HWFC 0
#define HPS_ONLY_MASTER_HPS_0_UART0_FIFO_MODE 1
#define HPS_ONLY_MASTER_HPS_0_UART0_FIFO_SWFC 0
#define HPS_ONLY_MASTER_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_ONLY_MASTER_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_ONLY_MASTER_HPS_0_UART1_BASE 0xffc03000
#define HPS_ONLY_MASTER_HPS_0_UART1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_UART1_END 0xffc030ff
#define HPS_ONLY_MASTER_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_ONLY_MASTER_HPS_0_UART1_FIFO_HWFC 0
#define HPS_ONLY_MASTER_HPS_0_UART1_FIFO_MODE 1
#define HPS_ONLY_MASTER_HPS_0_UART1_FIFO_SWFC 0
#define HPS_ONLY_MASTER_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_ONLY_MASTER_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_ONLY_MASTER_HPS_0_I2C0_BASE 0xffc04000
#define HPS_ONLY_MASTER_HPS_0_I2C0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_ONLY_MASTER_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_ONLY_MASTER_HPS_0_I2C1_BASE 0xffc05000
#define HPS_ONLY_MASTER_HPS_0_I2C1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_ONLY_MASTER_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_ONLY_MASTER_HPS_0_I2C2_BASE 0xffc06000
#define HPS_ONLY_MASTER_HPS_0_I2C2_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_ONLY_MASTER_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_ONLY_MASTER_HPS_0_I2C3_BASE 0xffc07000
#define HPS_ONLY_MASTER_HPS_0_I2C3_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_ONLY_MASTER_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_ONLY_MASTER_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_ONLY_MASTER_HPS_0_TIMER0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_ONLY_MASTER_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_ONLY_MASTER_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_ONLY_MASTER_HPS_0_TIMER1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_ONLY_MASTER_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_ONLY_MASTER_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_ONLY_MASTER_HPS_0_TIMER2_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_ONLY_MASTER_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_ONLY_MASTER_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_ONLY_MASTER_HPS_0_TIMER3_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_SPAN 1024
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_ONLY_MASTER_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_ONLY_MASTER_HPS_0_DMA_BASE 0xffe01000
#define HPS_ONLY_MASTER_HPS_0_DMA_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_ONLY_MASTER_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_ONLY_MASTER_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_ONLY_MASTER_HPS_0_SPIM0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_ONLY_MASTER_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_ONLY_MASTER_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_ONLY_MASTER_HPS_0_SPIM1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_ONLY_MASTER_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_ONLY_MASTER_HPS_0_TIMER_BASE 0xfffec600
#define HPS_ONLY_MASTER_HPS_0_TIMER_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_ONLY_MASTER_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_ONLY_MASTER_HPS_0_L2_BASE 0xfffef000
#define HPS_ONLY_MASTER_HPS_0_L2_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define MM_BRIDGE_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define MM_BRIDGE_0_SYSID_QSYS_BASE 0x1000
#define MM_BRIDGE_0_SYSID_QSYS_SPAN 8
#define MM_BRIDGE_0_SYSID_QSYS_END 0x1007
#define MM_BRIDGE_0_SYSID_QSYS_ID 4294906626
#define MM_BRIDGE_0_SYSID_QSYS_TIMESTAMP 1590594581

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define MM_BRIDGE_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define MM_BRIDGE_0_JTAG_UART_BASE 0x2000
#define MM_BRIDGE_0_JTAG_UART_SPAN 8
#define MM_BRIDGE_0_JTAG_UART_END 0x2007
#define MM_BRIDGE_0_JTAG_UART_READ_DEPTH 64
#define MM_BRIDGE_0_JTAG_UART_READ_THRESHOLD 8
#define MM_BRIDGE_0_JTAG_UART_WRITE_DEPTH 64
#define MM_BRIDGE_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'flags_in', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_FLAGS_IN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_FLAGS_IN_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_FLAGS_IN_COMPONENT_NAME flags_in
#define MM_BRIDGE_0_FLAGS_IN_BASE 0x4000
#define MM_BRIDGE_0_FLAGS_IN_SPAN 16
#define MM_BRIDGE_0_FLAGS_IN_END 0x400f
#define MM_BRIDGE_0_FLAGS_IN_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_FLAGS_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_FLAGS_IN_CAPTURE 0
#define MM_BRIDGE_0_FLAGS_IN_DATA_WIDTH 32
#define MM_BRIDGE_0_FLAGS_IN_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_FLAGS_IN_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_FLAGS_IN_EDGE_TYPE NONE
#define MM_BRIDGE_0_FLAGS_IN_FREQ 50000000
#define MM_BRIDGE_0_FLAGS_IN_HAS_IN 1
#define MM_BRIDGE_0_FLAGS_IN_HAS_OUT 0
#define MM_BRIDGE_0_FLAGS_IN_HAS_TRI 0
#define MM_BRIDGE_0_FLAGS_IN_IRQ_TYPE NONE
#define MM_BRIDGE_0_FLAGS_IN_RESET_VALUE 0

/*
 * Macros for device 'flags_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_FLAGS_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_FLAGS_OUT_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_FLAGS_OUT_COMPONENT_NAME flags_out
#define MM_BRIDGE_0_FLAGS_OUT_BASE 0x4020
#define MM_BRIDGE_0_FLAGS_OUT_SPAN 16
#define MM_BRIDGE_0_FLAGS_OUT_END 0x402f
#define MM_BRIDGE_0_FLAGS_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_FLAGS_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_FLAGS_OUT_CAPTURE 0
#define MM_BRIDGE_0_FLAGS_OUT_DATA_WIDTH 32
#define MM_BRIDGE_0_FLAGS_OUT_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_FLAGS_OUT_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_FLAGS_OUT_EDGE_TYPE NONE
#define MM_BRIDGE_0_FLAGS_OUT_FREQ 50000000
#define MM_BRIDGE_0_FLAGS_OUT_HAS_IN 0
#define MM_BRIDGE_0_FLAGS_OUT_HAS_OUT 1
#define MM_BRIDGE_0_FLAGS_OUT_HAS_TRI 0
#define MM_BRIDGE_0_FLAGS_OUT_IRQ_TYPE NONE
#define MM_BRIDGE_0_FLAGS_OUT_RESET_VALUE 0

/*
 * Macros for device 'command_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_TYPE_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_TYPE_COMPONENT_NAME command_type
#define MM_BRIDGE_0_COMMAND_TYPE_BASE 0x4040
#define MM_BRIDGE_0_COMMAND_TYPE_SPAN 16
#define MM_BRIDGE_0_COMMAND_TYPE_END 0x404f
#define MM_BRIDGE_0_COMMAND_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_TYPE_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_TYPE_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_TYPE_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_TYPE_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_TYPE_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_TYPE_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_TYPE_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_TYPE_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_TYPE_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_TYPE_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_TYPE_RESET_VALUE 0

/*
 * Macros for device 'command_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_X_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_X_COMPONENT_NAME command_x
#define MM_BRIDGE_0_COMMAND_X_BASE 0x5000
#define MM_BRIDGE_0_COMMAND_X_SPAN 16
#define MM_BRIDGE_0_COMMAND_X_END 0x500f
#define MM_BRIDGE_0_COMMAND_X_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_X_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_X_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_X_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_X_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_X_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_X_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_X_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_X_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_X_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_X_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_X_RESET_VALUE 0

/*
 * Macros for device 'command_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_Y_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_Y_COMPONENT_NAME command_y
#define MM_BRIDGE_0_COMMAND_Y_BASE 0x5020
#define MM_BRIDGE_0_COMMAND_Y_SPAN 16
#define MM_BRIDGE_0_COMMAND_Y_END 0x502f
#define MM_BRIDGE_0_COMMAND_Y_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_Y_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_Y_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_Y_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_Y_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_Y_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_Y_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_Y_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_Y_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_Y_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_Y_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_Y_RESET_VALUE 0

/*
 * Macros for device 'command_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_Z_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_Z_COMPONENT_NAME command_z
#define MM_BRIDGE_0_COMMAND_Z_BASE 0x5040
#define MM_BRIDGE_0_COMMAND_Z_SPAN 16
#define MM_BRIDGE_0_COMMAND_Z_END 0x504f
#define MM_BRIDGE_0_COMMAND_Z_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_Z_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_Z_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_Z_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_Z_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_Z_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_Z_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_Z_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_Z_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_Z_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_Z_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_Z_RESET_VALUE 0

/*
 * Macros for device 'command_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_E0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_E0_COMPONENT_NAME command_e0
#define MM_BRIDGE_0_COMMAND_E0_BASE 0x5060
#define MM_BRIDGE_0_COMMAND_E0_SPAN 16
#define MM_BRIDGE_0_COMMAND_E0_END 0x506f
#define MM_BRIDGE_0_COMMAND_E0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_E0_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_E0_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_E0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_E0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_E0_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_E0_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_E0_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_E0_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_E0_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_E0_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_E0_RESET_VALUE 0

/*
 * Macros for device 'command_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_E1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_E1_COMPONENT_NAME command_e1
#define MM_BRIDGE_0_COMMAND_E1_BASE 0x5080
#define MM_BRIDGE_0_COMMAND_E1_SPAN 16
#define MM_BRIDGE_0_COMMAND_E1_END 0x508f
#define MM_BRIDGE_0_COMMAND_E1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_E1_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_E1_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_E1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_E1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_E1_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_E1_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_E1_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_E1_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_E1_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_E1_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_E1_RESET_VALUE 0

/*
 * Macros for device 'command_f_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_F_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_F_X_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_F_X_COMPONENT_NAME command_f_x
#define MM_BRIDGE_0_COMMAND_F_X_BASE 0x50a0
#define MM_BRIDGE_0_COMMAND_F_X_SPAN 16
#define MM_BRIDGE_0_COMMAND_F_X_END 0x50af
#define MM_BRIDGE_0_COMMAND_F_X_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_X_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_F_X_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_F_X_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_F_X_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_F_X_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_X_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_F_X_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_F_X_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_F_X_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_F_X_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_X_RESET_VALUE 0

/*
 * Macros for device 'command_t', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_T_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_T_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_T_COMPONENT_NAME command_t
#define MM_BRIDGE_0_COMMAND_T_BASE 0x50c0
#define MM_BRIDGE_0_COMMAND_T_SPAN 16
#define MM_BRIDGE_0_COMMAND_T_END 0x50cf
#define MM_BRIDGE_0_COMMAND_T_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_T_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_T_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_T_DATA_WIDTH 12
#define MM_BRIDGE_0_COMMAND_T_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_T_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_T_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_T_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_T_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_T_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_T_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_T_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_T_RESET_VALUE 0

/*
 * Macros for device 'command_dt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_DT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_DT_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_DT_COMPONENT_NAME command_dt
#define MM_BRIDGE_0_COMMAND_DT_BASE 0x50e0
#define MM_BRIDGE_0_COMMAND_DT_SPAN 16
#define MM_BRIDGE_0_COMMAND_DT_END 0x50ef
#define MM_BRIDGE_0_COMMAND_DT_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_DT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_DT_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_DT_DATA_WIDTH 12
#define MM_BRIDGE_0_COMMAND_DT_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_DT_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_DT_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_DT_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_DT_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_DT_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_DT_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_DT_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_DT_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_COMPONENT_NAME settings_max_speed_x
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_BASE 0x5100
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_SPAN 16
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_END 0x510f
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_X_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_COMPONENT_NAME settings_max_speed_y
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_BASE 0x5120
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_SPAN 16
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_END 0x512f
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_COMPONENT_NAME settings_max_speed_z
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_BASE 0x5140
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_SPAN 16
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_END 0x514f
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_COMPONENT_NAME settings_max_speed_e0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_BASE 0x5160
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_SPAN 16
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_END 0x516f
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_speed_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_COMPONENT_NAME settings_max_speed_e1
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_BASE 0x5180
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_SPAN 16
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_END 0x518f
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_SPEED_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_ACCELERATION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_COMPONENT_NAME settings_acceleration_x
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_BASE 0x51a0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_SPAN 16
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_END 0x51af
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_X_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_COMPONENT_NAME settings_acceleration_y
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_BASE 0x51c0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_SPAN 16
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_END 0x51cf
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_COMPONENT_NAME settings_acceleration_z
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_BASE 0x51e0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_SPAN 16
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_END 0x51ef
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_COMPONENT_NAME settings_acceleration_e0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_BASE 0x5200
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_SPAN 16
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_END 0x520f
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_acceleration_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_COMPONENT_NAME settings_acceleration_e1
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_BASE 0x5220
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_SPAN 16
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_END 0x522f
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_ACCELERATION_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_JERK_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_JERK_X_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_JERK_X_COMPONENT_NAME settings_jerk_x
#define MM_BRIDGE_0_SETTINGS_JERK_X_BASE 0x5240
#define MM_BRIDGE_0_SETTINGS_JERK_X_SPAN 16
#define MM_BRIDGE_0_SETTINGS_JERK_X_END 0x524f
#define MM_BRIDGE_0_SETTINGS_JERK_X_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_X_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_JERK_X_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_JERK_X_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_JERK_X_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_JERK_X_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_X_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_JERK_X_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_JERK_X_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_JERK_X_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_JERK_X_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_X_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_JERK_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_JERK_Y_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_JERK_Y_COMPONENT_NAME settings_jerk_y
#define MM_BRIDGE_0_SETTINGS_JERK_Y_BASE 0x5260
#define MM_BRIDGE_0_SETTINGS_JERK_Y_SPAN 16
#define MM_BRIDGE_0_SETTINGS_JERK_Y_END 0x526f
#define MM_BRIDGE_0_SETTINGS_JERK_Y_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_Y_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_JERK_Y_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_JERK_Y_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_JERK_Y_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_JERK_Y_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_Y_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_JERK_Y_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_JERK_Y_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_JERK_Y_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_JERK_Y_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_Y_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_JERK_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_JERK_Z_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_JERK_Z_COMPONENT_NAME settings_jerk_z
#define MM_BRIDGE_0_SETTINGS_JERK_Z_BASE 0x5280
#define MM_BRIDGE_0_SETTINGS_JERK_Z_SPAN 16
#define MM_BRIDGE_0_SETTINGS_JERK_Z_END 0x528f
#define MM_BRIDGE_0_SETTINGS_JERK_Z_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_Z_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_JERK_Z_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_JERK_Z_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_JERK_Z_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_JERK_Z_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_Z_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_JERK_Z_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_JERK_Z_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_JERK_Z_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_JERK_Z_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_Z_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_JERK_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_JERK_E0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_JERK_E0_COMPONENT_NAME settings_jerk_e0
#define MM_BRIDGE_0_SETTINGS_JERK_E0_BASE 0x52a0
#define MM_BRIDGE_0_SETTINGS_JERK_E0_SPAN 16
#define MM_BRIDGE_0_SETTINGS_JERK_E0_END 0x52af
#define MM_BRIDGE_0_SETTINGS_JERK_E0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_E0_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_JERK_E0_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_JERK_E0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_JERK_E0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_JERK_E0_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_E0_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_JERK_E0_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_JERK_E0_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_JERK_E0_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_JERK_E0_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_jerk_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_JERK_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_JERK_E1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_JERK_E1_COMPONENT_NAME settings_jerk_e1
#define MM_BRIDGE_0_SETTINGS_JERK_E1_BASE 0x52c0
#define MM_BRIDGE_0_SETTINGS_JERK_E1_SPAN 16
#define MM_BRIDGE_0_SETTINGS_JERK_E1_END 0x52cf
#define MM_BRIDGE_0_SETTINGS_JERK_E1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_JERK_E1_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_JERK_E1_DATA_WIDTH 32
#define MM_BRIDGE_0_SETTINGS_JERK_E1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_JERK_E1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_JERK_E1_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_E1_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_JERK_E1_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_JERK_E1_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_JERK_E1_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_JERK_E1_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_JERK_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_COMPONENT_NAME settings_max_temp_e0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_BASE 0x52e0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_SPAN 16
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_END 0x52ef
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_DATA_WIDTH 12
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E0_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_COMPONENT_NAME settings_max_temp_e1
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_BASE 0x5300
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_SPAN 16
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_END 0x530f
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_DATA_WIDTH 12
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_E1_RESET_VALUE 0

/*
 * Macros for device 'settings_max_temp_bed', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_COMPONENT_NAME settings_max_temp_bed
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_BASE 0x5320
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_SPAN 16
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_END 0x532f
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_CAPTURE 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_DATA_WIDTH 12
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_EDGE_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_FREQ 50000000
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_HAS_IN 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_HAS_OUT 1
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_HAS_TRI 0
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_IRQ_TYPE NONE
#define MM_BRIDGE_0_SETTINGS_MAX_TEMP_BED_RESET_VALUE 0

/*
 * Macros for device 'command_f_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_F_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_F_Y_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_F_Y_COMPONENT_NAME command_f_y
#define MM_BRIDGE_0_COMMAND_F_Y_BASE 0x5340
#define MM_BRIDGE_0_COMMAND_F_Y_SPAN 16
#define MM_BRIDGE_0_COMMAND_F_Y_END 0x534f
#define MM_BRIDGE_0_COMMAND_F_Y_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_Y_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_F_Y_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_F_Y_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_F_Y_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_F_Y_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_Y_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_F_Y_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_F_Y_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_F_Y_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_F_Y_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_Y_RESET_VALUE 0

/*
 * Macros for device 'command_f_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_F_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_F_Z_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_F_Z_COMPONENT_NAME command_f_z
#define MM_BRIDGE_0_COMMAND_F_Z_BASE 0x5360
#define MM_BRIDGE_0_COMMAND_F_Z_SPAN 16
#define MM_BRIDGE_0_COMMAND_F_Z_END 0x536f
#define MM_BRIDGE_0_COMMAND_F_Z_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_Z_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_F_Z_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_F_Z_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_F_Z_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_F_Z_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_Z_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_F_Z_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_F_Z_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_F_Z_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_F_Z_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_Z_RESET_VALUE 0

/*
 * Macros for device 'command_f_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_F_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_F_E0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_F_E0_COMPONENT_NAME command_f_e0
#define MM_BRIDGE_0_COMMAND_F_E0_BASE 0x5380
#define MM_BRIDGE_0_COMMAND_F_E0_SPAN 16
#define MM_BRIDGE_0_COMMAND_F_E0_END 0x538f
#define MM_BRIDGE_0_COMMAND_F_E0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_E0_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_F_E0_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_F_E0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_F_E0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_F_E0_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_E0_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_F_E0_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_F_E0_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_F_E0_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_F_E0_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_E0_RESET_VALUE 0

/*
 * Macros for device 'command_f_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_COMMAND_F_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_COMMAND_F_E1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_COMMAND_F_E1_COMPONENT_NAME command_f_e1
#define MM_BRIDGE_0_COMMAND_F_E1_BASE 0x53a0
#define MM_BRIDGE_0_COMMAND_F_E1_SPAN 16
#define MM_BRIDGE_0_COMMAND_F_E1_END 0x53af
#define MM_BRIDGE_0_COMMAND_F_E1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_COMMAND_F_E1_CAPTURE 0
#define MM_BRIDGE_0_COMMAND_F_E1_DATA_WIDTH 32
#define MM_BRIDGE_0_COMMAND_F_E1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_COMMAND_F_E1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_COMMAND_F_E1_EDGE_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_E1_FREQ 50000000
#define MM_BRIDGE_0_COMMAND_F_E1_HAS_IN 0
#define MM_BRIDGE_0_COMMAND_F_E1_HAS_OUT 1
#define MM_BRIDGE_0_COMMAND_F_E1_HAS_TRI 0
#define MM_BRIDGE_0_COMMAND_F_E1_IRQ_TYPE NONE
#define MM_BRIDGE_0_COMMAND_F_E1_RESET_VALUE 0

/*
 * Macros for device 'temp_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TEMP_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TEMP_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TEMP_0_COMPONENT_NAME temp_0
#define MM_BRIDGE_0_TEMP_0_BASE 0x6000
#define MM_BRIDGE_0_TEMP_0_SPAN 16
#define MM_BRIDGE_0_TEMP_0_END 0x600f
#define MM_BRIDGE_0_TEMP_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TEMP_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TEMP_0_CAPTURE 0
#define MM_BRIDGE_0_TEMP_0_DATA_WIDTH 12
#define MM_BRIDGE_0_TEMP_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TEMP_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TEMP_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_TEMP_0_FREQ 50000000
#define MM_BRIDGE_0_TEMP_0_HAS_IN 1
#define MM_BRIDGE_0_TEMP_0_HAS_OUT 0
#define MM_BRIDGE_0_TEMP_0_HAS_TRI 0
#define MM_BRIDGE_0_TEMP_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_TEMP_0_RESET_VALUE 0

/*
 * Macros for device 'temp_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TEMP_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TEMP_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TEMP_1_COMPONENT_NAME temp_1
#define MM_BRIDGE_0_TEMP_1_BASE 0x6020
#define MM_BRIDGE_0_TEMP_1_SPAN 16
#define MM_BRIDGE_0_TEMP_1_END 0x602f
#define MM_BRIDGE_0_TEMP_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TEMP_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TEMP_1_CAPTURE 0
#define MM_BRIDGE_0_TEMP_1_DATA_WIDTH 12
#define MM_BRIDGE_0_TEMP_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TEMP_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TEMP_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_TEMP_1_FREQ 50000000
#define MM_BRIDGE_0_TEMP_1_HAS_IN 1
#define MM_BRIDGE_0_TEMP_1_HAS_OUT 0
#define MM_BRIDGE_0_TEMP_1_HAS_TRI 0
#define MM_BRIDGE_0_TEMP_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_TEMP_1_RESET_VALUE 0

/*
 * Macros for device 'temp_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TEMP_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TEMP_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TEMP_2_COMPONENT_NAME temp_2
#define MM_BRIDGE_0_TEMP_2_BASE 0x6040
#define MM_BRIDGE_0_TEMP_2_SPAN 16
#define MM_BRIDGE_0_TEMP_2_END 0x604f
#define MM_BRIDGE_0_TEMP_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TEMP_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TEMP_2_CAPTURE 0
#define MM_BRIDGE_0_TEMP_2_DATA_WIDTH 12
#define MM_BRIDGE_0_TEMP_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TEMP_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TEMP_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_TEMP_2_FREQ 50000000
#define MM_BRIDGE_0_TEMP_2_HAS_IN 1
#define MM_BRIDGE_0_TEMP_2_HAS_OUT 0
#define MM_BRIDGE_0_TEMP_2_HAS_TRI 0
#define MM_BRIDGE_0_TEMP_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_TEMP_2_RESET_VALUE 0

/*
 * Macros for device 'position_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_POSITION_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_POSITION_X_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_POSITION_X_COMPONENT_NAME position_x
#define MM_BRIDGE_0_POSITION_X_BASE 0x6060
#define MM_BRIDGE_0_POSITION_X_SPAN 16
#define MM_BRIDGE_0_POSITION_X_END 0x606f
#define MM_BRIDGE_0_POSITION_X_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_POSITION_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_POSITION_X_CAPTURE 0
#define MM_BRIDGE_0_POSITION_X_DATA_WIDTH 12
#define MM_BRIDGE_0_POSITION_X_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_POSITION_X_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_POSITION_X_EDGE_TYPE NONE
#define MM_BRIDGE_0_POSITION_X_FREQ 50000000
#define MM_BRIDGE_0_POSITION_X_HAS_IN 1
#define MM_BRIDGE_0_POSITION_X_HAS_OUT 0
#define MM_BRIDGE_0_POSITION_X_HAS_TRI 0
#define MM_BRIDGE_0_POSITION_X_IRQ_TYPE NONE
#define MM_BRIDGE_0_POSITION_X_RESET_VALUE 0

/*
 * Macros for device 'position_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_POSITION_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_POSITION_Y_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_POSITION_Y_COMPONENT_NAME position_y
#define MM_BRIDGE_0_POSITION_Y_BASE 0x6080
#define MM_BRIDGE_0_POSITION_Y_SPAN 16
#define MM_BRIDGE_0_POSITION_Y_END 0x608f
#define MM_BRIDGE_0_POSITION_Y_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_POSITION_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_POSITION_Y_CAPTURE 0
#define MM_BRIDGE_0_POSITION_Y_DATA_WIDTH 12
#define MM_BRIDGE_0_POSITION_Y_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_POSITION_Y_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_POSITION_Y_EDGE_TYPE NONE
#define MM_BRIDGE_0_POSITION_Y_FREQ 50000000
#define MM_BRIDGE_0_POSITION_Y_HAS_IN 1
#define MM_BRIDGE_0_POSITION_Y_HAS_OUT 0
#define MM_BRIDGE_0_POSITION_Y_HAS_TRI 0
#define MM_BRIDGE_0_POSITION_Y_IRQ_TYPE NONE
#define MM_BRIDGE_0_POSITION_Y_RESET_VALUE 0

/*
 * Macros for device 'position_z', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_POSITION_Z_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_POSITION_Z_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_POSITION_Z_COMPONENT_NAME position_z
#define MM_BRIDGE_0_POSITION_Z_BASE 0x60a0
#define MM_BRIDGE_0_POSITION_Z_SPAN 16
#define MM_BRIDGE_0_POSITION_Z_END 0x60af
#define MM_BRIDGE_0_POSITION_Z_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_POSITION_Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_POSITION_Z_CAPTURE 0
#define MM_BRIDGE_0_POSITION_Z_DATA_WIDTH 12
#define MM_BRIDGE_0_POSITION_Z_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_POSITION_Z_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_POSITION_Z_EDGE_TYPE NONE
#define MM_BRIDGE_0_POSITION_Z_FREQ 50000000
#define MM_BRIDGE_0_POSITION_Z_HAS_IN 1
#define MM_BRIDGE_0_POSITION_Z_HAS_OUT 0
#define MM_BRIDGE_0_POSITION_Z_HAS_TRI 0
#define MM_BRIDGE_0_POSITION_Z_IRQ_TYPE NONE
#define MM_BRIDGE_0_POSITION_Z_RESET_VALUE 0

/*
 * Macros for device 'position_e0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_POSITION_E0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_POSITION_E0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_POSITION_E0_COMPONENT_NAME position_e0
#define MM_BRIDGE_0_POSITION_E0_BASE 0x60c0
#define MM_BRIDGE_0_POSITION_E0_SPAN 16
#define MM_BRIDGE_0_POSITION_E0_END 0x60cf
#define MM_BRIDGE_0_POSITION_E0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_POSITION_E0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_POSITION_E0_CAPTURE 0
#define MM_BRIDGE_0_POSITION_E0_DATA_WIDTH 12
#define MM_BRIDGE_0_POSITION_E0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_POSITION_E0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_POSITION_E0_EDGE_TYPE NONE
#define MM_BRIDGE_0_POSITION_E0_FREQ 50000000
#define MM_BRIDGE_0_POSITION_E0_HAS_IN 1
#define MM_BRIDGE_0_POSITION_E0_HAS_OUT 0
#define MM_BRIDGE_0_POSITION_E0_HAS_TRI 0
#define MM_BRIDGE_0_POSITION_E0_IRQ_TYPE NONE
#define MM_BRIDGE_0_POSITION_E0_RESET_VALUE 0

/*
 * Macros for device 'position_e1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_POSITION_E1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_POSITION_E1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_POSITION_E1_COMPONENT_NAME position_e1
#define MM_BRIDGE_0_POSITION_E1_BASE 0x60e0
#define MM_BRIDGE_0_POSITION_E1_SPAN 16
#define MM_BRIDGE_0_POSITION_E1_END 0x60ef
#define MM_BRIDGE_0_POSITION_E1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_POSITION_E1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_POSITION_E1_CAPTURE 0
#define MM_BRIDGE_0_POSITION_E1_DATA_WIDTH 12
#define MM_BRIDGE_0_POSITION_E1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_POSITION_E1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_POSITION_E1_EDGE_TYPE NONE
#define MM_BRIDGE_0_POSITION_E1_FREQ 50000000
#define MM_BRIDGE_0_POSITION_E1_HAS_IN 1
#define MM_BRIDGE_0_POSITION_E1_HAS_OUT 0
#define MM_BRIDGE_0_POSITION_E1_HAS_TRI 0
#define MM_BRIDGE_0_POSITION_E1_IRQ_TYPE NONE
#define MM_BRIDGE_0_POSITION_E1_RESET_VALUE 0

/*
 * Macros for device 'position_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_POSITION_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_POSITION_TYPE_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_POSITION_TYPE_COMPONENT_NAME position_type
#define MM_BRIDGE_0_POSITION_TYPE_BASE 0x6100
#define MM_BRIDGE_0_POSITION_TYPE_SPAN 16
#define MM_BRIDGE_0_POSITION_TYPE_END 0x610f
#define MM_BRIDGE_0_POSITION_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_POSITION_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_POSITION_TYPE_CAPTURE 0
#define MM_BRIDGE_0_POSITION_TYPE_DATA_WIDTH 1
#define MM_BRIDGE_0_POSITION_TYPE_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_POSITION_TYPE_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_POSITION_TYPE_EDGE_TYPE NONE
#define MM_BRIDGE_0_POSITION_TYPE_FREQ 50000000
#define MM_BRIDGE_0_POSITION_TYPE_HAS_IN 1
#define MM_BRIDGE_0_POSITION_TYPE_HAS_OUT 0
#define MM_BRIDGE_0_POSITION_TYPE_HAS_TRI 0
#define MM_BRIDGE_0_POSITION_TYPE_IRQ_TYPE NONE
#define MM_BRIDGE_0_POSITION_TYPE_RESET_VALUE 0

/*
 * Macros for device 'position_extruder_type', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_COMPONENT_NAME position_extruder_type
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_BASE 0x6120
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_SPAN 16
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_END 0x612f
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_CAPTURE 0
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_DATA_WIDTH 1
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_EDGE_TYPE NONE
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_FREQ 50000000
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_HAS_IN 1
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_HAS_OUT 0
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_HAS_TRI 0
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_IRQ_TYPE NONE
#define MM_BRIDGE_0_POSITION_EXTRUDER_TYPE_RESET_VALUE 0

/*
 * Macros for device 'params_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_X_0_COMPONENT_NAME params_x_0
#define MM_BRIDGE_0_PARAMS_X_0_BASE 0x7000
#define MM_BRIDGE_0_PARAMS_X_0_SPAN 16
#define MM_BRIDGE_0_PARAMS_X_0_END 0x700f
#define MM_BRIDGE_0_PARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_0_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_X_0_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_X_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_X_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_0_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_X_0_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_X_0_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_X_0_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_X_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'params_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_X_1_COMPONENT_NAME params_x_1
#define MM_BRIDGE_0_PARAMS_X_1_BASE 0x7020
#define MM_BRIDGE_0_PARAMS_X_1_SPAN 16
#define MM_BRIDGE_0_PARAMS_X_1_END 0x702f
#define MM_BRIDGE_0_PARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_1_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_X_1_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_X_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_X_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_1_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_X_1_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_X_1_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_X_1_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_X_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'params_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_X_2_COMPONENT_NAME params_x_2
#define MM_BRIDGE_0_PARAMS_X_2_BASE 0x7040
#define MM_BRIDGE_0_PARAMS_X_2_SPAN 16
#define MM_BRIDGE_0_PARAMS_X_2_END 0x704f
#define MM_BRIDGE_0_PARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_2_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_X_2_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_X_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_X_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_2_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_X_2_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_X_2_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_X_2_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_X_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'params_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_X_3_COMPONENT_NAME params_x_3
#define MM_BRIDGE_0_PARAMS_X_3_BASE 0x7060
#define MM_BRIDGE_0_PARAMS_X_3_SPAN 16
#define MM_BRIDGE_0_PARAMS_X_3_END 0x706f
#define MM_BRIDGE_0_PARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_3_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_X_3_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_X_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_X_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_3_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_X_3_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_X_3_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_X_3_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_X_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'params_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_X_4_COMPONENT_NAME params_x_4
#define MM_BRIDGE_0_PARAMS_X_4_BASE 0x7080
#define MM_BRIDGE_0_PARAMS_X_4_SPAN 16
#define MM_BRIDGE_0_PARAMS_X_4_END 0x708f
#define MM_BRIDGE_0_PARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_X_4_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_X_4_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_X_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_X_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_4_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_X_4_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_X_4_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_X_4_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_X_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'params_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Y_0_COMPONENT_NAME params_y_0
#define MM_BRIDGE_0_PARAMS_Y_0_BASE 0x70a0
#define MM_BRIDGE_0_PARAMS_Y_0_SPAN 16
#define MM_BRIDGE_0_PARAMS_Y_0_END 0x70af
#define MM_BRIDGE_0_PARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_0_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Y_0_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Y_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_0_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Y_0_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Y_0_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Y_0_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Y_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'params_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Y_1_COMPONENT_NAME params_y_1
#define MM_BRIDGE_0_PARAMS_Y_1_BASE 0x70c0
#define MM_BRIDGE_0_PARAMS_Y_1_SPAN 16
#define MM_BRIDGE_0_PARAMS_Y_1_END 0x70cf
#define MM_BRIDGE_0_PARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_1_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Y_1_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Y_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_1_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Y_1_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Y_1_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Y_1_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Y_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'params_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Y_2_COMPONENT_NAME params_y_2
#define MM_BRIDGE_0_PARAMS_Y_2_BASE 0x70e0
#define MM_BRIDGE_0_PARAMS_Y_2_SPAN 16
#define MM_BRIDGE_0_PARAMS_Y_2_END 0x70ef
#define MM_BRIDGE_0_PARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_2_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Y_2_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Y_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_2_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Y_2_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Y_2_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Y_2_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Y_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'params_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Y_3_COMPONENT_NAME params_y_3
#define MM_BRIDGE_0_PARAMS_Y_3_BASE 0x7100
#define MM_BRIDGE_0_PARAMS_Y_3_SPAN 16
#define MM_BRIDGE_0_PARAMS_Y_3_END 0x710f
#define MM_BRIDGE_0_PARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_3_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Y_3_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Y_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_3_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Y_3_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Y_3_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Y_3_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Y_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'params_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Y_4_COMPONENT_NAME params_y_4
#define MM_BRIDGE_0_PARAMS_Y_4_BASE 0x7120
#define MM_BRIDGE_0_PARAMS_Y_4_SPAN 16
#define MM_BRIDGE_0_PARAMS_Y_4_END 0x712f
#define MM_BRIDGE_0_PARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Y_4_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Y_4_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Y_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_4_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Y_4_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Y_4_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Y_4_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Y_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'params_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Z_0_COMPONENT_NAME params_z_0
#define MM_BRIDGE_0_PARAMS_Z_0_BASE 0x7140
#define MM_BRIDGE_0_PARAMS_Z_0_SPAN 16
#define MM_BRIDGE_0_PARAMS_Z_0_END 0x714f
#define MM_BRIDGE_0_PARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_0_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Z_0_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Z_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_0_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Z_0_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Z_0_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Z_0_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Z_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'params_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Z_1_COMPONENT_NAME params_z_1
#define MM_BRIDGE_0_PARAMS_Z_1_BASE 0x7160
#define MM_BRIDGE_0_PARAMS_Z_1_SPAN 16
#define MM_BRIDGE_0_PARAMS_Z_1_END 0x716f
#define MM_BRIDGE_0_PARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_1_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Z_1_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Z_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_1_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Z_1_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Z_1_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Z_1_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Z_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'params_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Z_2_COMPONENT_NAME params_z_2
#define MM_BRIDGE_0_PARAMS_Z_2_BASE 0x7180
#define MM_BRIDGE_0_PARAMS_Z_2_SPAN 16
#define MM_BRIDGE_0_PARAMS_Z_2_END 0x718f
#define MM_BRIDGE_0_PARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_2_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Z_2_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Z_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_2_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Z_2_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Z_2_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Z_2_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Z_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'params_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Z_3_COMPONENT_NAME params_z_3
#define MM_BRIDGE_0_PARAMS_Z_3_BASE 0x71a0
#define MM_BRIDGE_0_PARAMS_Z_3_SPAN 16
#define MM_BRIDGE_0_PARAMS_Z_3_END 0x71af
#define MM_BRIDGE_0_PARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_3_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Z_3_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Z_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_3_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Z_3_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Z_3_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Z_3_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Z_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'params_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_Z_4_COMPONENT_NAME params_z_4
#define MM_BRIDGE_0_PARAMS_Z_4_BASE 0x71c0
#define MM_BRIDGE_0_PARAMS_Z_4_SPAN 16
#define MM_BRIDGE_0_PARAMS_Z_4_END 0x71cf
#define MM_BRIDGE_0_PARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_Z_4_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_Z_4_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_Z_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_4_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_Z_4_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_Z_4_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_Z_4_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_Z_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'params_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E0_0_COMPONENT_NAME params_e0_0
#define MM_BRIDGE_0_PARAMS_E0_0_BASE 0x71e0
#define MM_BRIDGE_0_PARAMS_E0_0_SPAN 16
#define MM_BRIDGE_0_PARAMS_E0_0_END 0x71ef
#define MM_BRIDGE_0_PARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_0_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E0_0_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E0_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_0_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E0_0_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E0_0_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E0_0_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E0_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'params_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E0_1_COMPONENT_NAME params_e0_1
#define MM_BRIDGE_0_PARAMS_E0_1_BASE 0x7200
#define MM_BRIDGE_0_PARAMS_E0_1_SPAN 16
#define MM_BRIDGE_0_PARAMS_E0_1_END 0x720f
#define MM_BRIDGE_0_PARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_1_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E0_1_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E0_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_1_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E0_1_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E0_1_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E0_1_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E0_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'params_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E0_2_COMPONENT_NAME params_e0_2
#define MM_BRIDGE_0_PARAMS_E0_2_BASE 0x7220
#define MM_BRIDGE_0_PARAMS_E0_2_SPAN 16
#define MM_BRIDGE_0_PARAMS_E0_2_END 0x722f
#define MM_BRIDGE_0_PARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_2_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E0_2_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E0_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_2_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E0_2_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E0_2_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E0_2_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E0_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'params_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E0_3_COMPONENT_NAME params_e0_3
#define MM_BRIDGE_0_PARAMS_E0_3_BASE 0x7240
#define MM_BRIDGE_0_PARAMS_E0_3_SPAN 16
#define MM_BRIDGE_0_PARAMS_E0_3_END 0x724f
#define MM_BRIDGE_0_PARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_3_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E0_3_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E0_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_3_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E0_3_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E0_3_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E0_3_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E0_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'params_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E0_4_COMPONENT_NAME params_e0_4
#define MM_BRIDGE_0_PARAMS_E0_4_BASE 0x7260
#define MM_BRIDGE_0_PARAMS_E0_4_SPAN 16
#define MM_BRIDGE_0_PARAMS_E0_4_END 0x726f
#define MM_BRIDGE_0_PARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E0_4_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E0_4_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E0_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_4_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E0_4_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E0_4_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E0_4_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E0_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'params_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E1_0_COMPONENT_NAME params_e1_0
#define MM_BRIDGE_0_PARAMS_E1_0_BASE 0x7280
#define MM_BRIDGE_0_PARAMS_E1_0_SPAN 16
#define MM_BRIDGE_0_PARAMS_E1_0_END 0x728f
#define MM_BRIDGE_0_PARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_0_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E1_0_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E1_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_0_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E1_0_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E1_0_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E1_0_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E1_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'params_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E1_1_COMPONENT_NAME params_e1_1
#define MM_BRIDGE_0_PARAMS_E1_1_BASE 0x72a0
#define MM_BRIDGE_0_PARAMS_E1_1_SPAN 16
#define MM_BRIDGE_0_PARAMS_E1_1_END 0x72af
#define MM_BRIDGE_0_PARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_1_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E1_1_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E1_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_1_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E1_1_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E1_1_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E1_1_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E1_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'params_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E1_2_COMPONENT_NAME params_e1_2
#define MM_BRIDGE_0_PARAMS_E1_2_BASE 0x72c0
#define MM_BRIDGE_0_PARAMS_E1_2_SPAN 16
#define MM_BRIDGE_0_PARAMS_E1_2_END 0x72cf
#define MM_BRIDGE_0_PARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_2_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E1_2_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E1_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_2_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E1_2_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E1_2_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E1_2_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E1_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'params_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E1_3_COMPONENT_NAME params_e1_3
#define MM_BRIDGE_0_PARAMS_E1_3_BASE 0x72e0
#define MM_BRIDGE_0_PARAMS_E1_3_SPAN 16
#define MM_BRIDGE_0_PARAMS_E1_3_END 0x72ef
#define MM_BRIDGE_0_PARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_3_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E1_3_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E1_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_3_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E1_3_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E1_3_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E1_3_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E1_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'params_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_PARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_PARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_PARAMS_E1_4_COMPONENT_NAME params_e1_4
#define MM_BRIDGE_0_PARAMS_E1_4_BASE 0x7300
#define MM_BRIDGE_0_PARAMS_E1_4_SPAN 16
#define MM_BRIDGE_0_PARAMS_E1_4_END 0x730f
#define MM_BRIDGE_0_PARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_PARAMS_E1_4_CAPTURE 0
#define MM_BRIDGE_0_PARAMS_E1_4_DATA_WIDTH 32
#define MM_BRIDGE_0_PARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_PARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_PARAMS_E1_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_4_FREQ 50000000
#define MM_BRIDGE_0_PARAMS_E1_4_HAS_IN 1
#define MM_BRIDGE_0_PARAMS_E1_4_HAS_OUT 0
#define MM_BRIDGE_0_PARAMS_E1_4_HAS_TRI 0
#define MM_BRIDGE_0_PARAMS_E1_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_PARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'timing_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_X_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_X_0_COMPONENT_NAME timing_x_0
#define MM_BRIDGE_0_TIMING_X_0_BASE 0x7320
#define MM_BRIDGE_0_TIMING_X_0_SPAN 16
#define MM_BRIDGE_0_TIMING_X_0_END 0x732f
#define MM_BRIDGE_0_TIMING_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_X_0_CAPTURE 0
#define MM_BRIDGE_0_TIMING_X_0_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_X_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_X_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_X_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_X_0_FREQ 50000000
#define MM_BRIDGE_0_TIMING_X_0_HAS_IN 1
#define MM_BRIDGE_0_TIMING_X_0_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_X_0_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_X_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_X_0_RESET_VALUE 0

/*
 * Macros for device 'timing_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_X_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_X_1_COMPONENT_NAME timing_x_1
#define MM_BRIDGE_0_TIMING_X_1_BASE 0x7340
#define MM_BRIDGE_0_TIMING_X_1_SPAN 16
#define MM_BRIDGE_0_TIMING_X_1_END 0x734f
#define MM_BRIDGE_0_TIMING_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_X_1_CAPTURE 0
#define MM_BRIDGE_0_TIMING_X_1_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_X_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_X_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_X_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_X_1_FREQ 50000000
#define MM_BRIDGE_0_TIMING_X_1_HAS_IN 1
#define MM_BRIDGE_0_TIMING_X_1_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_X_1_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_X_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_X_1_RESET_VALUE 0

/*
 * Macros for device 'timing_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_X_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_X_2_COMPONENT_NAME timing_x_2
#define MM_BRIDGE_0_TIMING_X_2_BASE 0x7360
#define MM_BRIDGE_0_TIMING_X_2_SPAN 16
#define MM_BRIDGE_0_TIMING_X_2_END 0x736f
#define MM_BRIDGE_0_TIMING_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_X_2_CAPTURE 0
#define MM_BRIDGE_0_TIMING_X_2_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_X_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_X_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_X_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_X_2_FREQ 50000000
#define MM_BRIDGE_0_TIMING_X_2_HAS_IN 1
#define MM_BRIDGE_0_TIMING_X_2_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_X_2_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_X_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_X_2_RESET_VALUE 0

/*
 * Macros for device 'timing_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_X_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_X_3_COMPONENT_NAME timing_x_3
#define MM_BRIDGE_0_TIMING_X_3_BASE 0x7380
#define MM_BRIDGE_0_TIMING_X_3_SPAN 16
#define MM_BRIDGE_0_TIMING_X_3_END 0x738f
#define MM_BRIDGE_0_TIMING_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_X_3_CAPTURE 0
#define MM_BRIDGE_0_TIMING_X_3_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_X_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_X_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_X_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_X_3_FREQ 50000000
#define MM_BRIDGE_0_TIMING_X_3_HAS_IN 1
#define MM_BRIDGE_0_TIMING_X_3_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_X_3_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_X_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_X_3_RESET_VALUE 0

/*
 * Macros for device 'timing_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_Y_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_Y_0_COMPONENT_NAME timing_y_0
#define MM_BRIDGE_0_TIMING_Y_0_BASE 0x73a0
#define MM_BRIDGE_0_TIMING_Y_0_SPAN 16
#define MM_BRIDGE_0_TIMING_Y_0_END 0x73af
#define MM_BRIDGE_0_TIMING_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_Y_0_CAPTURE 0
#define MM_BRIDGE_0_TIMING_Y_0_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_Y_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_Y_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_Y_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_Y_0_FREQ 50000000
#define MM_BRIDGE_0_TIMING_Y_0_HAS_IN 1
#define MM_BRIDGE_0_TIMING_Y_0_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_Y_0_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_Y_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_Y_0_RESET_VALUE 0

/*
 * Macros for device 'timing_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_Y_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_Y_1_COMPONENT_NAME timing_y_1
#define MM_BRIDGE_0_TIMING_Y_1_BASE 0x73c0
#define MM_BRIDGE_0_TIMING_Y_1_SPAN 16
#define MM_BRIDGE_0_TIMING_Y_1_END 0x73cf
#define MM_BRIDGE_0_TIMING_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_Y_1_CAPTURE 0
#define MM_BRIDGE_0_TIMING_Y_1_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_Y_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_Y_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_Y_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_Y_1_FREQ 50000000
#define MM_BRIDGE_0_TIMING_Y_1_HAS_IN 1
#define MM_BRIDGE_0_TIMING_Y_1_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_Y_1_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_Y_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_Y_1_RESET_VALUE 0

/*
 * Macros for device 'timing_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_Y_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_Y_2_COMPONENT_NAME timing_y_2
#define MM_BRIDGE_0_TIMING_Y_2_BASE 0x73e0
#define MM_BRIDGE_0_TIMING_Y_2_SPAN 16
#define MM_BRIDGE_0_TIMING_Y_2_END 0x73ef
#define MM_BRIDGE_0_TIMING_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_Y_2_CAPTURE 0
#define MM_BRIDGE_0_TIMING_Y_2_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_Y_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_Y_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_Y_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_Y_2_FREQ 50000000
#define MM_BRIDGE_0_TIMING_Y_2_HAS_IN 1
#define MM_BRIDGE_0_TIMING_Y_2_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_Y_2_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_Y_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_Y_2_RESET_VALUE 0

/*
 * Macros for device 'timing_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_Y_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_Y_3_COMPONENT_NAME timing_y_3
#define MM_BRIDGE_0_TIMING_Y_3_BASE 0x7400
#define MM_BRIDGE_0_TIMING_Y_3_SPAN 16
#define MM_BRIDGE_0_TIMING_Y_3_END 0x740f
#define MM_BRIDGE_0_TIMING_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_Y_3_CAPTURE 0
#define MM_BRIDGE_0_TIMING_Y_3_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_Y_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_Y_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_Y_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_Y_3_FREQ 50000000
#define MM_BRIDGE_0_TIMING_Y_3_HAS_IN 1
#define MM_BRIDGE_0_TIMING_Y_3_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_Y_3_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_Y_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_Y_3_RESET_VALUE 0

/*
 * Macros for device 'timing_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_Z_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_Z_0_COMPONENT_NAME timing_z_0
#define MM_BRIDGE_0_TIMING_Z_0_BASE 0x7420
#define MM_BRIDGE_0_TIMING_Z_0_SPAN 16
#define MM_BRIDGE_0_TIMING_Z_0_END 0x742f
#define MM_BRIDGE_0_TIMING_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_Z_0_CAPTURE 0
#define MM_BRIDGE_0_TIMING_Z_0_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_Z_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_Z_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_Z_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_Z_0_FREQ 50000000
#define MM_BRIDGE_0_TIMING_Z_0_HAS_IN 1
#define MM_BRIDGE_0_TIMING_Z_0_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_Z_0_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_Z_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_Z_0_RESET_VALUE 0

/*
 * Macros for device 'timing_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_Z_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_Z_1_COMPONENT_NAME timing_z_1
#define MM_BRIDGE_0_TIMING_Z_1_BASE 0x7440
#define MM_BRIDGE_0_TIMING_Z_1_SPAN 16
#define MM_BRIDGE_0_TIMING_Z_1_END 0x744f
#define MM_BRIDGE_0_TIMING_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_Z_1_CAPTURE 0
#define MM_BRIDGE_0_TIMING_Z_1_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_Z_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_Z_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_Z_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_Z_1_FREQ 50000000
#define MM_BRIDGE_0_TIMING_Z_1_HAS_IN 1
#define MM_BRIDGE_0_TIMING_Z_1_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_Z_1_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_Z_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_Z_1_RESET_VALUE 0

/*
 * Macros for device 'timing_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_Z_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_Z_2_COMPONENT_NAME timing_z_2
#define MM_BRIDGE_0_TIMING_Z_2_BASE 0x7460
#define MM_BRIDGE_0_TIMING_Z_2_SPAN 16
#define MM_BRIDGE_0_TIMING_Z_2_END 0x746f
#define MM_BRIDGE_0_TIMING_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_Z_2_CAPTURE 0
#define MM_BRIDGE_0_TIMING_Z_2_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_Z_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_Z_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_Z_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_Z_2_FREQ 50000000
#define MM_BRIDGE_0_TIMING_Z_2_HAS_IN 1
#define MM_BRIDGE_0_TIMING_Z_2_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_Z_2_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_Z_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_Z_2_RESET_VALUE 0

/*
 * Macros for device 'timing_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_Z_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_Z_3_COMPONENT_NAME timing_z_3
#define MM_BRIDGE_0_TIMING_Z_3_BASE 0x7480
#define MM_BRIDGE_0_TIMING_Z_3_SPAN 16
#define MM_BRIDGE_0_TIMING_Z_3_END 0x748f
#define MM_BRIDGE_0_TIMING_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_Z_3_CAPTURE 0
#define MM_BRIDGE_0_TIMING_Z_3_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_Z_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_Z_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_Z_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_Z_3_FREQ 50000000
#define MM_BRIDGE_0_TIMING_Z_3_HAS_IN 1
#define MM_BRIDGE_0_TIMING_Z_3_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_Z_3_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_Z_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_Z_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_E0_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_E0_0_COMPONENT_NAME timing_e0_0
#define MM_BRIDGE_0_TIMING_E0_0_BASE 0x74a0
#define MM_BRIDGE_0_TIMING_E0_0_SPAN 16
#define MM_BRIDGE_0_TIMING_E0_0_END 0x74af
#define MM_BRIDGE_0_TIMING_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_E0_0_CAPTURE 0
#define MM_BRIDGE_0_TIMING_E0_0_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_E0_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_E0_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_E0_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_E0_0_FREQ 50000000
#define MM_BRIDGE_0_TIMING_E0_0_HAS_IN 1
#define MM_BRIDGE_0_TIMING_E0_0_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_E0_0_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_E0_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_E0_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_E0_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_E0_1_COMPONENT_NAME timing_e0_1
#define MM_BRIDGE_0_TIMING_E0_1_BASE 0x74c0
#define MM_BRIDGE_0_TIMING_E0_1_SPAN 16
#define MM_BRIDGE_0_TIMING_E0_1_END 0x74cf
#define MM_BRIDGE_0_TIMING_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_E0_1_CAPTURE 0
#define MM_BRIDGE_0_TIMING_E0_1_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_E0_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_E0_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_E0_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_E0_1_FREQ 50000000
#define MM_BRIDGE_0_TIMING_E0_1_HAS_IN 1
#define MM_BRIDGE_0_TIMING_E0_1_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_E0_1_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_E0_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_E0_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_E0_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_E0_2_COMPONENT_NAME timing_e0_2
#define MM_BRIDGE_0_TIMING_E0_2_BASE 0x74e0
#define MM_BRIDGE_0_TIMING_E0_2_SPAN 16
#define MM_BRIDGE_0_TIMING_E0_2_END 0x74ef
#define MM_BRIDGE_0_TIMING_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_E0_2_CAPTURE 0
#define MM_BRIDGE_0_TIMING_E0_2_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_E0_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_E0_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_E0_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_E0_2_FREQ 50000000
#define MM_BRIDGE_0_TIMING_E0_2_HAS_IN 1
#define MM_BRIDGE_0_TIMING_E0_2_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_E0_2_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_E0_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_E0_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_E0_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_E0_3_COMPONENT_NAME timing_e0_3
#define MM_BRIDGE_0_TIMING_E0_3_BASE 0x7500
#define MM_BRIDGE_0_TIMING_E0_3_SPAN 16
#define MM_BRIDGE_0_TIMING_E0_3_END 0x750f
#define MM_BRIDGE_0_TIMING_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_E0_3_CAPTURE 0
#define MM_BRIDGE_0_TIMING_E0_3_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_E0_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_E0_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_E0_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_E0_3_FREQ 50000000
#define MM_BRIDGE_0_TIMING_E0_3_HAS_IN 1
#define MM_BRIDGE_0_TIMING_E0_3_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_E0_3_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_E0_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_E0_3_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_E1_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_E1_0_COMPONENT_NAME timing_e1_0
#define MM_BRIDGE_0_TIMING_E1_0_BASE 0x7520
#define MM_BRIDGE_0_TIMING_E1_0_SPAN 16
#define MM_BRIDGE_0_TIMING_E1_0_END 0x752f
#define MM_BRIDGE_0_TIMING_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_E1_0_CAPTURE 0
#define MM_BRIDGE_0_TIMING_E1_0_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_E1_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_E1_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_E1_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_E1_0_FREQ 50000000
#define MM_BRIDGE_0_TIMING_E1_0_HAS_IN 1
#define MM_BRIDGE_0_TIMING_E1_0_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_E1_0_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_E1_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_E1_0_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_E1_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_E1_1_COMPONENT_NAME timing_e1_1
#define MM_BRIDGE_0_TIMING_E1_1_BASE 0x7540
#define MM_BRIDGE_0_TIMING_E1_1_SPAN 16
#define MM_BRIDGE_0_TIMING_E1_1_END 0x754f
#define MM_BRIDGE_0_TIMING_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_E1_1_CAPTURE 0
#define MM_BRIDGE_0_TIMING_E1_1_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_E1_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_E1_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_E1_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_E1_1_FREQ 50000000
#define MM_BRIDGE_0_TIMING_E1_1_HAS_IN 1
#define MM_BRIDGE_0_TIMING_E1_1_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_E1_1_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_E1_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_E1_1_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_E1_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_E1_2_COMPONENT_NAME timing_e1_2
#define MM_BRIDGE_0_TIMING_E1_2_BASE 0x7560
#define MM_BRIDGE_0_TIMING_E1_2_SPAN 16
#define MM_BRIDGE_0_TIMING_E1_2_END 0x756f
#define MM_BRIDGE_0_TIMING_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_E1_2_CAPTURE 0
#define MM_BRIDGE_0_TIMING_E1_2_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_E1_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_E1_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_E1_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_E1_2_FREQ 50000000
#define MM_BRIDGE_0_TIMING_E1_2_HAS_IN 1
#define MM_BRIDGE_0_TIMING_E1_2_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_E1_2_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_E1_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_E1_2_RESET_VALUE 0

/*
 * Macros for device 'timing_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_TIMING_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_TIMING_E1_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_TIMING_E1_3_COMPONENT_NAME timing_e1_3
#define MM_BRIDGE_0_TIMING_E1_3_BASE 0x7580
#define MM_BRIDGE_0_TIMING_E1_3_SPAN 16
#define MM_BRIDGE_0_TIMING_E1_3_END 0x758f
#define MM_BRIDGE_0_TIMING_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_TIMING_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_TIMING_E1_3_CAPTURE 0
#define MM_BRIDGE_0_TIMING_E1_3_DATA_WIDTH 32
#define MM_BRIDGE_0_TIMING_E1_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_TIMING_E1_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_TIMING_E1_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_TIMING_E1_3_FREQ 50000000
#define MM_BRIDGE_0_TIMING_E1_3_HAS_IN 1
#define MM_BRIDGE_0_TIMING_E1_3_HAS_OUT 0
#define MM_BRIDGE_0_TIMING_E1_3_HAS_TRI 0
#define MM_BRIDGE_0_TIMING_E1_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_TIMING_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_X_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_COMPONENT_NAME new_rparams_x_0
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_BASE 0x75a0
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_END 0x75af
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_X_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_COMPONENT_NAME new_rparams_x_1
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_BASE 0x75c0
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_END 0x75cf
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_X_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_COMPONENT_NAME new_rparams_x_2
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_BASE 0x75e0
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_END 0x75ef
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_X_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_COMPONENT_NAME new_rparams_x_3
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_BASE 0x7600
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_END 0x760f
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_x_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_X_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_COMPONENT_NAME new_rparams_x_4
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_BASE 0x7620
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_END 0x762f
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_X_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Y_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_COMPONENT_NAME new_rparams_y_0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_BASE 0x7640
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_END 0x764f
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Y_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_COMPONENT_NAME new_rparams_y_1
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_BASE 0x7660
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_END 0x766f
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Y_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_COMPONENT_NAME new_rparams_y_2
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_BASE 0x7680
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_END 0x768f
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Y_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_COMPONENT_NAME new_rparams_y_3
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_BASE 0x76a0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_END 0x76af
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_y_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Y_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_COMPONENT_NAME new_rparams_y_4
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_BASE 0x76c0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_END 0x76cf
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Y_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Z_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_COMPONENT_NAME new_rparams_z_0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_BASE 0x76e0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_END 0x76ef
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Z_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_COMPONENT_NAME new_rparams_z_1
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_BASE 0x7700
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_END 0x770f
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Z_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_COMPONENT_NAME new_rparams_z_2
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_BASE 0x7720
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_END 0x772f
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Z_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_COMPONENT_NAME new_rparams_z_3
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_BASE 0x7740
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_END 0x774f
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_z_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_Z_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_COMPONENT_NAME new_rparams_z_4
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_BASE 0x7760
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_END 0x776f
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_Z_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E0_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_COMPONENT_NAME new_rparams_e0_0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_BASE 0x7780
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_END 0x778f
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E0_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_COMPONENT_NAME new_rparams_e0_1
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_BASE 0x77a0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_END 0x77af
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E0_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_COMPONENT_NAME new_rparams_e0_2
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_BASE 0x77c0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_END 0x77cf
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E0_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_COMPONENT_NAME new_rparams_e0_3
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_BASE 0x77e0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_END 0x77ef
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e0_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E0_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_COMPONENT_NAME new_rparams_e0_4
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_BASE 0x7800
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_END 0x780f
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E0_4_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_COMPONENT_NAME new_rparams_e1_0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_BASE 0x7820
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_END 0x782f
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_0_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E1_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_COMPONENT_NAME new_rparams_e1_1
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_BASE 0x7840
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_END 0x784f
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_1_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E1_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_COMPONENT_NAME new_rparams_e1_2
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_BASE 0x7860
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_END 0x786f
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_2_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E1_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_COMPONENT_NAME new_rparams_e1_3
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_BASE 0x7880
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_END 0x788f
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_3_RESET_VALUE 0

/*
 * Macros for device 'new_rparams_e1_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_NEW_RPARAMS_E1_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_COMPONENT_NAME new_rparams_e1_4
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_BASE 0x78a0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_SPAN 16
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_END 0x78af
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_CAPTURE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_DATA_WIDTH 32
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_FREQ 50000000
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_HAS_IN 1
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_HAS_OUT 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_HAS_TRI 0
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_NEW_RPARAMS_E1_4_RESET_VALUE 0

/*
 * Macros for device 'step_x_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_STEP_X_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_STEP_X_NOW_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_STEP_X_NOW_COMPONENT_NAME step_x_now
#define MM_BRIDGE_0_STEP_X_NOW_BASE 0x7900
#define MM_BRIDGE_0_STEP_X_NOW_SPAN 16
#define MM_BRIDGE_0_STEP_X_NOW_END 0x790f
#define MM_BRIDGE_0_STEP_X_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_STEP_X_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_STEP_X_NOW_CAPTURE 0
#define MM_BRIDGE_0_STEP_X_NOW_DATA_WIDTH 32
#define MM_BRIDGE_0_STEP_X_NOW_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_STEP_X_NOW_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_STEP_X_NOW_EDGE_TYPE NONE
#define MM_BRIDGE_0_STEP_X_NOW_FREQ 50000000
#define MM_BRIDGE_0_STEP_X_NOW_HAS_IN 1
#define MM_BRIDGE_0_STEP_X_NOW_HAS_OUT 0
#define MM_BRIDGE_0_STEP_X_NOW_HAS_TRI 0
#define MM_BRIDGE_0_STEP_X_NOW_IRQ_TYPE NONE
#define MM_BRIDGE_0_STEP_X_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_y_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_STEP_Y_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_STEP_Y_NOW_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_STEP_Y_NOW_COMPONENT_NAME step_y_now
#define MM_BRIDGE_0_STEP_Y_NOW_BASE 0x7920
#define MM_BRIDGE_0_STEP_Y_NOW_SPAN 16
#define MM_BRIDGE_0_STEP_Y_NOW_END 0x792f
#define MM_BRIDGE_0_STEP_Y_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_STEP_Y_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_STEP_Y_NOW_CAPTURE 0
#define MM_BRIDGE_0_STEP_Y_NOW_DATA_WIDTH 32
#define MM_BRIDGE_0_STEP_Y_NOW_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_STEP_Y_NOW_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_STEP_Y_NOW_EDGE_TYPE NONE
#define MM_BRIDGE_0_STEP_Y_NOW_FREQ 50000000
#define MM_BRIDGE_0_STEP_Y_NOW_HAS_IN 1
#define MM_BRIDGE_0_STEP_Y_NOW_HAS_OUT 0
#define MM_BRIDGE_0_STEP_Y_NOW_HAS_TRI 0
#define MM_BRIDGE_0_STEP_Y_NOW_IRQ_TYPE NONE
#define MM_BRIDGE_0_STEP_Y_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_z_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_STEP_Z_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_STEP_Z_NOW_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_STEP_Z_NOW_COMPONENT_NAME step_z_now
#define MM_BRIDGE_0_STEP_Z_NOW_BASE 0x7940
#define MM_BRIDGE_0_STEP_Z_NOW_SPAN 16
#define MM_BRIDGE_0_STEP_Z_NOW_END 0x794f
#define MM_BRIDGE_0_STEP_Z_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_STEP_Z_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_STEP_Z_NOW_CAPTURE 0
#define MM_BRIDGE_0_STEP_Z_NOW_DATA_WIDTH 32
#define MM_BRIDGE_0_STEP_Z_NOW_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_STEP_Z_NOW_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_STEP_Z_NOW_EDGE_TYPE NONE
#define MM_BRIDGE_0_STEP_Z_NOW_FREQ 50000000
#define MM_BRIDGE_0_STEP_Z_NOW_HAS_IN 1
#define MM_BRIDGE_0_STEP_Z_NOW_HAS_OUT 0
#define MM_BRIDGE_0_STEP_Z_NOW_HAS_TRI 0
#define MM_BRIDGE_0_STEP_Z_NOW_IRQ_TYPE NONE
#define MM_BRIDGE_0_STEP_Z_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e0_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_STEP_E0_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_STEP_E0_NOW_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_STEP_E0_NOW_COMPONENT_NAME step_e0_now
#define MM_BRIDGE_0_STEP_E0_NOW_BASE 0x7960
#define MM_BRIDGE_0_STEP_E0_NOW_SPAN 16
#define MM_BRIDGE_0_STEP_E0_NOW_END 0x796f
#define MM_BRIDGE_0_STEP_E0_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_STEP_E0_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_STEP_E0_NOW_CAPTURE 0
#define MM_BRIDGE_0_STEP_E0_NOW_DATA_WIDTH 32
#define MM_BRIDGE_0_STEP_E0_NOW_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_STEP_E0_NOW_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_STEP_E0_NOW_EDGE_TYPE NONE
#define MM_BRIDGE_0_STEP_E0_NOW_FREQ 50000000
#define MM_BRIDGE_0_STEP_E0_NOW_HAS_IN 1
#define MM_BRIDGE_0_STEP_E0_NOW_HAS_OUT 0
#define MM_BRIDGE_0_STEP_E0_NOW_HAS_TRI 0
#define MM_BRIDGE_0_STEP_E0_NOW_IRQ_TYPE NONE
#define MM_BRIDGE_0_STEP_E0_NOW_RESET_VALUE 0

/*
 * Macros for device 'step_e1_now', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_STEP_E1_NOW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_STEP_E1_NOW_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_STEP_E1_NOW_COMPONENT_NAME step_e1_now
#define MM_BRIDGE_0_STEP_E1_NOW_BASE 0x7980
#define MM_BRIDGE_0_STEP_E1_NOW_SPAN 16
#define MM_BRIDGE_0_STEP_E1_NOW_END 0x798f
#define MM_BRIDGE_0_STEP_E1_NOW_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_STEP_E1_NOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_STEP_E1_NOW_CAPTURE 0
#define MM_BRIDGE_0_STEP_E1_NOW_DATA_WIDTH 32
#define MM_BRIDGE_0_STEP_E1_NOW_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_STEP_E1_NOW_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_STEP_E1_NOW_EDGE_TYPE NONE
#define MM_BRIDGE_0_STEP_E1_NOW_FREQ 50000000
#define MM_BRIDGE_0_STEP_E1_NOW_HAS_IN 1
#define MM_BRIDGE_0_STEP_E1_NOW_HAS_OUT 0
#define MM_BRIDGE_0_STEP_E1_NOW_HAS_TRI 0
#define MM_BRIDGE_0_STEP_E1_NOW_IRQ_TYPE NONE
#define MM_BRIDGE_0_STEP_E1_NOW_RESET_VALUE 0

/*
 * Macros for device 'max_params_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_MAX_PARAMS_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_MAX_PARAMS_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_MAX_PARAMS_0_COMPONENT_NAME max_params_0
#define MM_BRIDGE_0_MAX_PARAMS_0_BASE 0x79a0
#define MM_BRIDGE_0_MAX_PARAMS_0_SPAN 16
#define MM_BRIDGE_0_MAX_PARAMS_0_END 0x79af
#define MM_BRIDGE_0_MAX_PARAMS_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_0_CAPTURE 0
#define MM_BRIDGE_0_MAX_PARAMS_0_DATA_WIDTH 32
#define MM_BRIDGE_0_MAX_PARAMS_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_MAX_PARAMS_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_MAX_PARAMS_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_0_FREQ 50000000
#define MM_BRIDGE_0_MAX_PARAMS_0_HAS_IN 1
#define MM_BRIDGE_0_MAX_PARAMS_0_HAS_OUT 0
#define MM_BRIDGE_0_MAX_PARAMS_0_HAS_TRI 0
#define MM_BRIDGE_0_MAX_PARAMS_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_0_RESET_VALUE 0

/*
 * Macros for device 'max_params_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_MAX_PARAMS_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_MAX_PARAMS_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_MAX_PARAMS_1_COMPONENT_NAME max_params_1
#define MM_BRIDGE_0_MAX_PARAMS_1_BASE 0x79c0
#define MM_BRIDGE_0_MAX_PARAMS_1_SPAN 16
#define MM_BRIDGE_0_MAX_PARAMS_1_END 0x79cf
#define MM_BRIDGE_0_MAX_PARAMS_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_1_CAPTURE 0
#define MM_BRIDGE_0_MAX_PARAMS_1_DATA_WIDTH 32
#define MM_BRIDGE_0_MAX_PARAMS_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_MAX_PARAMS_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_MAX_PARAMS_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_1_FREQ 50000000
#define MM_BRIDGE_0_MAX_PARAMS_1_HAS_IN 1
#define MM_BRIDGE_0_MAX_PARAMS_1_HAS_OUT 0
#define MM_BRIDGE_0_MAX_PARAMS_1_HAS_TRI 0
#define MM_BRIDGE_0_MAX_PARAMS_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_1_RESET_VALUE 0

/*
 * Macros for device 'max_params_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_MAX_PARAMS_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_MAX_PARAMS_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_MAX_PARAMS_2_COMPONENT_NAME max_params_2
#define MM_BRIDGE_0_MAX_PARAMS_2_BASE 0x79e0
#define MM_BRIDGE_0_MAX_PARAMS_2_SPAN 16
#define MM_BRIDGE_0_MAX_PARAMS_2_END 0x79ef
#define MM_BRIDGE_0_MAX_PARAMS_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_2_CAPTURE 0
#define MM_BRIDGE_0_MAX_PARAMS_2_DATA_WIDTH 32
#define MM_BRIDGE_0_MAX_PARAMS_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_MAX_PARAMS_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_MAX_PARAMS_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_2_FREQ 50000000
#define MM_BRIDGE_0_MAX_PARAMS_2_HAS_IN 1
#define MM_BRIDGE_0_MAX_PARAMS_2_HAS_OUT 0
#define MM_BRIDGE_0_MAX_PARAMS_2_HAS_TRI 0
#define MM_BRIDGE_0_MAX_PARAMS_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_2_RESET_VALUE 0

/*
 * Macros for device 'max_params_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_MAX_PARAMS_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_MAX_PARAMS_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_MAX_PARAMS_3_COMPONENT_NAME max_params_3
#define MM_BRIDGE_0_MAX_PARAMS_3_BASE 0x7a00
#define MM_BRIDGE_0_MAX_PARAMS_3_SPAN 16
#define MM_BRIDGE_0_MAX_PARAMS_3_END 0x7a0f
#define MM_BRIDGE_0_MAX_PARAMS_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_3_CAPTURE 0
#define MM_BRIDGE_0_MAX_PARAMS_3_DATA_WIDTH 32
#define MM_BRIDGE_0_MAX_PARAMS_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_MAX_PARAMS_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_MAX_PARAMS_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_3_FREQ 50000000
#define MM_BRIDGE_0_MAX_PARAMS_3_HAS_IN 1
#define MM_BRIDGE_0_MAX_PARAMS_3_HAS_OUT 0
#define MM_BRIDGE_0_MAX_PARAMS_3_HAS_TRI 0
#define MM_BRIDGE_0_MAX_PARAMS_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_3_RESET_VALUE 0

/*
 * Macros for device 'max_params_4', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_MAX_PARAMS_4_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_MAX_PARAMS_4_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_MAX_PARAMS_4_COMPONENT_NAME max_params_4
#define MM_BRIDGE_0_MAX_PARAMS_4_BASE 0x7a20
#define MM_BRIDGE_0_MAX_PARAMS_4_SPAN 16
#define MM_BRIDGE_0_MAX_PARAMS_4_END 0x7a2f
#define MM_BRIDGE_0_MAX_PARAMS_4_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_MAX_PARAMS_4_CAPTURE 0
#define MM_BRIDGE_0_MAX_PARAMS_4_DATA_WIDTH 32
#define MM_BRIDGE_0_MAX_PARAMS_4_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_MAX_PARAMS_4_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_MAX_PARAMS_4_EDGE_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_4_FREQ 50000000
#define MM_BRIDGE_0_MAX_PARAMS_4_HAS_IN 1
#define MM_BRIDGE_0_MAX_PARAMS_4_HAS_OUT 0
#define MM_BRIDGE_0_MAX_PARAMS_4_HAS_TRI 0
#define MM_BRIDGE_0_MAX_PARAMS_4_IRQ_TYPE NONE
#define MM_BRIDGE_0_MAX_PARAMS_4_RESET_VALUE 0

/*
 * Macros for device 'max_timing_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_MAX_TIMING_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_MAX_TIMING_0_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_MAX_TIMING_0_COMPONENT_NAME max_timing_0
#define MM_BRIDGE_0_MAX_TIMING_0_BASE 0x7a40
#define MM_BRIDGE_0_MAX_TIMING_0_SPAN 16
#define MM_BRIDGE_0_MAX_TIMING_0_END 0x7a4f
#define MM_BRIDGE_0_MAX_TIMING_0_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_MAX_TIMING_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_MAX_TIMING_0_CAPTURE 0
#define MM_BRIDGE_0_MAX_TIMING_0_DATA_WIDTH 32
#define MM_BRIDGE_0_MAX_TIMING_0_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_MAX_TIMING_0_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_MAX_TIMING_0_EDGE_TYPE NONE
#define MM_BRIDGE_0_MAX_TIMING_0_FREQ 50000000
#define MM_BRIDGE_0_MAX_TIMING_0_HAS_IN 1
#define MM_BRIDGE_0_MAX_TIMING_0_HAS_OUT 0
#define MM_BRIDGE_0_MAX_TIMING_0_HAS_TRI 0
#define MM_BRIDGE_0_MAX_TIMING_0_IRQ_TYPE NONE
#define MM_BRIDGE_0_MAX_TIMING_0_RESET_VALUE 0

/*
 * Macros for device 'max_timing_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_MAX_TIMING_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_MAX_TIMING_1_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_MAX_TIMING_1_COMPONENT_NAME max_timing_1
#define MM_BRIDGE_0_MAX_TIMING_1_BASE 0x7a60
#define MM_BRIDGE_0_MAX_TIMING_1_SPAN 16
#define MM_BRIDGE_0_MAX_TIMING_1_END 0x7a6f
#define MM_BRIDGE_0_MAX_TIMING_1_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_MAX_TIMING_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_MAX_TIMING_1_CAPTURE 0
#define MM_BRIDGE_0_MAX_TIMING_1_DATA_WIDTH 32
#define MM_BRIDGE_0_MAX_TIMING_1_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_MAX_TIMING_1_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_MAX_TIMING_1_EDGE_TYPE NONE
#define MM_BRIDGE_0_MAX_TIMING_1_FREQ 50000000
#define MM_BRIDGE_0_MAX_TIMING_1_HAS_IN 1
#define MM_BRIDGE_0_MAX_TIMING_1_HAS_OUT 0
#define MM_BRIDGE_0_MAX_TIMING_1_HAS_TRI 0
#define MM_BRIDGE_0_MAX_TIMING_1_IRQ_TYPE NONE
#define MM_BRIDGE_0_MAX_TIMING_1_RESET_VALUE 0

/*
 * Macros for device 'max_timing_2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_MAX_TIMING_2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_MAX_TIMING_2_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_MAX_TIMING_2_COMPONENT_NAME max_timing_2
#define MM_BRIDGE_0_MAX_TIMING_2_BASE 0x7a80
#define MM_BRIDGE_0_MAX_TIMING_2_SPAN 16
#define MM_BRIDGE_0_MAX_TIMING_2_END 0x7a8f
#define MM_BRIDGE_0_MAX_TIMING_2_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_MAX_TIMING_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_MAX_TIMING_2_CAPTURE 0
#define MM_BRIDGE_0_MAX_TIMING_2_DATA_WIDTH 32
#define MM_BRIDGE_0_MAX_TIMING_2_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_MAX_TIMING_2_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_MAX_TIMING_2_EDGE_TYPE NONE
#define MM_BRIDGE_0_MAX_TIMING_2_FREQ 50000000
#define MM_BRIDGE_0_MAX_TIMING_2_HAS_IN 1
#define MM_BRIDGE_0_MAX_TIMING_2_HAS_OUT 0
#define MM_BRIDGE_0_MAX_TIMING_2_HAS_TRI 0
#define MM_BRIDGE_0_MAX_TIMING_2_IRQ_TYPE NONE
#define MM_BRIDGE_0_MAX_TIMING_2_RESET_VALUE 0

/*
 * Macros for device 'max_timing_3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_MAX_TIMING_3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_MAX_TIMING_3_COMPONENT_TYPE altera_avalon_pio
#define MM_BRIDGE_0_MAX_TIMING_3_COMPONENT_NAME max_timing_3
#define MM_BRIDGE_0_MAX_TIMING_3_BASE 0x7aa0
#define MM_BRIDGE_0_MAX_TIMING_3_SPAN 16
#define MM_BRIDGE_0_MAX_TIMING_3_END 0x7aaf
#define MM_BRIDGE_0_MAX_TIMING_3_BIT_CLEARING_EDGE_REGISTER 0
#define MM_BRIDGE_0_MAX_TIMING_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_BRIDGE_0_MAX_TIMING_3_CAPTURE 0
#define MM_BRIDGE_0_MAX_TIMING_3_DATA_WIDTH 32
#define MM_BRIDGE_0_MAX_TIMING_3_DO_TEST_BENCH_WIRING 0
#define MM_BRIDGE_0_MAX_TIMING_3_DRIVEN_SIM_VALUE 0
#define MM_BRIDGE_0_MAX_TIMING_3_EDGE_TYPE NONE
#define MM_BRIDGE_0_MAX_TIMING_3_FREQ 50000000
#define MM_BRIDGE_0_MAX_TIMING_3_HAS_IN 1
#define MM_BRIDGE_0_MAX_TIMING_3_HAS_OUT 0
#define MM_BRIDGE_0_MAX_TIMING_3_HAS_TRI 0
#define MM_BRIDGE_0_MAX_TIMING_3_IRQ_TYPE NONE
#define MM_BRIDGE_0_MAX_TIMING_3_RESET_VALUE 0

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'mm_bridge_0'.
 * The macros are prefixed with 'MM_BRIDGE_0_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_BRIDGE_0_ILC_COMPONENT_TYPE interrupt_latency_counter
#define MM_BRIDGE_0_ILC_COMPONENT_NAME ILC
#define MM_BRIDGE_0_ILC_BASE 0x30000
#define MM_BRIDGE_0_ILC_SPAN 256
#define MM_BRIDGE_0_ILC_END 0x300ff


#endif /* _ALTERA_SOC_SYSTEM_H_ */
